libgdal.so.20 libgdal20 #MINVER#
| libgdal20 #MINVER#, gdal-abi-2-2-2
#include "libgdal20.symbols.common"
 (c++)"CPLOPrintf(char const*, ...)@Base" 2.2.0 1
 (c++)"GetVersion()@Base" 2.2.0 1
 (c++)"CPLOvPrintf(char const*, std::__va_list)@Base" 2.2.0 1
 (c++)"OpenCADFile(CADFileIO*, CADFile::OpenOptions, bool)@Base" 2.2.0 1
 (c++)"OpenCADFile(char const*, CADFile::OpenOptions, bool)@Base" 2.2.0 1
 (c++)"PamGetProxy(char const*)@Base" 1.8.0 1
 (c++)"CPLURLAddKVP(char const*, char const*, char const*)@Base" 1.9.0 1
 (c++)"OGRJSonParse(char const*, json_object**, bool)@Base" 2.2.0 1
 (c++)"GetCADFormats()@Base" 2.2.0 1
 (c++)"CPLURLGetValue(char const*, char const*)@Base" 1.9.0 1
 (c++)"HFACreateLayer(hfainfo*, HFAEntry*, char const*, int, int, int, int, int, int, int, EPTType, char**, long long, long long, int, int)@Base" 2.1.0 1
 (c++)"IdentifyCADFile(CADFileIO*, bool)@Base" 2.2.0 1
 (c++)"OGRGetDayOfWeek(int, int, int)@Base" 1.8.0 1
 (c++)"OGRWktReadToken(char const*, char*)@Base" 1.8.0 1
 (c++)"PamCleanProxyDB()@Base" 1.8.0 1
 (c++)"GetDefaultFileIO(char const*)@Base" 2.2.0 1
 (c++)"GetLastErrorCode()@Base" 2.2.0 1
 (c++)"GetVersionString()@Base" 2.2.0 1
 (c++)"OGRToOGCGeomType(OGRwkbGeometryType)@Base" 1.8.0 1
 (c++)"OGRWktReadPoints(char const*, OGRRawPoint**, double**, int*, int*)@Base" 1.8.0 1
 (c++)"PamAllocateProxy(char const*)@Base" 1.8.0 1
 (c++)"OGRGetXMLDateTime(OGRField const*)@Base" 2.0.1 1
 (c++)"OGRWktReadPointsM(char const*, OGRRawPoint**, double**, double**, int*, int*, int*)@Base" 2.1.0 1
 (c++)"PamParseHistogram(CPLXMLNode*, double*, double*, int*, unsigned long long**, int*, int*)@Base" 2.0.1 1
 (c++)"OGRFromOGCGeomType(char const*)@Base" 1.8.0 1
 (c++)"OGRUpdateFieldType(OGRFieldDefn*, OGRFieldType, OGRFieldSubType)@Base" 2.1.0 1
 (c++)"OGRWriteToShapeBin(OGRGeometry*, unsigned char**, int*)@Base" 1.9.0 1
 (c++)"CPLUnixTimeToYMDHMS(long long, tm*)@Base" 1.8.0 1
 (c++)"CPLYMDHMSToUnixTime(tm const*)@Base" 1.8.0 1
 (c++)"OGRCheckPermutation(int*, int)@Base" 1.9.0 1
 (c++)"OGRGeometryFromEWKB(unsigned char*, int, int*, int)@Base" 2.0.1 1
 (c++)"OGRInitializeXerces()@Base" 2.2.0 1
 (c++)"OGRParseXMLDateTime(char const*, OGRField*)@Base" 2.0.1 1
 (c++)"OSRGetEllipsoidInfo(int, char**, double*, double*)@Base" 1.8.0 1
 (c++)"VSICreateCachedFile(VSIVirtualHandle*, unsigned int, unsigned int)@Base" 2.1.1 1
 (c++)"GDALCloneTransformer(void*)@Base" 1.10.1 1
 (c++)"OGRGeometryToHexEWKB(OGRGeometry*, int, int, int)@Base" 2.1.0 1
 (c++)"OGRGetRFC822DateTime(OGRField const*)@Base" 2.0.1 1
 (c++)"OGRMakeWktCoordinate(char*, double, double, double, int)@Base" 1.8.0 1
 (c++)"OGRCreateFromShapeBin(unsigned char*, OGRGeometry**, int)@Base" 1.9.0 1
 (c++)"OGRDeinitializeXerces()@Base" 2.2.0 1
 (c++)"OGRMakeWktCoordinateM(char*, double, double, double, double, int, int)@Base" 2.1.0 1
 (c++)"PamHistogramToXMLTree(double, double, int, unsigned long long*, int, int)@Base" 2.0.1 1
 (c++)"VSICreateGZipWritable(VSIVirtualHandle*, int, int)@Base" 2.0.1 1
 (c++)"OGRGeometryFromHexEWKB(char const*, int*, int)@Base" 2.0.1 1
 (c++)"OGRPGCommonLaunderName(char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRParseRFC822DateTime(char const*, OGRField*)@Base" 2.0.1 1
 (c++)"OGRCreateExpatXMLParser()@Base" 1.8.0 1
 (c++)"OGRPGCommonLayerGetType(OGRFieldDefn&, bool, bool)@Base" 2.2.0 1
 (c++)"OGRPGCommonLayerSetType(OGRFieldDefn&, char const*, char const*, int)@Base" 2.0.1 1
 (c++)"MITABCoordSys2SpatialRef(char const*)@Base" 1.8.0 1
 (c++)"MITABSpatialRef2CoordSys(OGRSpatialReference*)@Base" 1.8.0 1
 (c++)"PamFindMatchingHistogram(CPLXMLNode*, double, double, int, int, int)@Base" 1.8.0 1
 (c++)"CPL_json_object_object_get(json_object*, char const*)@Base" 2.2.0 1
 (c++)"OGRCreateDefaultLayerIndex()@Base" 1.8.0 1
 (c++)"OGRGeneralCmdLineProcessor(int, char***, int)@Base" 1.8.0 1
 (c++)"S57GenerateDSIDFeatureDefn()@Base" 1.8.0 1
 (c++)"S57GenerateGeomFeatureDefn(OGRwkbGeometryType, int)@Base" 1.8.0 1
 (c++)"S57GenerateObjectClassDefn(S57ClassRegistrar*, S57ClassContentExplorer*, int, int)@Base" 1.11.0 1
 (c++)"OGRPGCommonAppendFieldValue(CPLString&, OGRFeature*, int, CPLString (*)(void*, char const*, int, char const*, char const*), void*)@Base" 2.0.1 1
 (c++)"OGRGetXML_UTF8_EscapedString(char const*)@Base" 1.8.0 1
 (c++)"OGRPGCommonLayerGetPGDefault(OGRFieldDefn*)@Base" 2.0.1 1
 (c++)"OGRWriteMultiPatchToShapeBin(OGRGeometry*, unsigned char**, int*)@Base" 1.11.0 1
 (c++)"S57GenerateStandardAttributes(OGRFeatureDefn*, int)@Base" 1.8.0 1
 (c++)"VSICreateBufferedReaderHandle(VSIVirtualHandle*)@Base" 2.0.1 1
 (c++)"GDALRegenerateOverviewsMultiBand(int, GDALRasterBand**, int, GDALRasterBand***, char const*, int (*)(double, char const*, void*), void*)@Base" 2.1.0 1
 (c++)"OGRPGCommonLayerNormalizeDefault(OGRFieldDefn*, char const*)@Base" 2.0.1 1
 (c++)"OGRCreateCoordinateTransformation(OGRSpatialReference*, OGRSpatialReference*)@Base" 1.8.0 1
 (c++)"OGRPGCommonAppendCopyFieldsExceptGeom(CPLString&, OGRFeature*, char const*, bool, CPLString (*)(void*, char const*, int, char const*, char const*), void*)@Base" 2.2.0 1
 (c++)"S57GenerateVectorPrimitiveFeatureDefn(int, int)@Base" 1.8.0 1
 (c++)"OGRCreateEmulatedTransactionDataSourceWrapper(OGRDataSource*, IOGRTransactionBehaviour*, int, int)@Base" 2.0.1 1
 (c++)"AIGDataset::GetFileList()@Base" 1.8.0 1
 (c++)"AIGDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"AIGDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"AIGDataset::TranslateColorTable(char const*)@Base" 1.8.0 1
 (c++)"AIGDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"AIGDataset::ReadRAT()@Base" 1.8.0 1
 (c++)"AIGDataset::AIGDataset()@Base" 1.8.0 1
 (c++)"AIGDataset::AIGDataset()@Base" 1.8.0 1
 (c++)"AIGDataset::~AIGDataset()@Base" 1.8.0 1
 (c++)"AIGDataset::~AIGDataset()@Base" 1.8.0 1
 (c++)"AIGDataset::~AIGDataset()@Base" 1.8.0 1
 (c++)"CADClasses::addClass(CADClass)@Base" 2.2.0 1
 (c++)"CADClasses::CADClasses()@Base" 2.2.0 1
 (c++)"CADClasses::CADClasses()@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(char const*)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(CADHandle const&)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(CADVariant const&)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(double)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(double, double, double)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(int)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(long)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(short)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant()@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(char const*)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(CADHandle const&)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(CADVariant const&)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(double)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(double, double, double)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(int)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(long)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant(short)@Base" 2.2.0 1
 (c++)"CADVariant::CADVariant()@Base" 2.2.0 1
 (c++)"CADVariant::~CADVariant()@Base" 2.2.0 1
 (c++)"CADVariant::~CADVariant()@Base" 2.2.0 1
 (c++)"CADVariant::operator=(CADVariant const&)@Base" 2.2.0 1
 (c++)"CADXRecord::setRecordData(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CADXRecord::CADXRecord()@Base" 2.2.0 1
 (c++)"CADXRecord::CADXRecord()@Base" 2.2.0 1
 (c++)"CADXRecord::~CADXRecord()@Base" 2.2.0 1
 (c++)"CADXRecord::~CADXRecord()@Base" 2.2.0 1
 (c++)"CADXRecord::~CADXRecord()@Base" 2.2.0 1
 (c++)"CPLLocaleC::CPLLocaleC()@Base" 1.8.0 1
 (c++)"CPLLocaleC::CPLLocaleC()@Base" 1.8.0 1
 (c++)"CPLLocaleC::~CPLLocaleC()@Base" 1.8.0 1
 (c++)"CPLLocaleC::~CPLLocaleC()@Base" 1.8.0 1
 (c++)"GDALDriver::CreateCopy(char const*, GDALDataset*, int, char**, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALDriver::QuietDelete(char const*)@Base" 1.8.0 1
 (c++)"GDALDriver::DefaultRename(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALDriver::SetMetadataItem(char const*, char const*, char const*)@Base" 2.0.1 1
 (c++)"GDALDriver::DefaultCopyFiles(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALDriver::DefaultCopyMasks(GDALDataset*, GDALDataset*, int)@Base" 1.8.0 1
 (c++)"GDALDriver::DefaultCreateCopy(char const*, GDALDataset*, int, char**, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALDriver::Create(char const*, int, int, int, GDALDataType, char**)@Base" 1.8.0 1
 (c++)"GDALDriver::Delete(char const*)@Base" 1.8.0 1
 (c++)"GDALDriver::Rename(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALDriver::CopyFiles(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALDriver::GDALDriver()@Base" 1.8.0 1
 (c++)"GDALDriver::GDALDriver()@Base" 1.8.0 1
 (c++)"GDALDriver::~GDALDriver()@Base" 1.8.0 1
 (c++)"GDALDriver::~GDALDriver()@Base" 1.8.0 1
 (c++)"GDALDriver::~GDALDriver()@Base" 1.8.0 1
 (c++)"GDALJP2Box::IsSuperBox()@Base" 1.8.0 1
 (c++)"GDALJP2Box::AppendUInt8(unsigned char)@Base" 2.0.1 1
 (c++)"GDALJP2Box::ReadBoxData()@Base" 1.8.0 1
 (c++)"GDALJP2Box::AppendUInt16(unsigned short)@Base" 2.0.1 1
 (c++)"GDALJP2Box::AppendUInt32(unsigned int)@Base" 2.0.1 1
 (c++)"GDALJP2Box::CreateLblBox(char const*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::DumpReadable(_IO_FILE*, int)@Base" 1.10.1 1
 (c++)"GDALJP2Box::CreateAsocBox(int, GDALJP2Box**)@Base" 1.8.0 1
 (c++)"GDALJP2Box::CreateUUIDBox(unsigned char const*, int, unsigned char const*)@Base" 2.0.1 1
 (c++)"GDALJP2Box::GetDataLength()@Base" 1.8.0 1
 (c++)"GDALJP2Box::ReadNextChild(GDALJP2Box*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::CreateSuperBox(char const*, int, GDALJP2Box**)@Base" 2.0.1 1
 (c++)"GDALJP2Box::ReadFirstChild(GDALJP2Box*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::SetWritableData(int, unsigned char const*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::AppendWritableData(int, void const*)@Base" 2.0.1 1
 (c++)"GDALJP2Box::CreateLabelledXMLAssoc(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::ReadBox()@Base" 1.8.0 1
 (c++)"GDALJP2Box::SetType(char const*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::ReadNext()@Base" 1.8.0 1
 (c++)"GDALJP2Box::ReadFirst()@Base" 1.8.0 1
 (c++)"GDALJP2Box::SetOffset(long long)@Base" 1.8.0 1
 (c++)"GDALJP2Box::GDALJP2Box(_IO_FILE*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::GDALJP2Box(_IO_FILE*)@Base" 1.8.0 1
 (c++)"GDALJP2Box::~GDALJP2Box()@Base" 1.8.0 1
 (c++)"GDALJP2Box::~GDALJP2Box()@Base" 1.8.0 1
 (c++)"GMLFeature::AddGeometry(CPLXMLNode*)@Base" 1.9.0 1
 (c++)"GMLFeature::AddOBProperty(char const*, char const*)@Base" 1.8.0 1
 (c++)"GMLFeature::GetOBProperty(char const*)@Base" 1.8.0 1
 (c++)"GMLFeature::GetOBProperties()@Base" 1.8.0 1
 (c++)"GMLFeature::SetGeometryDirectly(CPLXMLNode*)@Base" 1.9.0 1
 (c++)"GMLFeature::SetGeometryDirectly(int, CPLXMLNode*)@Base" 1.11.0 1
 (c++)"GMLFeature::SetPropertyDirectly(int, char*)@Base" 1.9.0 1
 (c++)"GMLFeature::Dump(_IO_FILE*)@Base" 1.8.0 1
 (c++)"GMLFeature::SetFID(char const*)@Base" 1.8.0 1
 (c++)"GMLFeature::GMLFeature(GMLFeatureClass*)@Base" 1.8.0 1
 (c++)"GMLFeature::GMLFeature(GMLFeatureClass*)@Base" 1.8.0 1
 (c++)"GMLFeature::~GMLFeature()@Base" 1.8.0 1
 (c++)"GMLFeature::~GMLFeature()@Base" 1.8.0 1
 (c++)"GNMNetwork::GetFileList()@Base" 2.2.0 1
 (c++)"GNMNetwork::GetProjectionRef()@Base" 2.2.0 1
 (c++)"GNMNetwork::GNMNetwork()@Base" 2.2.0 1
 (c++)"GNMNetwork::GNMNetwork()@Base" 2.2.0 1
 (c++)"GNMNetwork::~GNMNetwork()@Base" 2.2.0 1
 (c++)"GNMNetwork::~GNMNetwork()@Base" 2.2.0 1
 (c++)"GNMNetwork::~GNMNetwork()@Base" 2.2.0 1
 (c++)"IGMLReader::SetGlobalSRSName(char const*)@Base" 1.10.1 1
 (c++)"IGMLReader::SetFP(_IO_FILE*)@Base" 1.10.1 1
 (c++)"IGMLReader::~IGMLReader()@Base" 1.8.0 1
 (c++)"IGMLReader::~IGMLReader()@Base" 1.8.0 1
 (c++)"IGMLReader::~IGMLReader()@Base" 1.8.0 1
 (c++)"MAPDataset::GetFileList()@Base" 1.10.1 1
 (c++)"MAPDataset::GetGCPCount()@Base" 1.10.1 1
 (c++)"MAPDataset::GetGeoTransform(double*)@Base" 1.10.1 1
 (c++)"MAPDataset::GetGCPProjection()@Base" 1.10.1 1
 (c++)"MAPDataset::GetProjectionRef()@Base" 1.10.1 1
 (c++)"MAPDataset::CloseDependentDatasets()@Base" 1.10.1 1
 (c++)"MAPDataset::Open(GDALOpenInfo*)@Base" 1.10.1 1
 (c++)"MAPDataset::GetGCPs()@Base" 1.10.1 1
 (c++)"MAPDataset::Identify(GDALOpenInfo*)@Base" 1.10.1 1
 (c++)"MAPDataset::MAPDataset()@Base" 1.10.1 1
 (c++)"MAPDataset::MAPDataset()@Base" 1.10.1 1
 (c++)"MAPDataset::~MAPDataset()@Base" 1.10.1 1
 (c++)"MAPDataset::~MAPDataset()@Base" 1.10.1 1
 (c++)"MAPDataset::~MAPDataset()@Base" 1.10.1 1
 (c++)"MEMDataset::GetGCPCount()@Base" 1.8.0 1
 (c++)"MEMDataset::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"MEMDataset::CreateMaskBand(int)@Base" 2.2.0 1
 (c++)"MEMDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"MEMDataset::IBuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 2.2.0 1
 (c++)"MEMDataset::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"MEMDataset::GetGCPProjection()@Base" 1.8.0 1
 (c++)"MEMDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"MEMDataset::GetInternalHandle(char const*)@Base" 1.8.0 1
 (c++)"MEMDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"MEMDataset::Create(char const*, int, int, int, GDALDataType, char**)@Base" 1.8.0 1
 (c++)"MEMDataset::AddBand(GDALDataType, char**)@Base" 1.8.0 1
 (c++)"MEMDataset::GetGCPs()@Base" 1.8.0 1
 (c++)"MEMDataset::SetGCPs(int, GDAL_GCP const*, char const*)@Base" 1.8.0 1
 (c++)"MEMDataset::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"MEMDataset::MEMDataset()@Base" 1.8.0 1
 (c++)"MEMDataset::MEMDataset()@Base" 1.8.0 1
 (c++)"MEMDataset::~MEMDataset()@Base" 1.8.0 1
 (c++)"MEMDataset::~MEMDataset()@Base" 1.8.0 1
 (c++)"MEMDataset::~MEMDataset()@Base" 1.8.0 1
 (c++)"OGRFeature::IsFieldSet(int)@Base" 1.11.0 1
 (c++)"OGRFeature::UnsetField(int)@Base" 1.8.0 1
 (c++)"OGRFeature::IsFieldNull(int)@Base" 2.2.0 1
 (c++)"OGRFeature::RemapFields(OGRFeatureDefn*, int*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetGeometry(OGRGeometry const*)@Base" 2.2.0 1
 (c++)"OGRFeature::DumpReadable(_IO_FILE*, char**)@Base" 1.8.0 1
 (c++)"OGRFeature::SetFieldNull(int)@Base" 2.2.0 1
 (c++)"OGRFeature::SetGeomField(int, OGRGeometry const*)@Base" 2.2.0 1
 (c++)"OGRFeature::CreateFeature(OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"OGRFeature::GetStyleTable()@Base" 1.8.0 1
 (c++)"OGRFeature::SetFieldsFrom(OGRFeature*, int*, int)@Base" 1.10.1 1
 (c++)"OGRFeature::SetNativeData(char const*)@Base" 2.1.0 1
 (c++)"OGRFeature::SetStyleTable(OGRStyleTable*)@Base" 1.8.0 1
 (c++)"OGRFeature::StealGeometry(int)@Base" 1.11.0 1
 (c++)"OGRFeature::StealGeometry()@Base" 1.8.0 1
 (c++)"OGRFeature::DestroyFeature(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRFeature::GetGeometryRef()@Base" 1.11.0 1
 (c++)"OGRFeature::GetStyleString()@Base" 1.8.0 1
 (c++)"OGRFeature::SetStyleString(char const*)@Base" 1.8.0 1
 (c++)"OGRFeature::GetGeomFieldRef(char const*)@Base" 1.11.0 1
 (c++)"OGRFeature::GetGeomFieldRef(int)@Base" 1.11.0 1
 (c++)"OGRFeature::RemapGeomFields(OGRFeatureDefn*, int*)@Base" 1.11.0 1
 (c++)"OGRFeature::GetFieldAsBinary(int, int*)@Base" 1.8.0 1
 (c++)"OGRFeature::GetFieldAsDouble(int)@Base" 1.8.0 1
 (c++)"OGRFeature::GetFieldAsString(char const*)@Base" 2.2.0 1
 (c++)"OGRFeature::GetFieldAsString(int)@Base" 1.8.0 1
 (c++)"OGRFeature::SetFieldInternal(int, OGRField*)@Base" 2.1.0 1
 (c++)"OGRFeature::GetFieldAsInteger(int)@Base" 1.8.0 1
 (c++)"OGRFeature::GetFieldAsDateTime(int, int*, int*, int*, int*, int*, float*, int*)@Base" 2.0.1 1
 (c++)"OGRFeature::GetFieldAsDateTime(int, int*, int*, int*, int*, int*, int*, int*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetNativeMediaType(char const*)@Base" 2.1.0 1
 (c++)"OGRFeature::GetFieldAsInteger64(int)@Base" 2.0.1 1
 (c++)"OGRFeature::SetGeometryDirectly(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRFeature::FillUnsetWithDefault(int, char**)@Base" 2.0.1 1
 (c++)"OGRFeature::GetFieldAsDoubleList(int, int*)@Base" 1.8.0 1
 (c++)"OGRFeature::GetFieldAsStringList(int)@Base" 1.11.0 1
 (c++)"OGRFeature::IsFieldSetAndNotNull(int)@Base" 2.2.0 1
 (c++)"OGRFeature::SetGeomFieldDirectly(int, OGRGeometry*)@Base" 1.11.0 1
 (c++)"OGRFeature::GetFieldAsIntegerList(int, int*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetStyleTableDirectly(OGRStyleTable*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetStyleStringDirectly(char*)@Base" 1.8.0 1
 (c++)"OGRFeature::GetFieldAsInteger64List(int, int*)@Base" 2.0.1 1
 (c++)"OGRFeature::GetFieldAsSerializedJSon(int)@Base" 2.2.0 1
 (c++)"OGRFeature::Clone()@Base" 1.8.0 1
 (c++)"OGRFeature::Equal(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetFID(long long)@Base" 2.0.1 1
 (c++)"OGRFeature::SetFrom(OGRFeature*, int*, int)@Base" 1.8.0 1
 (c++)"OGRFeature::SetFrom(OGRFeature*, int)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(char const*, char const*)@Base" 1.11.0 1
 (c++)"OGRFeature::SetField(int, OGRField*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, char const*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, char**)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, double)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, int)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, int, long long const*)@Base" 2.0.1 1
 (c++)"OGRFeature::SetField(int, int, double*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, int, unsigned char*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, int, int*)@Base" 1.8.0 1
 (c++)"OGRFeature::SetField(int, int, int, int, int, int, float, int)@Base" 2.0.1 1
 (c++)"OGRFeature::SetField(int, long long)@Base" 2.0.1 1
 (c++)"OGRFeature::Validate(int, int)@Base" 2.0.1 1
 (c++)"OGRFeature::OGRFeature(OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"OGRFeature::OGRFeature(OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"OGRFeature::~OGRFeature()@Base" 1.8.0 1
 (c++)"OGRFeature::~OGRFeature()@Base" 1.8.0 1
 (c++)"OGRFeature::~OGRFeature()@Base" 1.8.0 1
 (c++)"OGRPolygon::closeRings()@Base" 1.8.0 1
 (c++)"OGRPolygon::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRPolygon::importFromWkt(char**)@Base" 1.8.0 1
 (c++)"OGRPolygon::getExteriorRing()@Base" 1.8.0 1
 (c++)"OGRPolygon::getInteriorRing(int)@Base" 1.8.0 1
 (c++)"OGRPolygon::stealExteriorRing()@Base" 1.11.0 1
 (c++)"OGRPolygon::stealInteriorRing(int)@Base" 1.11.0 1
 (c++)"OGRPolygon::CastToCurvePolygon(OGRPolygon*)@Base" 2.0.1 1
 (c++)"OGRPolygon::importFromWKTListOnly(char**, int, int, OGRRawPoint*&, int&, double*&)@Base" 2.0.1 1
 (c++)"OGRPolygon::OGRPolygon(OGRPolygon const&)@Base" 2.1.0 1
 (c++)"OGRPolygon::OGRPolygon()@Base" 1.8.0 1
 (c++)"OGRPolygon::OGRPolygon(OGRPolygon const&)@Base" 2.1.0 1
 (c++)"OGRPolygon::OGRPolygon()@Base" 1.8.0 1
 (c++)"OGRPolygon::~OGRPolygon()@Base" 1.8.0 1
 (c++)"OGRPolygon::~OGRPolygon()@Base" 1.8.0 1
 (c++)"OGRPolygon::~OGRPolygon()@Base" 1.8.0 1
 (c++)"OGRPolygon::operator=(OGRPolygon const&)@Base" 2.1.0 1
 (c++)"OGRSurface::CastToPolygon(OGRSurface*)@Base" 2.0.1 1
 (c++)"OGRSurface::CastToCurvePolygon(OGRSurface*)@Base" 2.0.1 1
 (c++)"RawDataset::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"RawDataset::RawDataset()@Base" 1.8.0 1
 (c++)"RawDataset::RawDataset()@Base" 1.8.0 1
 (c++)"RawDataset::~RawDataset()@Base" 1.8.0 1
 (c++)"RawDataset::~RawDataset()@Base" 1.8.0 1
 (c++)"RawDataset::~RawDataset()@Base" 1.8.0 1
 (c++)"TILDataset::GetFileList()@Base" 1.9.0 1
 (c++)"TILDataset::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"TILDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"TILDataset::Identify(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"TILDataset::TILDataset()@Base" 1.8.0 1
 (c++)"TILDataset::TILDataset()@Base" 1.8.0 1
 (c++)"TILDataset::~TILDataset()@Base" 1.8.0 1
 (c++)"TILDataset::~TILDataset()@Base" 1.8.0 1
 (c++)"TILDataset::~TILDataset()@Base" 1.8.0 1
 (c++)"VRTDataset::FlushCache()@Base" 1.8.0 1
 (c++)"VRTDataset::GetFileList()@Base" 1.8.0 1
 (c++)"VRTDataset::GetGCPCount()@Base" 1.8.0 1
 (c++)"VRTDataset::GetMetadata(char const*)@Base" 2.1.0 1
 (c++)"VRTDataset::SetMaskBand(VRTRasterBand*)@Base" 1.8.0 1
 (c++)"VRTDataset::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::CreateMaskBand(int)@Base" 1.8.0 1
 (c++)"VRTDataset::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"VRTDataset::IBuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 2.1.0 1
 (c++)"VRTDataset::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"VRTDataset::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::GetGCPProjection()@Base" 1.8.0 1
 (c++)"VRTDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"VRTDataset::BuildVirtualOverviews()@Base" 2.1.0 1
 (c++)"VRTDataset::GetSingleSimpleSource()@Base" 1.10.1 1
 (c++)"VRTDataset::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"VRTDataset::CheckCompatibleForDatasetIO()@Base" 1.9.0 1
 (c++)"VRTDataset::UnsetPreservedRelativeFilenames()@Base" 2.0.1 1
 (c++)"VRTDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"VRTDataset::Create(char const*, int, int, int, GDALDataType, char**)@Base" 1.8.0 1
 (c++)"VRTDataset::Delete(char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::AddBand(GDALDataType, char**)@Base" 1.8.0 1
 (c++)"VRTDataset::GetGCPs()@Base" 1.8.0 1
 (c++)"VRTDataset::OpenXML(char const*, char const*, GDALAccess)@Base" 1.8.0 1
 (c++)"VRTDataset::SetGCPs(int, GDAL_GCP const*, char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTDataset::Identify(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"VRTDataset::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTDataset::VRTDataset(int, int)@Base" 1.8.0 1
 (c++)"VRTDataset::VRTDataset(int, int)@Base" 1.8.0 1
 (c++)"VRTDataset::~VRTDataset()@Base" 1.8.0 1
 (c++)"VRTDataset::~VRTDataset()@Base" 1.8.0 1
 (c++)"VRTDataset::~VRTDataset()@Base" 1.8.0 1
 (c++)"WCSDataset::GetCoverage(int, int, int, int, int, int, int, int*, CPLHTTPResult**)@Base" 1.8.0 1
 (c++)"WCSDataset::GetFileList()@Base" 1.9.0 1
 (c++)"WCSDataset::GetMetadata(char const*)@Base" 1.9.0 1
 (c++)"WCSDataset::ProcessError(CPLHTTPResult*)@Base" 1.8.0 1
 (c++)"WCSDataset::DirectRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"WCSDataset::GDALOpenResult(CPLHTTPResult*)@Base" 1.8.0 1
 (c++)"WCSDataset::TestUseBlockIO(int, int, int, int, int, int)@Base" 1.8.0 1
 (c++)"WCSDataset::ExtractGridInfo()@Base" 1.8.0 1
 (c++)"WCSDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"WCSDataset::DescribeCoverage()@Base" 1.8.0 1
 (c++)"WCSDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"WCSDataset::FlushMemoryResult()@Base" 1.8.0 1
 (c++)"WCSDataset::ExtractGridInfo100()@Base" 1.8.0 1
 (c++)"WCSDataset::GetMetadataDomainList()@Base" 1.11.0 1
 (c++)"WCSDataset::EstablishRasterDetails()@Base" 1.8.0 1
 (c++)"WCSDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"WCSDataset::Identify(GDALOpenInfo*)@Base" 1.9.0 1
 (c++)"WCSDataset::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"WCSDataset::WCSDataset()@Base" 1.8.0 1
 (c++)"WCSDataset::WCSDataset()@Base" 1.8.0 1
 (c++)"WCSDataset::~WCSDataset()@Base" 1.8.0 1
 (c++)"WCSDataset::~WCSDataset()@Base" 1.8.0 1
 (c++)"WCSDataset::~WCSDataset()@Base" 1.8.0 1
 (c++)"AAIGDataset::CommonOpen(GDALOpenInfo*, GridFormat)@Base" 1.9.0 1
 (c++)"AAIGDataset::CreateCopy(char const*, GDALDataset*, int, char**, int (*)(double, char const*, void*), void*)@Base" 1.9.0 1
 (c++)"AAIGDataset::GetFileList()@Base" 1.8.0 1
 (c++)"AAIGDataset::ParseHeader(char const*, char const*)@Base" 1.9.0 1
 (c++)"AAIGDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"AAIGDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"AAIGDataset::Getc()@Base" 1.8.0 1
 (c++)"AAIGDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"AAIGDataset::Seek(unsigned long long)@Base" 1.8.0 1
 (c++)"AAIGDataset::Tell()@Base" 1.8.0 1
 (c++)"AAIGDataset::Identify(GDALOpenInfo*)@Base" 1.9.0 1
 (c++)"AAIGDataset::AAIGDataset()@Base" 1.8.0 1
 (c++)"AAIGDataset::AAIGDataset()@Base" 1.8.0 1
 (c++)"AAIGDataset::~AAIGDataset()@Base" 1.8.0 1
 (c++)"AAIGDataset::~AAIGDataset()@Base" 1.8.0 1
 (c++)"AAIGDataset::~AAIGDataset()@Base" 1.8.0 1
 (c++)"GDALDataset::AdviseRead(int, int, int, int, int, int, GDALDataType, int, int*, char**)@Base" 1.8.0 1
 (c++)"GDALDataset::ExecuteSQL(char const*, OGRGeometry*, char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ExecuteSQL(char const*, OGRGeometry*, char const*, swq_select_parse_options*)@Base" 2.0.1 1
 (c++)"GDALDataset::FlushCache()@Base" 1.8.0 1
 (c++)"GDALDataset::InitRWLock()@Base" 2.1.2 1
 (c++)"GDALDataset::ReleaseRef()@Base" 2.2.0 1
 (c++)"GDALDataset::CreateLayer(char const*, OGRSpatialReference*, OGRwkbGeometryType, char**)@Base" 2.0.1 1
 (c++)"GDALDataset::DeleteLayer(int)@Base" 2.0.1 1
 (c++)"GDALDataset::Dereference()@Base" 1.8.0 1
 (c++)"GDALDataset::GetFileList()@Base" 1.8.0 1
 (c++)"GDALDataset::GetGCPCount()@Base" 1.8.0 1
 (c++)"GDALDataset::GetMetadata(char const*)@Base" 2.2.0 1
 (c++)"GDALDataset::ReportError(CPLErr, int, char const*, ...)@Base" 1.9.0 1
 (c++)"GDALDataset::AcquireMutex()@Base" 2.1.0 1
 (c++)"GDALDataset::ICreateLayer(char const*, OGRSpatialReference*, OGRwkbGeometryType, char**)@Base" 2.0.1 1
 (c++)"GDALDataset::MarkAsShared()@Base" 1.8.0 1
 (c++)"GDALDataset::ReleaseMutex()@Base" 2.1.0 1
 (c++)"GDALDataset::ResetReading()@Base" 2.2.0 1
 (c++)"GDALDataset::GetDriverName()@Base" 2.0.1 1
 (c++)"GDALDataset::GetLayerCount()@Base" 2.0.1 1
 (c++)"GDALDataset::GetRasterBand(int)@Base" 1.8.0 1
 (c++)"GDALDataset::GetStyleTable()@Base" 2.0.1 1
 (c++)"GDALDataset::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"GDALDataset::SetStyleTable(OGRStyleTable*)@Base" 2.0.1 1
 (c++)"GDALDataset::BuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALDataset::BuildParseInfo(swq_select*, swq_select_parse_options*)@Base" 2.0.1 1
 (c++)"GDALDataset::CreateMaskBand(int)@Base" 1.8.0 1
 (c++)"GDALDataset::EndAsyncReader(GDALAsyncReader*)@Base" 1.8.0 1
 (c++)"GDALDataset::EnterReadWrite(GDALRWFlag)@Base" 2.0.1 1
 (c++)"GDALDataset::GetLayerByName(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::GetNextFeature(OGRLayer**, double*, int (*)(double, char const*, void*), void*)@Base" 2.2.0 1
 (c++)"GDALDataset::GetRasterCount()@Base" 1.8.0 1
 (c++)"GDALDataset::GetRasterXSize()@Base" 1.8.0 1
 (c++)"GDALDataset::GetRasterYSize()@Base" 1.8.0 1
 (c++)"GDALDataset::LeaveReadWrite()@Base" 2.0.1 1
 (c++)"GDALDataset::TestCapability(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALDataset::GetOpenDatasets(int*)@Base" 1.8.0 1
 (c++)"GDALDataset::IBuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALDataset::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALDataset::BeginAsyncReader(int, int, int, int, void*, int, int, GDALDataType, int, int*, int, int, int, char**)@Base" 1.8.0 1
 (c++)"GDALDataset::DestroyParseInfo(GDALSQLParseInfo*)@Base" 2.0.1 1
 (c++)"GDALDataset::GetGCPProjection()@Base" 1.8.0 1
 (c++)"GDALDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"GDALDataset::RasterInitialize(int, int)@Base" 1.8.0 1
 (c++)"GDALDataset::ReleaseResultSet(OGRLayer*)@Base" 2.0.1 1
 (c++)"GDALDataset::StartTransaction(int)@Base" 2.0.1 1
 (c++)"GDALDataset::BandBasedRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.1.0 1
 (c++)"GDALDataset::CommitTransaction()@Base" 2.0.1 1
 (c++)"GDALDataset::GetInternalHandle(char const*)@Base" 1.8.0 1
 (c++)"GDALDataset::RasterIOResampled(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.1.0 1
 (c++)"GDALDataset::BlockBasedRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALDataset::IsGenericSQLDialect(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ProcessSQLDropIndex(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ProcessSQLDropTable(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::RollbackTransaction()@Base" 2.0.1 1
 (c++)"GDALDataset::TryOverviewRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*, int*)@Base" 2.1.0 1
 (c++)"GDALDataset::AddToDatasetOpenList()@Base" 2.0.1 1
 (c++)"GDALDataset::BlockBasedFlushCache()@Base" 1.8.0 1
 (c++)"GDALDataset::DisableReadWriteMutex()@Base" 2.1.0 1
 (c++)"GDALDataset::GetMetadataDomainList()@Base" 2.2.0 1
 (c++)"GDALDataset::ProcessSQLCreateIndex(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::SetStyleTableDirectly(OGRStyleTable*)@Base" 2.0.1 1
 (c++)"GDALDataset::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"GDALDataset::ReacquireReadWriteLock()@Base" 2.0.2 1
 (c++)"GDALDataset::BuildLayerFromSelectInfo(swq_select*, OGRGeometry*, char const*, swq_select_parse_options*)@Base" 2.0.1 1
 (c++)"GDALDataset::TemporarilyDropReadWriteLock()@Base" 2.0.2 1
 (c++)"GDALDataset::ValidateLayerCreationOptions(char const* const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ProcessSQLAlterTableAddColumn(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ProcessSQLAlterTableDropColumn(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ProcessSQLAlterTableAlterColumn(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ProcessSQLAlterTableRenameColumn(char const*)@Base" 2.0.1 1
 (c++)"GDALDataset::ValidateRasterIOOrAdviseReadParameters(char const*, int*, int, int, int, int, int, int, int, int*)@Base" 1.11.0 1
 (c++)"GDALDataset::Init(bool)@Base" 2.2.0 1
 (c++)"GDALDataset::AddBand(GDALDataType, char**)@Base" 1.8.0 1
 (c++)"GDALDataset::GetGCPs()@Base" 1.8.0 1
 (c++)"GDALDataset::Release()@Base" 2.0.1 1
 (c++)"GDALDataset::SetBand(int, GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALDataset::SetGCPs(int, GDAL_GCP const*, char const*)@Base" 1.8.0 1
 (c++)"GDALDataset::GetLayer(int)@Base" 2.0.1 1
 (c++)"GDALDataset::RasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALDataset::CopyLayer(OGRLayer*, char const*, char**)@Base" 2.0.1 1
 (c++)"GDALDataset::GetDriver()@Base" 1.8.0 1
 (c++)"GDALDataset::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALDataset::Reference()@Base" 1.8.0 1
 (c++)"GDALDataset::GDALDataset(int)@Base" 2.1.0 1
 (c++)"GDALDataset::GDALDataset()@Base" 1.8.0 1
 (c++)"GDALDataset::GDALDataset(int)@Base" 2.1.0 1
 (c++)"GDALDataset::GDALDataset()@Base" 1.8.0 1
 (c++)"GDALDataset::~GDALDataset()@Base" 1.8.0 1
 (c++)"GDALDataset::~GDALDataset()@Base" 1.8.0 1
 (c++)"GDALDataset::~GDALDataset()@Base" 1.8.0 1
 (c++)"IILI1Reader::~IILI1Reader()@Base" 1.8.0 1
 (c++)"IILI1Reader::~IILI1Reader()@Base" 1.8.0 1
 (c++)"IILI1Reader::~IILI1Reader()@Base" 1.8.0 1
 (c++)"IILI2Reader::~IILI2Reader()@Base" 1.8.0 1
 (c++)"IILI2Reader::~IILI2Reader()@Base" 1.8.0 1
 (c++)"IILI2Reader::~IILI2Reader()@Base" 1.8.0 1
 (c++)"OGDIDataset::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"OGDIDataset::AddSubDataset(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGDIDataset::CollectLayers(int, char***, char***)@Base" 1.8.0 1
 (c++)"OGDIDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"OGDIDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"OGDIDataset::OverrideGlobalInfo(OGDIDataset*, char const*)@Base" 1.8.0 1
 (c++)"OGDIDataset::GetMetadataDomainList()@Base" 1.11.0 1
 (c++)"OGDIDataset::Open(GDALOpenInfo*)@Base" 1.8.0 1
 (c++)"OGDIDataset::OGDIDataset()@Base" 1.8.0 1
 (c++)"OGDIDataset::OGDIDataset()@Base" 1.8.0 1
 (c++)"OGDIDataset::~OGDIDataset()@Base" 1.8.0 1
 (c++)"OGDIDataset::~OGDIDataset()@Base" 1.8.0 1
 (c++)"OGDIDataset::~OGDIDataset()@Base" 1.8.0 1
 (c++)"OGRGeometry::closeRings()@Base" 1.8.0 1
 (c++)"OGRGeometry::segmentize(double)@Base" 1.8.0 1
 (c++)"OGRGeometry::CastToError(OGRGeometry*)@Base" 2.0.1 1
 (c++)"OGRGeometry::setMeasured(int)@Base" 2.1.0 1
 (c++)"OGRGeometry::transformTo(OGRSpatialReference*)@Base" 1.8.0 1
 (c++)"OGRGeometry::CastToIdentity(OGRGeometry*)@Base" 2.0.1 1
 (c++)"OGRGeometry::freeGEOSContext(GEOSContextHandle_HS*)@Base" 1.11.0 1
 (c++)"OGRGeometry::OGRexportToSFCGAL(OGRGeometry*)@Base" 2.2.0 1
 (c++)"OGRGeometry::SFCGALexportToOGR(void*)@Base" 2.2.0 1
 (c++)"OGRGeometry::createGEOSContext()@Base" 1.11.0 1
 (c++)"OGRGeometry::assignSpatialReference(OGRSpatialReference*)@Base" 1.8.0 1
 (c++)"OGRGeometry::importPreambuleFromWkb(unsigned char*, int, OGRwkbByteOrder&, OGRwkbVariant)@Base" 2.1.0 1
 (c++)"OGRGeometry::importPreambuleFromWkt(char**, int*, int*, bool*)@Base" 2.1.0 1
 (c++)"OGRGeometry::setCoordinateDimension(int)@Base" 1.8.0 1
 (c++)"OGRGeometry::bGenerate_DB2_V72_BYTE_ORDER@Base" 1.8.0 1
 (c++)"OGRGeometry::importCurveCollectionFromWkt(char**, int, int, int, int, int (*)(OGRGeometry*, OGRCurve*))@Base" 2.0.1 1
 (c++)"OGRGeometry::importPreambuleOfCollectionFromWkb(unsigned char*, int&, int&, OGRwkbByteOrder&, int, int&, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRGeometry::set3D(int)@Base" 2.1.0 1
 (c++)"OGRGeometry::swapXY()@Base" 1.8.0 1
 (c++)"OGRGeometry::OGRGeometry(OGRGeometry const&)@Base" 2.1.0 1
 (c++)"OGRGeometry::OGRGeometry()@Base" 1.8.0 1
 (c++)"OGRGeometry::OGRGeometry(OGRGeometry const&)@Base" 2.1.0 1
 (c++)"OGRGeometry::OGRGeometry()@Base" 1.8.0 1
 (c++)"OGRGeometry::~OGRGeometry()@Base" 1.8.0 1
 (c++)"OGRGeometry::~OGRGeometry()@Base" 1.8.0 1
 (c++)"OGRGeometry::~OGRGeometry()@Base" 1.8.0 1
 (c++)"OGRGeometry::operator=(OGRGeometry const&)@Base" 2.1.0 1
 (c++)"OGRSFDriver::CreateDataSource(char const*, char**)@Base" 1.8.0 1
 (c++)"OGRSFDriver::DeleteDataSource(char const*)@Base" 1.8.0 1
 (c++)"OGRSFDriver::~OGRSFDriver()@Base" 1.8.0 1
 (c++)"OGRSFDriver::~OGRSFDriver()@Base" 1.8.0 1
 (c++)"OGRSFDriver::~OGRSFDriver()@Base" 1.8.0 1
 (c++)"OGRStyleMgr::GetPartCount(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::GetStyleName(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::GetStyleByName(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::GetStyleString(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::InitFromFeature(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::InitStyleString(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::SetFeatureStyleString(OGRFeature*, char const*, int)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::CreateStyleToolFromStyleString(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::AddPart(OGRStyleTool*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::AddPart(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::GetPart(int, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::AddStyle(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::OGRStyleMgr(OGRStyleTable*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::OGRStyleMgr(OGRStyleTable*)@Base" 1.8.0 1
 (c++)"OGRStyleMgr::~OGRStyleMgr()@Base" 1.8.0 1
 (c++)"OGRStyleMgr::~OGRStyleMgr()@Base" 1.8.0 1
 (c++)"OGRStylePen::GetParamDbl(ogr_style_tool_param_pen_id, int&)@Base" 1.8.0 1
 (c++)"OGRStylePen::GetParamNum(ogr_style_tool_param_pen_id, int&)@Base" 1.8.0 1
 (c++)"OGRStylePen::GetParamStr(ogr_style_tool_param_pen_id, int&)@Base" 1.8.0 1
 (c++)"OGRStylePen::SetParamDbl(ogr_style_tool_param_pen_id, double)@Base" 1.8.0 1
 (c++)"OGRStylePen::SetParamNum(ogr_style_tool_param_pen_id, int)@Base" 1.8.0 1
 (c++)"OGRStylePen::SetParamStr(ogr_style_tool_param_pen_id, char const*)@Base" 1.8.0 1
 (c++)"OGRStylePen::GetStyleString()@Base" 1.8.0 1
 (c++)"OGRStylePen::Parse()@Base" 1.8.0 1
 (c++)"OGRStylePen::OGRStylePen()@Base" 1.8.0 1
 (c++)"OGRStylePen::OGRStylePen()@Base" 1.8.0 1
 (c++)"OGRStylePen::~OGRStylePen()@Base" 1.8.0 1
 (c++)"OGRStylePen::~OGRStylePen()@Base" 1.8.0 1
 (c++)"OGRStylePen::~OGRStylePen()@Base" 1.8.0 1
 (c++)"OGRTriangle::CastToPolygon(OGRGeometry*)@Base" 2.2.0 1
 (c++)"OGRTriangle::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.2.0 1
 (c++)"OGRTriangle::addRingDirectly(OGRCurve*)@Base" 2.2.0 1
 (c++)"OGRTriangle::importFromWKTListOnly(char**, int, int, OGRRawPoint*&, int&, double*&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle(OGRPolygon const&, int&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle(OGRPoint const&, OGRPoint const&, OGRPoint const&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle(OGRTriangle const&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle()@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle(OGRPolygon const&, int&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle(OGRPoint const&, OGRPoint const&, OGRPoint const&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle(OGRTriangle const&)@Base" 2.2.0 1
 (c++)"OGRTriangle::OGRTriangle()@Base" 2.2.0 1
 (c++)"OGRTriangle::~OGRTriangle()@Base" 2.2.0 1
 (c++)"OGRTriangle::~OGRTriangle()@Base" 2.2.0 1
 (c++)"OGRTriangle::~OGRTriangle()@Base" 2.2.0 1
 (c++)"OGRTriangle::operator=(OGRTriangle const&)@Base" 2.2.0 1
 (c++)"OGR_SRSNode::StripNodes(char const*)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::InsertChild(OGR_SRSNode*, int)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::DestroyChild(int)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::ClearChildren()@Base" 1.8.0 1
 (c++)"OGR_SRSNode::FixupOrdering()@Base" 1.8.0 1
 (c++)"OGR_SRSNode::MakeValueSafe()@Base" 1.8.0 1
 (c++)"OGR_SRSNode::applyRemapper(char const*, char**, char**, int, int)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::importFromWkt(char**)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::importFromWkt(char**, int, int*)@Base" 1.10.1 1
 (c++)"OGR_SRSNode::GetNode(char const*)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::AddChild(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::GetChild(int)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::SetValue(char const*)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::OGR_SRSNode(char const*)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::OGR_SRSNode(char const*)@Base" 1.8.0 1
 (c++)"OGR_SRSNode::~OGR_SRSNode()@Base" 1.8.0 1
 (c++)"OGR_SRSNode::~OGR_SRSNode()@Base" 1.8.0 1
 (c++)"GDALOpenInfo::TryToIngest(int)@Base" 2.0.1 1
 (c++)"GDALOpenInfo::GetSiblingFiles()@Base" 2.0.1 1
 (c++)"GDALOpenInfo::StealSiblingFiles()@Base" 2.1.0 1
 (c++)"GDALOpenInfo::GDALOpenInfo(char const*, int, char**)@Base" 2.0.1 1
 (c++)"GDALOpenInfo::GDALOpenInfo(char const*, int, char**)@Base" 2.0.1 1
 (c++)"GDALOpenInfo::~GDALOpenInfo()@Base" 1.8.0 1
 (c++)"GDALOpenInfo::~GDALOpenInfo()@Base" 1.8.0 1
 (c++)"OGRAttrIndex::OGRAttrIndex()@Base" 1.8.0 1
 (c++)"OGRAttrIndex::OGRAttrIndex()@Base" 1.8.0 1
 (c++)"OGRAttrIndex::~OGRAttrIndex()@Base" 1.8.0 1
 (c++)"OGRAttrIndex::~OGRAttrIndex()@Base" 1.8.0 1
 (c++)"OGRAttrIndex::~OGRAttrIndex()@Base" 1.8.0 1
 (c++)"OGRFieldDefn::SetDefault(char const*)@Base" 2.0.1 1
 (c++)"OGRFieldDefn::SetSubType(OGRFieldSubType)@Base" 2.0.1 1
 (c++)"OGRFieldDefn::GetFieldTypeName(OGRFieldType)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::GetFieldSubTypeName(OGRFieldSubType)@Base" 2.0.1 1
 (c++)"OGRFieldDefn::Set(char const*, OGRFieldType, int, int, OGRJustification)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::SetName(char const*)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::SetType(OGRFieldType)@Base" 2.0.1 1
 (c++)"OGRFieldDefn::OGRFieldDefn(char const*, OGRFieldType)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::OGRFieldDefn(OGRFieldDefn*)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::OGRFieldDefn(char const*, OGRFieldType)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::OGRFieldDefn(OGRFieldDefn*)@Base" 1.8.0 1
 (c++)"OGRFieldDefn::~OGRFieldDefn()@Base" 1.8.0 1
 (c++)"OGRFieldDefn::~OGRFieldDefn()@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetParamDbl(ogr_style_param const&, ogr_style_value&, int&)@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetParamNum(ogr_style_param const&, ogr_style_value&, int&)@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetParamStr(ogr_style_param const&, ogr_style_value&, int&)@Base" 1.8.0 1
 (c++)"OGRStyleTool::SetParamDbl(ogr_style_param const&, ogr_style_value&, double)@Base" 1.8.0 1
 (c++)"OGRStyleTool::SetParamNum(ogr_style_param const&, ogr_style_value&, int)@Base" 1.8.0 1
 (c++)"OGRStyleTool::SetParamStr(ogr_style_param const&, ogr_style_value&, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetSpecificId(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetStyleString(ogr_style_param const*, ogr_style_value*, int)@Base" 1.8.0 1
 (c++)"OGRStyleTool::SetStyleString(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTool::ComputeWithUnit(double, ogr_style_tool_units_id)@Base" 1.8.0 1
 (c++)"OGRStyleTool::ComputeWithUnit(int, ogr_style_tool_units_id)@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetRGBFromString(char const*, int&, int&, int&, int&)@Base" 1.8.0 1
 (c++)"OGRStyleTool::SetInternalInputUnitFromParam(char*)@Base" 1.8.0 1
 (c++)"OGRStyleTool::Parse(ogr_style_param const*, ogr_style_value*, int)@Base" 1.8.0 1
 (c++)"OGRStyleTool::GetType()@Base" 1.8.0 1
 (c++)"OGRStyleTool::SetUnit(ogr_style_tool_units_id, double)@Base" 1.8.0 1
 (c++)"OGRStyleTool::OGRStyleTool(ogr_style_tool_class_id)@Base" 1.8.0 1
 (c++)"OGRStyleTool::OGRStyleTool(ogr_style_tool_class_id)@Base" 1.8.0 1
 (c++)"OGRStyleTool::~OGRStyleTool()@Base" 1.8.0 1
 (c++)"OGRStyleTool::~OGRStyleTool()@Base" 1.8.0 1
 (c++)"OGRStyleTool::~OGRStyleTool()@Base" 1.8.0 1
 (c++)"CADDictionary::getRecordsCount()@Base" 2.2.0 1
 (c++)"CADDictionary::addRecord(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<CADDictionaryRecord> >)@Base" 2.2.0 1
 (c++)"CADDictionary::getRecord[abi:cxx11](unsigned int)@Base" 2.2.0 1
 (c++)"CADDictionary::CADDictionary()@Base" 2.2.0 1
 (c++)"CADDictionary::CADDictionary()@Base" 2.2.0 1
 (c++)"CADDictionary::~CADDictionary()@Base" 2.2.0 1
 (c++)"CADDictionary::~CADDictionary()@Base" 2.2.0 1
 (c++)"CADDictionary::~CADDictionary()@Base" 2.2.0 1
 (c++)"CPLLockHolder::CPLLockHolder(_CPLLock*, char const*, int)@Base" 2.0.1 1
 (c++)"CPLLockHolder::CPLLockHolder(_CPLLock**, CPLLockType, char const*, int)@Base" 2.0.1 1
 (c++)"CPLLockHolder::CPLLockHolder(_CPLLock*, char const*, int)@Base" 2.0.1 1
 (c++)"CPLLockHolder::CPLLockHolder(_CPLLock**, CPLLockType, char const*, int)@Base" 2.0.1 1
 (c++)"CPLLockHolder::~CPLLockHolder()@Base" 2.0.1 1
 (c++)"CPLLockHolder::~CPLLockHolder()@Base" 2.0.1 1
 (c++)"CPLStringList::Initialize()@Base" 1.9.0 1
 (c++)"CPLStringList::AddNameValue(char const*, char const*)@Base" 1.9.0 1
 (c++)"CPLStringList::SetNameValue(char const*, char const*)@Base" 1.9.0 1
 (c++)"CPLStringList::MakeOurOwnCopy()@Base" 1.9.0 1
 (c++)"CPLStringList::EnsureAllocation(int)@Base" 1.9.0 1
 (c++)"CPLStringList::AddStringDirectly(char*)@Base" 1.9.0 1
 (c++)"CPLStringList::InsertStringDirectly(int, char*)@Base" 1.9.0 1
 (c++)"CPLStringList::FindSortedInsertionPoint(char const*)@Base" 1.9.0 1
 (c++)"CPLStringList::Sort()@Base" 1.9.0 1
 (c++)"CPLStringList::Clear()@Base" 1.9.0 1
 (c++)"CPLStringList::Assign(char**, int)@Base" 1.9.0 1
 (c++)"CPLStringList::AddString(char const*)@Base" 1.9.0 1
 (c++)"CPLStringList::StealList()@Base" 1.9.0 1
 (c++)"CPLStringList::CPLStringList(char**, int)@Base" 1.9.0 1
 (c++)"CPLStringList::CPLStringList(CPLStringList const&)@Base" 1.9.0 1
 (c++)"CPLStringList::CPLStringList()@Base" 1.9.0 1
 (c++)"CPLStringList::CPLStringList(char**, int)@Base" 1.9.0 1
 (c++)"CPLStringList::CPLStringList(CPLStringList const&)@Base" 1.9.0 1
 (c++)"CPLStringList::CPLStringList()@Base" 1.9.0 1
 (c++)"CPLStringList::~CPLStringList()@Base" 1.9.0 1
 (c++)"CPLStringList::~CPLStringList()@Base" 1.9.0 1
 (c++)"CPLStringList::operator=(CPLStringList const&)@Base" 1.9.0 1
 (c++)"CPLStringList::operator[](int)@Base" 1.9.0 1
 (c++)"MEMRasterBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::GetOverview(int)@Base" 2.2.0 1
 (c++)"MEMRasterBand::GetUnitType()@Base" 1.8.0 1
 (c++)"MEMRasterBand::IWriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::SetUnitType(char const*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"MEMRasterBand::SetColorTable(GDALColorTable*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::CreateMaskBand(int)@Base" 2.2.0 1
 (c++)"MEMRasterBand::GetNoDataValue(int*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::SetNoDataValue(double)@Base" 1.8.0 1
 (c++)"MEMRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"MEMRasterBand::GetOverviewCount()@Base" 2.2.0 1
 (c++)"MEMRasterBand::SetCategoryNames(char**)@Base" 1.8.0 1
 (c++)"MEMRasterBand::DeleteNoDataValue()@Base" 2.1.0 1
 (c++)"MEMRasterBand::GetDefaultHistogram(double*, double*, int*, unsigned long long**, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"MEMRasterBand::SetDefaultHistogram(double, double, int, unsigned long long*)@Base" 2.0.1 1
 (c++)"MEMRasterBand::GetColorInterpretation()@Base" 1.8.0 1
 (c++)"MEMRasterBand::SetColorInterpretation(GDALColorInterp)@Base" 1.8.0 1
 (c++)"MEMRasterBand::GetScale(int*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::SetScale(double)@Base" 1.8.0 1
 (c++)"MEMRasterBand::GetOffset(int*)@Base" 1.8.0 1
 (c++)"MEMRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"MEMRasterBand::SetOffset(double)@Base" 1.8.0 1
 (c++)"MEMRasterBand::MEMRasterBand(GDALDataset*, int, unsigned char*, GDALDataType, long long, long long, int, char const*)@Base" 2.0.1 1
 (c++)"MEMRasterBand::MEMRasterBand(unsigned char*, GDALDataType, int, int)@Base" 2.2.0 1
 (c++)"MEMRasterBand::MEMRasterBand(GDALDataset*, int, unsigned char*, GDALDataType, long long, long long, int, char const*)@Base" 2.0.1 1
 (c++)"MEMRasterBand::MEMRasterBand(unsigned char*, GDALDataType, int, int)@Base" 2.2.0 1
 (c++)"MEMRasterBand::~MEMRasterBand()@Base" 1.8.0 1
 (c++)"MEMRasterBand::~MEMRasterBand()@Base" 1.8.0 1
 (c++)"MEMRasterBand::~MEMRasterBand()@Base" 1.8.0 1
 (c++)"OGRDataSource::DestroyDataSource(OGRDataSource*)@Base" 1.8.0 1
 (c++)"OGRDataSource::OGRDataSource()@Base" 1.8.0 1
 (c++)"OGRDataSource::OGRDataSource()@Base" 1.8.0 1
 (c++)"OGRLineString::CastToLinearRing(OGRLineString*)@Base" 2.0.1 1
 (c++)"OGRLineString::TransferMembersAndDestroy(OGRLineString*, OGRLineString*)@Base" 2.0.1 1
 (c++)"OGRLineString::OGRLineString(OGRLineString const&)@Base" 2.1.0 1
 (c++)"OGRLineString::OGRLineString()@Base" 1.8.0 1
 (c++)"OGRLineString::OGRLineString(OGRLineString const&)@Base" 2.1.0 1
 (c++)"OGRLineString::OGRLineString()@Base" 1.8.0 1
 (c++)"OGRLineString::~OGRLineString()@Base" 1.8.0 1
 (c++)"OGRLineString::~OGRLineString()@Base" 1.8.0 1
 (c++)"OGRLineString::~OGRLineString()@Base" 1.8.0 1
 (c++)"OGRLineString::operator=(OGRLineString const&)@Base" 2.1.0 1
 (c++)"OGRLinearRing::closeRings()@Base" 1.8.0 1
 (c++)"OGRLinearRing::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRLinearRing::_importFromWkb(OGRwkbByteOrder, int, unsigned char*, int)@Base" 1.8.0 1
 (c++)"OGRLinearRing::CastToLineString(OGRLinearRing*)@Base" 2.0.1 1
 (c++)"OGRLinearRing::reverseWindingOrder()@Base" 1.8.0 1
 (c++)"OGRLinearRing::transform(OGRCoordinateTransformation*)@Base" 2.2.0 1
 (c++)"OGRLinearRing::OGRLinearRing(OGRLinearRing*)@Base" 1.8.0 1
 (c++)"OGRLinearRing::OGRLinearRing(OGRLinearRing const&)@Base" 2.1.0 1
 (c++)"OGRLinearRing::OGRLinearRing()@Base" 1.8.0 1
 (c++)"OGRLinearRing::OGRLinearRing(OGRLinearRing*)@Base" 1.8.0 1
 (c++)"OGRLinearRing::OGRLinearRing(OGRLinearRing const&)@Base" 2.1.0 1
 (c++)"OGRLinearRing::OGRLinearRing()@Base" 1.8.0 1
 (c++)"OGRLinearRing::~OGRLinearRing()@Base" 1.8.0 1
 (c++)"OGRLinearRing::~OGRLinearRing()@Base" 1.8.0 1
 (c++)"OGRLinearRing::~OGRLinearRing()@Base" 1.8.0 1
 (c++)"OGRLinearRing::operator=(OGRLinearRing const&)@Base" 2.1.0 1
 (c++)"OGRMultiCurve::importFromWkt(char**)@Base" 2.0.1 1
 (c++)"OGRMultiCurve::CastToMultiLineString(OGRMultiCurve*)@Base" 2.0.1 1
 (c++)"OGRMultiCurve::addCurveDirectlyFromWkt(OGRGeometry*, OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRMultiCurve::OGRMultiCurve(OGRMultiCurve const&)@Base" 2.1.0 1
 (c++)"OGRMultiCurve::OGRMultiCurve()@Base" 2.0.1 1
 (c++)"OGRMultiCurve::OGRMultiCurve(OGRMultiCurve const&)@Base" 2.1.0 1
 (c++)"OGRMultiCurve::OGRMultiCurve()@Base" 2.0.1 1
 (c++)"OGRMultiCurve::~OGRMultiCurve()@Base" 2.0.1 1
 (c++)"OGRMultiCurve::~OGRMultiCurve()@Base" 2.0.1 1
 (c++)"OGRMultiCurve::~OGRMultiCurve()@Base" 2.0.1 1
 (c++)"OGRMultiCurve::operator=(OGRMultiCurve const&)@Base" 2.1.0 1
 (c++)"OGRMultiPoint::importFromWkt(char**)@Base" 1.8.0 1
 (c++)"OGRMultiPoint::importFromWkt_Bracketed(char**, int, int)@Base" 1.8.0 1
 (c++)"OGRMultiPoint::OGRMultiPoint(OGRMultiPoint const&)@Base" 2.1.0 1
 (c++)"OGRMultiPoint::OGRMultiPoint()@Base" 1.8.0 1
 (c++)"OGRMultiPoint::OGRMultiPoint(OGRMultiPoint const&)@Base" 2.1.0 1
 (c++)"OGRMultiPoint::OGRMultiPoint()@Base" 1.8.0 1
 (c++)"OGRMultiPoint::~OGRMultiPoint()@Base" 1.8.0 1
 (c++)"OGRMultiPoint::~OGRMultiPoint()@Base" 1.8.0 1
 (c++)"OGRMultiPoint::~OGRMultiPoint()@Base" 1.8.0 1
 (c++)"OGRMultiPoint::operator=(OGRMultiPoint const&)@Base" 2.1.0 1
 (c++)"OGRStyleBrush::GetParamDbl(ogr_style_tool_param_brush_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleBrush::GetParamNum(ogr_style_tool_param_brush_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleBrush::GetParamStr(ogr_style_tool_param_brush_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleBrush::SetParamDbl(ogr_style_tool_param_brush_id, double)@Base" 1.8.0 1
 (c++)"OGRStyleBrush::SetParamNum(ogr_style_tool_param_brush_id, int)@Base" 1.8.0 1
 (c++)"OGRStyleBrush::SetParamStr(ogr_style_tool_param_brush_id, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleBrush::GetStyleString()@Base" 1.8.0 1
 (c++)"OGRStyleBrush::Parse()@Base" 1.8.0 1
 (c++)"OGRStyleBrush::OGRStyleBrush()@Base" 1.8.0 1
 (c++)"OGRStyleBrush::OGRStyleBrush()@Base" 1.8.0 1
 (c++)"OGRStyleBrush::~OGRStyleBrush()@Base" 1.8.0 1
 (c++)"OGRStyleBrush::~OGRStyleBrush()@Base" 1.8.0 1
 (c++)"OGRStyleBrush::~OGRStyleBrush()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::GetParamDbl(ogr_style_tool_param_label_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleLabel::GetParamNum(ogr_style_tool_param_label_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleLabel::GetParamStr(ogr_style_tool_param_label_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleLabel::SetParamDbl(ogr_style_tool_param_label_id, double)@Base" 1.8.0 1
 (c++)"OGRStyleLabel::SetParamNum(ogr_style_tool_param_label_id, int)@Base" 1.8.0 1
 (c++)"OGRStyleLabel::SetParamStr(ogr_style_tool_param_label_id, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleLabel::GetStyleString()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::Parse()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::OGRStyleLabel()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::OGRStyleLabel()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::~OGRStyleLabel()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::~OGRStyleLabel()@Base" 1.8.0 1
 (c++)"OGRStyleLabel::~OGRStyleLabel()@Base" 1.8.0 1
 (c++)"OGRStyleTable::ModifyStyle(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::RemoveStyle(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::GetNextStyle()@Base" 1.8.0 1
 (c++)"OGRStyleTable::GetStyleName(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::LoadStyleTable(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::SaveStyleTable(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::GetLastStyleName()@Base" 1.8.0 1
 (c++)"OGRStyleTable::ResetStyleStringReading()@Base" 1.8.0 1
 (c++)"OGRStyleTable::Find(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::Clear()@Base" 1.8.0 1
 (c++)"OGRStyleTable::Clone()@Base" 1.8.0 1
 (c++)"OGRStyleTable::Print(_IO_FILE*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::IsExist(char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::AddStyle(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleTable::OGRStyleTable()@Base" 1.8.0 1
 (c++)"OGRStyleTable::OGRStyleTable()@Base" 1.8.0 1
 (c++)"OGRStyleTable::~OGRStyleTable()@Base" 1.8.0 1
 (c++)"OGRStyleTable::~OGRStyleTable()@Base" 1.8.0 1
 (c++)"RawRasterBand::AccessLine(int)@Base" 1.8.0 1
 (c++)"RawRasterBand::FlushCache()@Base" 1.8.0 1
 (c++)"RawRasterBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"RawRasterBand::Initialize()@Base" 1.8.0 1
 (c++)"RawRasterBand::AccessBlock(unsigned long long, unsigned int, void*)@Base" 2.1.0 1
 (c++)"RawRasterBand::IWriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"RawRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"RawRasterBand::SetColorTable(GDALColorTable*)@Base" 1.8.0 1
 (c++)"RawRasterBand::CanUseDirectIO(int, int, int, int, GDALDataType)@Base" 1.11.0 1
 (c++)"RawRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"RawRasterBand::SetCategoryNames(char**)@Base" 1.8.0 1
 (c++)"RawRasterBand::StoreNoDataValue(double)@Base" 1.8.0 1
 (c++)"RawRasterBand::GetVirtualMemAuto(GDALRWFlag, int*, long long*, char**)@Base" 1.11.0 1
 (c++)"RawRasterBand::GetColorInterpretation()@Base" 1.8.0 1
 (c++)"RawRasterBand::SetColorInterpretation(GDALColorInterp)@Base" 1.8.0 1
 (c++)"RawRasterBand::IsSignificantNumberOfLinesLoaded(int, int)@Base" 1.11.0 1
 (c++)"RawRasterBand::Read(void*, unsigned int, unsigned int)@Base" 1.8.0 1
 (c++)"RawRasterBand::Seek(unsigned long long, int)@Base" 1.8.0 1
 (c++)"RawRasterBand::Write(void*, unsigned int, unsigned int)@Base" 1.8.0 1
 (c++)"RawRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"RawRasterBand::SetAccess(GDALAccess)@Base" 1.8.0 1
 (c++)"RawRasterBand::RawRasterBand(GDALDataset*, int, void*, unsigned long long, int, int, GDALDataType, int, int, int)@Base" 1.8.0 1
 (c++)"RawRasterBand::RawRasterBand(void*, unsigned long long, int, int, GDALDataType, int, int, int, int, int)@Base" 1.8.0 1
 (c++)"RawRasterBand::RawRasterBand(GDALDataset*, int, void*, unsigned long long, int, int, GDALDataType, int, int, int)@Base" 1.8.0 1
 (c++)"RawRasterBand::RawRasterBand(void*, unsigned long long, int, int, GDALDataType, int, int, int, int, int)@Base" 1.8.0 1
 (c++)"RawRasterBand::~RawRasterBand()@Base" 1.8.0 1
 (c++)"RawRasterBand::~RawRasterBand()@Base" 1.8.0 1
 (c++)"RawRasterBand::~RawRasterBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::Initialize(int, int)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetFileList(char***, int*, int*, _CPLHashSet*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetMaskBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetOverview(int)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetUnitType()@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetMaskBand(VRTRasterBand*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetUnitType(char const*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetHistogram(double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"VRTRasterBand::GetMaskFlags()@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetColorTable(GDALColorTable*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetIsMaskBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::CreateMaskBand(int)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetNoDataValue(int*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetDescription(char const*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetNoDataValue(double)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetOverviewCount()@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetCategoryNames(char**)@Base" 1.8.0 1
 (c++)"VRTRasterBand::UnsetNoDataValue()@Base" 1.8.0 1
 (c++)"VRTRasterBand::DeleteNoDataValue()@Base" 2.1.0 1
 (c++)"VRTRasterBand::CopyCommonInfoFrom(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetDefaultHistogram(double*, double*, int*, unsigned long long**, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"VRTRasterBand::IsSourcedRasterBand()@Base" 1.9.0 1
 (c++)"VRTRasterBand::SetDefaultHistogram(double, double, int, unsigned long long*)@Base" 2.0.1 1
 (c++)"VRTRasterBand::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"VRTRasterBand::GetColorInterpretation()@Base" 1.8.0 1
 (c++)"VRTRasterBand::IsPansharpenRasterBand()@Base" 2.1.0 1
 (c++)"VRTRasterBand::SetColorInterpretation(GDALColorInterp)@Base" 1.8.0 1
 (c++)"VRTRasterBand::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetScale(int*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetScale(double)@Base" 1.8.0 1
 (c++)"VRTRasterBand::GetOffset(int*)@Base" 1.8.0 1
 (c++)"VRTRasterBand::SetOffset(double)@Base" 1.8.0 1
 (c++)"VRTRasterBand::VRTRasterBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::VRTRasterBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::~VRTRasterBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::~VRTRasterBand()@Base" 1.8.0 1
 (c++)"VRTRasterBand::~VRTRasterBand()@Base" 1.8.0 1
 (c++)"CPLMutexHolder::CPLMutexHolder(void**, double, char const*, int, int)@Base" 2.0.1 1
 (c++)"CPLMutexHolder::CPLMutexHolder(void*, double, char const*, int)@Base" 1.11.0 1
 (c++)"CPLMutexHolder::CPLMutexHolder(void**, double, char const*, int, int)@Base" 2.0.1 1
 (c++)"CPLMutexHolder::CPLMutexHolder(void*, double, char const*, int)@Base" 1.11.0 1
 (c++)"CPLMutexHolder::~CPLMutexHolder()@Base" 1.8.0 1
 (c++)"CPLMutexHolder::~CPLMutexHolder()@Base" 1.8.0 1
 (c++)"CPLODBCSession::CloseSession()@Base" 1.8.0 1
 (c++)"CPLODBCSession::GetLastError()@Base" 1.8.0 1
 (c++)"CPLODBCSession::BeginTransaction()@Base" 1.8.0 1
 (c++)"CPLODBCSession::ClearTransaction()@Base" 1.8.0 1
 (c++)"CPLODBCSession::EstablishSession(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"CPLODBCSession::CommitTransaction()@Base" 1.8.0 1
 (c++)"CPLODBCSession::RollbackTransaction()@Base" 1.8.0 1
 (c++)"CPLODBCSession::Failed(int, void*)@Base" 1.8.0 1
 (c++)"CPLODBCSession::CPLODBCSession()@Base" 1.8.0 1
 (c++)"CPLODBCSession::CPLODBCSession()@Base" 1.8.0 1
 (c++)"CPLODBCSession::~CPLODBCSession()@Base" 1.8.0 1
 (c++)"CPLODBCSession::~CPLODBCSession()@Base" 1.8.0 1
 (c++)"DDFRecordIndex::FindRecord(int)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::GetByIndex(int)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::RemoveRecord(int)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::FindRecordByObjl(int)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::GetClientInfoByIndex(int)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::SetClientInfoByIndex(int, void*)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::Sort()@Base" 1.8.0 1
 (c++)"DDFRecordIndex::Clear()@Base" 1.8.0 1
 (c++)"DDFRecordIndex::AddRecord(int, DDFRecord*)@Base" 1.8.0 1
 (c++)"DDFRecordIndex::DDFRecordIndex()@Base" 1.8.0 1
 (c++)"DDFRecordIndex::DDFRecordIndex()@Base" 1.8.0 1
 (c++)"DDFRecordIndex::~DDFRecordIndex()@Base" 1.8.0 1
 (c++)"DDFRecordIndex::~DDFRecordIndex()@Base" 1.8.0 1
 (c++)"GDALColorTable::SetColorEntry(int, GDALColorEntry const*)@Base" 1.8.0 1
 (c++)"GDALColorTable::CreateColorRamp(int, GDALColorEntry const*, int, GDALColorEntry const*)@Base" 1.8.0 1
 (c++)"GDALColorTable::GDALColorTable(GDALPaletteInterp)@Base" 1.8.0 1
 (c++)"GDALColorTable::GDALColorTable(GDALPaletteInterp)@Base" 1.8.0 1
 (c++)"GDALColorTable::~GDALColorTable()@Base" 1.8.0 1
 (c++)"GDALColorTable::~GDALColorTable()@Base" 1.8.0 1
 (c++)"GDALPamDataset::FlushCache()@Base" 1.8.0 1
 (c++)"GDALPamDataset::TryLoadAux(char**)@Base" 1.9.0 1
 (c++)"GDALPamDataset::TryLoadXML(char**)@Base" 1.9.0 1
 (c++)"GDALPamDataset::TrySaveXML()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetFileList()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetGCPCount()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::PamInitialize()@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::IBuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::BuildPamFilename()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetGCPProjection()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetSubdatasetName()@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetSubdatasetName(char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::GetPhysicalFilename()@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetPhysicalFilename(char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::IsPamFilenameAPotentialSiblingFile()@Base" 1.9.0 1
 (c++)"GDALPamDataset::GetGCPs()@Base" 1.8.0 1
 (c++)"GDALPamDataset::SetGCPs(int, GDAL_GCP const*, char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"GDALPamDataset::PamClear()@Base" 1.8.0 1
 (c++)"GDALPamDataset::CloneInfo(GDALDataset*, int)@Base" 1.8.0 1
 (c++)"GDALPamDataset::GDALPamDataset()@Base" 1.8.0 1
 (c++)"GDALPamDataset::GDALPamDataset()@Base" 1.8.0 1
 (c++)"GDALPamDataset::~GDALPamDataset()@Base" 1.8.0 1
 (c++)"GDALPamDataset::~GDALPamDataset()@Base" 1.8.0 1
 (c++)"GDALPamDataset::~GDALPamDataset()@Base" 1.8.0 1
 (c++)"GDALRasterBand::AdviseRead(int, int, int, int, int, int, GDALDataType, char**)@Base" 1.8.0 1
 (c++)"GDALRasterBand::FlushBlock(int, int, int)@Base" 1.8.0 1
 (c++)"GDALRasterBand::FlushCache()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetDataset()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetMaximum(int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetMinimum(int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::InitRWLock()@Base" 2.1.2 1
 (c++)"GDALRasterBand::WriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetMaskBand()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetOverview(int)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetUnitType()@Base" 1.8.0 1
 (c++)"GDALRasterBand::IWriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::ReportError(CPLErr, int, char const*, ...)@Base" 1.9.0 1
 (c++)"GDALRasterBand::SetUnitType(char const*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetBlockSize(int*, int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetHistogram(double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::GetMaskFlags()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetDefaultRAT()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetStatistics(int, int, double*, double*, double*, double*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::InitBlockInfo()@Base" 1.8.0 1
 (c++)"GDALRasterBand::SetColorTable(GDALColorTable*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::SetDefaultRAT(GDALRasterAttributeTable const*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::SetStatistics(double, double, double, double)@Base" 1.8.0 1
 (c++)"GDALRasterBand::BuildOverviews(char const*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::CreateMaskBand(int)@Base" 1.8.0 1
 (c++)"GDALRasterBand::EnterReadWrite(GDALRWFlag)@Base" 2.0.1 1
 (c++)"GDALRasterBand::GetNoDataValue(int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::LeaveReadWrite()@Base" 2.0.1 1
 (c++)"GDALRasterBand::SetNoDataValue(double)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetOverviewCount()@Base" 1.8.0 1
 (c++)"GDALRasterBand::OverviewRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::SetCategoryNames(char**)@Base" 1.8.0 1
 (c++)"GDALRasterBand::SetFlushBlockErr(CPLErr)@Base" 1.8.0 1
 (c++)"GDALRasterBand::UnreferenceBlock(GDALRasterBlock*)@Base" 2.1.0 1
 (c++)"GDALRasterBand::ComputeStatistics(int, double*, double*, double*, double*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::DeleteNoDataValue()@Base" 2.1.0 1
 (c++)"GDALRasterBand::GetLockedBlockRef(int, int, int)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetRasterDataType()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetVirtualMemAuto(GDALRWFlag, int*, long long*, char**)@Base" 1.11.0 1
 (c++)"GDALRasterBand::RasterIOResampled(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::AddBlockToFreeList(GDALRasterBlock*)@Base" 2.1.0 1
 (c++)"GDALRasterBand::GetActualBlockSize(int, int, int*, int*)@Base" 2.2.0 1
 (c++)"GDALRasterBand::InvalidateMaskBand()@Base" 1.11.1 1
 (c++)"GDALRasterBand::ComputeRasterMinMax(int, double*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetDefaultHistogram(double*, double*, int*, unsigned long long**, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::SetDefaultHistogram(double, double, int, unsigned long long*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::TryOverviewRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*, int*)@Base" 2.1.0 1
 (c++)"GDALRasterBand::TryGetLockedBlockRef(int, int)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetDataCoverageStatus(int, int, int, int, int, double*)@Base" 2.2.0 1
 (c++)"GDALRasterBand::HasArbitraryOverviews()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetColorInterpretation()@Base" 1.8.0 1
 (c++)"GDALRasterBand::IGetDataCoverageStatus(int, int, int, int, int, double*)@Base" 2.2.0 1
 (c++)"GDALRasterBand::SetColorInterpretation(GDALColorInterp)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetRasterSampleOverview(unsigned long long)@Base" 2.0.1 1
 (c++)"GDALRasterBand::GetIndexColorTranslationTo(GDALRasterBand*, unsigned char*, int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::Fill(double, double)@Base" 1.8.0 1
 (c++)"GDALRasterBand::Init(int)@Base" 2.1.0 1
 (c++)"GDALRasterBand::GetBand()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetScale(int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetXSize()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetYSize()@Base" 1.8.0 1
 (c++)"GDALRasterBand::RasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::SetScale(double)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetAccess()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GetOffset(int*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALRasterBand::ReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALRasterBand::SetOffset(double)@Base" 1.8.0 1
 (c++)"GDALRasterBand::GDALRasterBand(int)@Base" 2.1.0 1
 (c++)"GDALRasterBand::GDALRasterBand()@Base" 1.8.0 1
 (c++)"GDALRasterBand::GDALRasterBand(int)@Base" 2.1.0 1
 (c++)"GDALRasterBand::GDALRasterBand()@Base" 1.8.0 1
 (c++)"GDALRasterBand::~GDALRasterBand()@Base" 1.8.0 1
 (c++)"GDALRasterBand::~GDALRasterBand()@Base" 1.8.0 1
 (c++)"GDALRasterBand::~GDALRasterBand()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::PerformWarp()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::Validate()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::GDALWarpKernel()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::GDALWarpKernel()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::~GDALWarpKernel()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::~GDALWarpKernel()@Base" 1.8.0 1
 (c++)"GDALWarpKernel::~GDALWarpKernel()@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::GetGeomType()@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::SetGeomType(OGRwkbGeometryType)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::AddFieldDefn(OGRFieldDefn*)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::GetFieldDefn(int)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::GetFieldCount()@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::GetFieldIndex(char const*)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::DeleteFieldDefn(int)@Base" 1.9.0 1
 (c++)"OGRFeatureDefn::SetStyleIgnored(int)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::AddGeomFieldDefn(OGRGeomFieldDefn*, int)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::GetGeomFieldDefn(int)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::CreateFeatureDefn(char const*)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::GetGeomFieldCount()@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::GetGeomFieldIndex(char const*)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::IsGeometryIgnored()@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::ReorderFieldDefns(int*)@Base" 1.9.0 1
 (c++)"OGRFeatureDefn::DestroyFeatureDefn(OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::SetGeometryIgnored(int)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::DeleteGeomFieldDefn(int)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::Clone()@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::IsSame(OGRFeatureDefn*)@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::GetName()@Base" 1.11.0 1
 (c++)"OGRFeatureDefn::Release()@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::OGRFeatureDefn(char const*)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::OGRFeatureDefn(char const*)@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::~OGRFeatureDefn()@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::~OGRFeatureDefn()@Base" 1.8.0 1
 (c++)"OGRFeatureDefn::~OGRFeatureDefn()@Base" 1.8.0 1
 (c++)"OGRSimpleCurve::segmentize(double)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setPointsM(int, OGRRawPoint*, double*)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setPointsM(int, double*, double*, double*)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::flattenTo2D()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setMeasured(int)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setNumPoints(int, int)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::importFromWkt(char**)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::reversePoints()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::addSubLineString(OGRLineString const*, int, int)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::importFromWKTListOnly(char**, int, int, OGRRawPoint*&, int&, double*&)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setCoordinateDimension(int)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::AddM()@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setM(int, double)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setZ(int, double)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::empty()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::set3D(int)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::Make2D()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::Make3D()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::swapXY()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::RemoveM()@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::addPoint(OGRPoint const*)@Base" 2.2.0 1
 (c++)"OGRSimpleCurve::addPoint(double, double)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::addPoint(double, double, double)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::addPoint(double, double, double, double)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setPoint(int, OGRPoint*)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setPoint(int, double, double)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setPoint(int, double, double, double)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setPoint(int, double, double, double, double)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::addPointM(double, double, double)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setPointM(int, double, double, double)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setPoints(int, OGRRawPoint*, double*)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setPoints(int, OGRRawPoint*, double*, double*)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::setPoints(int, double*, double*, double*)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::setPoints(int, double*, double*, double*, double*)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::transform(OGRCoordinateTransformation*)@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::OGRSimpleCurve(OGRSimpleCurve const&)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::OGRSimpleCurve()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::OGRSimpleCurve(OGRSimpleCurve const&)@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::OGRSimpleCurve()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::~OGRSimpleCurve()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::~OGRSimpleCurve()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::~OGRSimpleCurve()@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::operator=(OGRSimpleCurve const&)@Base" 2.1.0 1
 (c++)"OGRStyleSymbol::GetParamDbl(ogr_style_tool_param_symbol_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::GetParamNum(ogr_style_tool_param_symbol_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::GetParamStr(ogr_style_tool_param_symbol_id, int&)@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::SetParamDbl(ogr_style_tool_param_symbol_id, double)@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::SetParamNum(ogr_style_tool_param_symbol_id, int)@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::SetParamStr(ogr_style_tool_param_symbol_id, char const*)@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::GetStyleString()@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::Parse()@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::OGRStyleSymbol()@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::OGRStyleSymbol()@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::~OGRStyleSymbol()@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::~OGRStyleSymbol()@Base" 1.8.0 1
 (c++)"OGRStyleSymbol::~OGRStyleSymbol()@Base" 1.8.0 1
 (c++)"VSIFileManager::GetHandler(char const*)@Base" 1.8.0 1
 (c++)"VSIFileManager::InstallHandler(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, VSIFilesystemHandler*)@Base" 2.0.1 1
 (c++)"VSIFileManager::Get()@Base" 1.8.0 1
 (c++)"VSIFileManager::VSIFileManager()@Base" 1.8.0 1
 (c++)"VSIFileManager::VSIFileManager()@Base" 1.8.0 1
 (c++)"VSIFileManager::~VSIFileManager()@Base" 1.8.0 1
 (c++)"VSIFileManager::~VSIFileManager()@Base" 1.8.0 1
 (c++)"GDALAsyncReader::LockBuffer(double)@Base" 1.8.0 1
 (c++)"GDALAsyncReader::UnlockBuffer()@Base" 1.8.0 1
 (c++)"GDALAsyncReader::GDALAsyncReader()@Base" 1.8.0 1
 (c++)"GDALAsyncReader::GDALAsyncReader()@Base" 1.8.0 1
 (c++)"GDALAsyncReader::~GDALAsyncReader()@Base" 1.8.0 1
 (c++)"GDALAsyncReader::~GDALAsyncReader()@Base" 1.8.0 1
 (c++)"GDALAsyncReader::~GDALAsyncReader()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::IsUUID_MSI(unsigned char const*)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::IsUUID_XMP(unsigned char const*)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::CreateGMLJP2(int, int)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::CreateIPRBox(GDALDataset*)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::CreateXMPBox(GDALDataset*)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::GMLSRSLookup(char const*)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::ReadAndParse(_IO_FILE*, int, int, int, int*)@Base" 2.2.0 1
 (c++)"GDALJP2Metadata::ReadAndParse(char const*, int, int, int, int, int*)@Base" 2.2.0 1
 (c++)"GDALJP2Metadata::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::CollectGMLData(GDALJP2Box*)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::CreateGMLJP2V2(int, int, char const*, GDALDataset*)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::CreateXMLBoxes(GDALDataset*, int*)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::ParseJP2GeoTIFF()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::CreateJP2GeoTIFF()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::ParseGMLCoverageDesc()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::GetGMLJP2GeoreferencingInfo(int&, double*, double*, double*, char const*&, CPLString&, int&)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::CreateGDALMultiDomainMetadataXML(GDALDataset*, int)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::CreateGDALMultiDomainMetadataXMLBox(GDALDataset*, int)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::SetGCPs(int, GDAL_GCP const*)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::SetRPCMD(char**)@Base" 2.0.1 1
 (c++)"GDALJP2Metadata::ParseMSIG()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::ReadBoxes(_IO_FILE*)@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::GDALJP2Metadata()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::GDALJP2Metadata()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::~GDALJP2Metadata()@Base" 1.8.0 1
 (c++)"GDALJP2Metadata::~GDALJP2Metadata()@Base" 1.8.0 1
 (c++)"GDALMajorObject::SetMOFlags(int)@Base" 1.8.0 1
 (c++)"GDALMajorObject::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALMajorObject::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALMajorObject::SetDescription(char const*)@Base" 1.8.0 1
 (c++)"GDALMajorObject::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALMajorObject::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALMajorObject::GetMetadataDomainList()@Base" 1.11.0 1
 (c++)"GDALMajorObject::BuildMetadataDomainList(char**, int, ...)@Base" 1.11.0 1
 (c++)"GDALMajorObject::GDALMajorObject()@Base" 1.8.0 1
 (c++)"GDALMajorObject::GDALMajorObject()@Base" 1.8.0 1
 (c++)"GDALMajorObject::~GDALMajorObject()@Base" 1.8.0 1
 (c++)"GDALMajorObject::~GDALMajorObject()@Base" 1.8.0 1
 (c++)"GDALMajorObject::~GDALMajorObject()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::RecycleFor(int, int)@Base" 2.1.0 1
 (c++)"GDALRasterBlock::Internalize()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::DestroyRBMutex()@Base" 1.11.0 1
 (c++)"GDALRasterBlock::Touch_unlocked()@Base" 2.0.1 1
 (c++)"GDALRasterBlock::Detach_unlocked()@Base" 2.0.1 1
 (c++)"GDALRasterBlock::FlushCacheBlock(int)@Base" 2.0.1 1
 (c++)"GDALRasterBlock::FlushDirtyBlocks()@Base" 2.0.1 1
 (c++)"GDALRasterBlock::EnterDisableDirtyBlockFlush()@Base" 2.2.2 1
 (c++)"GDALRasterBlock::LeaveDisableDirtyBlockFlush()@Base" 2.2.2 1
 (c++)"GDALRasterBlock::DropLockForRemovalFromStorage()@Base" 2.1.0 1
 (c++)"GDALRasterBlock::Touch()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::Write()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::Detach()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::Verify()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::TakeLock()@Base" 2.1.0 1
 (c++)"GDALRasterBlock::MarkClean()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::MarkDirty()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::GDALRasterBlock(GDALRasterBand*, int, int)@Base" 1.8.0 1
 (c++)"GDALRasterBlock::GDALRasterBlock(int, int)@Base" 2.1.0 1
 (c++)"GDALRasterBlock::GDALRasterBlock(GDALRasterBand*, int, int)@Base" 1.8.0 1
 (c++)"GDALRasterBlock::GDALRasterBlock(int, int)@Base" 2.1.0 1
 (c++)"GDALRasterBlock::~GDALRasterBlock()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::~GDALRasterBlock()@Base" 1.8.0 1
 (c++)"GDALRasterBlock::~GDALRasterBlock()@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetExtents(double*, double*, double*, double*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::SetExtents(double, double, double, double)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::SetSRSName(char const*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::AddProperty(GMLPropertyDefn*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetExtraInfo()@Base" 1.8.0 1
 (c++)"GMLFeatureClass::MergeSRSName(char const*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::SetExtraInfo(char const*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::SerializeToXML()@Base" 1.8.0 1
 (c++)"GMLFeatureClass::SetElementName(char const*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetFeatureCount()@Base" 1.8.0 1
 (c++)"GMLFeatureClass::SetFeatureCount(long long)@Base" 2.0.1 1
 (c++)"GMLFeatureClass::StealProperties()@Base" 2.0.1 1
 (c++)"GMLFeatureClass::InitializeFromXML(CPLXMLNode*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::AddGeometryProperty(GMLGeometryPropertyDefn*)@Base" 1.11.0 1
 (c++)"GMLFeatureClass::HasFeatureProperties()@Base" 1.11.0 1
 (c++)"GMLFeatureClass::ClearGeometryProperties()@Base" 1.11.0 1
 (c++)"GMLFeatureClass::StealGeometryProperties()@Base" 2.0.1 1
 (c++)"GMLFeatureClass::SetName(char const*)@Base" 1.10.1 1
 (c++)"GMLFeatureClass::GMLFeatureClass(char const*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GMLFeatureClass(char const*)@Base" 1.8.0 1
 (c++)"GMLFeatureClass::~GMLFeatureClass()@Base" 1.8.0 1
 (c++)"GMLFeatureClass::~GMLFeatureClass()@Base" 1.8.0 1
 (c++)"GMLPropertyDefn::SetCondition(char const*)@Base" 1.11.0 1
 (c++)"GMLPropertyDefn::SetSrcElement(char const*)@Base" 1.8.0 1
 (c++)"GMLPropertyDefn::AnalysePropertyValue(GMLProperty const*, bool)@Base" 2.1.0 1
 (c++)"GMLPropertyDefn::GMLPropertyDefn(char const*, char const*)@Base" 1.8.0 1
 (c++)"GMLPropertyDefn::GMLPropertyDefn(char const*, char const*)@Base" 1.8.0 1
 (c++)"GMLPropertyDefn::~GMLPropertyDefn()@Base" 1.8.0 1
 (c++)"GMLPropertyDefn::~GMLPropertyDefn()@Base" 1.8.0 1
 (c++)"OGRCurvePolygon::segmentize(double)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::flattenTo2D()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::setMeasured(int)@Base" 2.1.0 1
 (c++)"OGRCurvePolygon::CastToPolygon(OGRCurvePolygon*)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::importFromWkt(char**)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::addRingDirectly(OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getExteriorRingCurve()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getInteriorRingCurve(int)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::setCoordinateDimension(int)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::stealExteriorRingCurve()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::addCurveDirectlyFromWkb(OGRGeometry*, OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::addCurveDirectlyFromWkt(OGRGeometry*, OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::addRingDirectlyInternal(OGRCurve*, int)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::empty()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::set3D(int)@Base" 2.1.0 1
 (c++)"OGRCurvePolygon::swapXY()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::addRing(OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::transform(OGRCoordinateTransformation*)@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::OGRCurvePolygon(OGRCurvePolygon const&)@Base" 2.1.0 1
 (c++)"OGRCurvePolygon::OGRCurvePolygon()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::OGRCurvePolygon(OGRCurvePolygon const&)@Base" 2.1.0 1
 (c++)"OGRCurvePolygon::OGRCurvePolygon()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::~OGRCurvePolygon()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::~OGRCurvePolygon()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::~OGRCurvePolygon()@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::operator=(OGRCurvePolygon const&)@Base" 2.1.0 1
 (c++)"OGRFeatureQuery::CanUseIndex(swq_expr_node*, OGRLayer*)@Base" 1.10.1 1
 (c++)"OGRFeatureQuery::CanUseIndex(OGRLayer*)@Base" 1.10.1 1
 (c++)"OGRFeatureQuery::GetUsedFields()@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::FieldCollector(void*, char**)@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::EvaluateAgainstIndices(swq_expr_node*, OGRLayer*, long long&)@Base" 2.0.1 1
 (c++)"OGRFeatureQuery::EvaluateAgainstIndices(OGRLayer*, int*)@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::Compile(OGRFeatureDefn*, char const*, int, swq_custom_func_registrar*)@Base" 2.0.1 1
 (c++)"OGRFeatureQuery::Evaluate(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::OGRFeatureQuery()@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::OGRFeatureQuery()@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::~OGRFeatureQuery()@Base" 1.8.0 1
 (c++)"OGRFeatureQuery::~OGRFeatureQuery()@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::CastToMultiSurface(OGRMultiPolygon*)@Base" 2.0.1 1
 (c++)"OGRMultiPolygon::_addGeometryWithExpectedSubGeometryType(OGRGeometry const*, OGRwkbGeometryType)@Base" 2.2.0 1
 (c++)"OGRMultiPolygon::_addGeometryDirectlyWithExpectedSubGeometryType(OGRGeometry*, OGRwkbGeometryType)@Base" 2.2.0 1
 (c++)"OGRMultiPolygon::OGRMultiPolygon(OGRMultiPolygon const&)@Base" 2.1.0 1
 (c++)"OGRMultiPolygon::OGRMultiPolygon()@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::OGRMultiPolygon(OGRMultiPolygon const&)@Base" 2.1.0 1
 (c++)"OGRMultiPolygon::OGRMultiPolygon()@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::~OGRMultiPolygon()@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::~OGRMultiPolygon()@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::~OGRMultiPolygon()@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::operator=(OGRMultiPolygon const&)@Base" 2.1.0 1
 (c++)"OGRMultiSurface::importFromWkt(char**)@Base" 2.0.1 1
 (c++)"OGRMultiSurface::CastToMultiPolygon(OGRMultiSurface*)@Base" 2.0.1 1
 (c++)"OGRMultiSurface::OGRMultiSurface(OGRMultiSurface const&)@Base" 2.1.0 1
 (c++)"OGRMultiSurface::OGRMultiSurface()@Base" 2.0.1 1
 (c++)"OGRMultiSurface::OGRMultiSurface(OGRMultiSurface const&)@Base" 2.1.0 1
 (c++)"OGRMultiSurface::OGRMultiSurface()@Base" 2.0.1 1
 (c++)"OGRMultiSurface::~OGRMultiSurface()@Base" 2.0.1 1
 (c++)"OGRMultiSurface::~OGRMultiSurface()@Base" 2.0.1 1
 (c++)"OGRMultiSurface::~OGRMultiSurface()@Base" 2.0.1 1
 (c++)"OGRMultiSurface::operator=(OGRMultiSurface const&)@Base" 2.1.0 1
 (c++)"OGRMutexedLayer::GetFeature(long long)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::SyncToDisk()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::CreateField(OGRFieldDefn*, int)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::DeleteField(int)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetGeomType()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetMetadata(char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::ISetFeature(OGRFeature*)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::SetMetadata(char**, char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::GetFIDColumn()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetLayerDefn()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::ResetReading()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::DeleteFeature(long long)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::GetSpatialRef()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetStyleTable()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::ReorderFields(int*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetStyleTable(OGRStyleTable*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::AlterFieldDefn(int, OGRFieldDefn*, int)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetNextFeature()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::ICreateFeature(OGRFeature*)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::SetNextByIndex(long long)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::TestCapability(char const*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetFeatureCount(int)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetMetadataItem(char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::SetMetadataItem(char const*, char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedLayer::GetSpatialFilter()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetIgnoredFields(char const**)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetSpatialFilter(OGRGeometry*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetSpatialFilter(int, OGRGeometry*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::StartTransaction()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::CommitTransaction()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetGeometryColumn()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetAttributeFilter(char const*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::RollbackTransaction()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetSpatialFilterRect(double, double, double, double)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetSpatialFilterRect(int, double, double, double, double)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::SetStyleTableDirectly(OGRStyleTable*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetName()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetExtent(OGREnvelope*, int)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::GetExtent(int, OGREnvelope*, int)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::OGRMutexedLayer(OGRLayer*, int, void*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::OGRMutexedLayer(OGRLayer*, int, void*)@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::~OGRMutexedLayer()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::~OGRMutexedLayer()@Base" 1.11.0 1
 (c++)"OGRMutexedLayer::~OGRMutexedLayer()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::GetMaximum(int, int, int*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::GetMinimum(int, int, int*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::SetSrcBand(GDALRasterBand*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::GetFileList(char***, int*, int*, _CPLHashSet*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::GetHistogram(int, int, double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"VRTSimpleSource::SetDstWindow(double, double, double, double)@Base" 2.1.0 1
 (c++)"VRTSimpleSource::SetSrcWindow(double, double, double, double)@Base" 2.1.0 1
 (c++)"VRTSimpleSource::SetResampling(char const*)@Base" 2.0.1 1
 (c++)"VRTSimpleSource::IsSimpleSource()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::SerializeToXML(char const*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::SetNoDataValue(double)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::SetSrcMaskBand(GDALRasterBand*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::DatasetRasterIO(int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTSimpleSource::GetSrcDstWindow(int, int, int, int, int, int, double*, double*, double*, double*, int*, int*, int*, int*, int*, int*, int*, int*)@Base" 2.0.1 1
 (c++)"VRTSimpleSource::ComputeStatistics(int, int, int, double*, double*, double*, double*, int (*)(double, char const*, void*), void*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::ComputeRasterMinMax(int, int, int, double*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::IsSameExceptBandNumber(VRTSimpleSource*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::UnsetPreservedRelativeFilenames()@Base" 2.0.1 1
 (c++)"VRTSimpleSource::GetBand()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::GetType()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::XMLInit(CPLXMLNode*, char const*)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::DstToSrc(double, double, double&, double&)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::RasterIO(int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTSimpleSource::SrcToDst(double, double, double&, double&)@Base" 1.11.0 1
 (c++)"VRTSimpleSource::VRTSimpleSource(VRTSimpleSource const*, double, double)@Base" 2.1.0 1
 (c++)"VRTSimpleSource::VRTSimpleSource()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::VRTSimpleSource(VRTSimpleSource const*, double, double)@Base" 2.1.0 1
 (c++)"VRTSimpleSource::VRTSimpleSource()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::~VRTSimpleSource()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::~VRTSimpleSource()@Base" 1.11.0 1
 (c++)"VRTSimpleSource::~VRTSimpleSource()@Base" 1.11.0 1
 (c++)"CPLODBCStatement::DumpResult(_IO_FILE*, int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::ExecuteSQL(char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColData(char const*, char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColData(int, char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColName(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColSize(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColType(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColumns(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColCount()@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetTypeName(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::AppendEscaped(char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColNullable(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColTypeName(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetPrimaryKeys(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetTypeMapping(short)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::ClearColumnData()@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColColumnDef(int)@Base" 2.0.1 1
 (c++)"CPLODBCStatement::GetColPrecision(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColDataLength(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::CollectResultsInfo()@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetRowCountAffected()@Base" 2.0.1 1
 (c++)"CPLODBCStatement::Clear()@Base" 1.8.0 1
 (c++)"CPLODBCStatement::Fetch(int, int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::Append(char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::Append(double)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::Append(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::Failed(int)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::Appendf(char const*, ...)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetColId(char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::GetTables(char const*, char const*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::CPLODBCStatement(CPLODBCSession*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::CPLODBCStatement(CPLODBCSession*)@Base" 1.8.0 1
 (c++)"CPLODBCStatement::~CPLODBCStatement()@Base" 1.8.0 1
 (c++)"CPLODBCStatement::~CPLODBCStatement()@Base" 1.8.0 1
 (c++)"CPLThreadLocaleC::CPLThreadLocaleC()@Base" 2.1.0 1
 (c++)"CPLThreadLocaleC::CPLThreadLocaleC()@Base" 2.1.0 1
 (c++)"CPLThreadLocaleC::~CPLThreadLocaleC()@Base" 2.1.0 1
 (c++)"CPLThreadLocaleC::~CPLThreadLocaleC()@Base" 2.1.0 1
 (c++)"GDALProxyDataset::AdviseRead(int, int, int, int, int, int, GDALDataType, int, int*, char**)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::FlushCache()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetFileList()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetGCPCount()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::CreateMaskBand(int)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::IBuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetGCPProjection()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetInternalHandle(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetMetadataDomainList()@Base" 1.11.0 1
 (c++)"GDALProxyDataset::UnrefUnderlyingDataset(GDALDataset*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetGCPs()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::SetGCPs(int, GDAL_GCP const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyDataset::GetDriver()@Base" 1.8.0 1
 (c++)"GDALProxyDataset::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, int, int*, long long, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::segmentize(double)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::stealCurve(int)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::flattenTo2D()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::setMeasured(int)@Base" 2.1.0 1
 (c++)"OGRCompoundCurve::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::importFromWkt(char**)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::CastToLineString(OGRCompoundCurve*)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::CastToLinearRing(OGRCompoundCurve*)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::addCurveDirectly(OGRCurve*, double)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::setCoordinateDimension(int)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::addCurveDirectlyFromWkb(OGRGeometry*, OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::addCurveDirectlyFromWkt(OGRGeometry*, OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::addCurveDirectlyInternal(OGRCurve*, double, int)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::empty()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::set3D(int)@Base" 2.1.0 1
 (c++)"OGRCompoundCurve::swapXY()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::addCurve(OGRCurve*, double)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getCurve(int)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::transform(OGRCoordinateTransformation*)@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::OGRCompoundCurve(OGRCompoundCurve const&)@Base" 2.1.0 1
 (c++)"OGRCompoundCurve::OGRCompoundCurve()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::OGRCompoundCurve(OGRCompoundCurve const&)@Base" 2.1.0 1
 (c++)"OGRCompoundCurve::OGRCompoundCurve()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::~OGRCompoundCurve()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::~OGRCompoundCurve()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::~OGRCompoundCurve()@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::operator=(OGRCompoundCurve const&)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetFeature(long long)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetNextFID(long long)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SyncToDisk()@Base" 2.1.0 1
 (c++)"OGREditableLayer::CreateField(OGRFieldDefn*, int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::DeleteField(int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetGeomType()@Base" 2.1.0 1
 (c++)"OGREditableLayer::ISetFeature(OGRFeature*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetLayerDefn()@Base" 2.1.0 1
 (c++)"OGREditableLayer::ResetReading()@Base" 2.1.0 1
 (c++)"OGREditableLayer::DeleteFeature(long long)@Base" 2.1.0 1
 (c++)"OGREditableLayer::DetectNextFID()@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetSpatialRef()@Base" 2.1.0 1
 (c++)"OGREditableLayer::ReorderFields(int*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::AlterFieldDefn(int, OGRFieldDefn*, int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetNextFeature()@Base" 2.1.0 1
 (c++)"OGREditableLayer::ICreateFeature(OGRFeature*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetNextByIndex(long long)@Base" 2.1.0 1
 (c++)"OGREditableLayer::TestCapability(char const*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::CreateGeomField(OGRGeomFieldDefn*, int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetFeatureCount(int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetSpatialFilter()@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetSpatialFilter(OGRGeometry*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetSpatialFilter(int, OGRGeometry*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::StartTransaction()@Base" 2.1.0 1
 (c++)"OGREditableLayer::CommitTransaction()@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetGeometryColumn()@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetAttributeFilter(char const*)@Base" 2.1.0 1
 (c++)"OGREditableLayer::RollbackTransaction()@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetSrcGeomFieldIndex(int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetSpatialFilterRect(double, double, double, double)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetSpatialFilterRect(int, double, double, double, double)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetSupportsCreateGeomField(bool)@Base" 2.1.0 1
 (c++)"OGREditableLayer::SetSupportsCurveGeometries(bool)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetExtent(OGREnvelope*, int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::GetExtent(int, OGREnvelope*, int)@Base" 2.1.0 1
 (c++)"OGREditableLayer::Translate(OGRFeatureDefn*, OGRFeature*, bool, bool)@Base" 2.1.0 1
 (c++)"OGREditableLayer::OGREditableLayer(OGRLayer*, bool, IOGREditableLayerSynchronizer*, bool)@Base" 2.1.0 1
 (c++)"OGREditableLayer::OGREditableLayer(OGRLayer*, bool, IOGREditableLayerSynchronizer*, bool)@Base" 2.1.0 1
 (c++)"OGREditableLayer::~OGREditableLayer()@Base" 2.1.0 1
 (c++)"OGREditableLayer::~OGREditableLayer()@Base" 2.1.0 1
 (c++)"OGREditableLayer::~OGREditableLayer()@Base" 2.1.0 1
 (c++)"OGRGeomFieldDefn::Initialize(char const*, OGRwkbGeometryType)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::GetSpatialRef()@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::SetSpatialRef(OGRSpatialReference*)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::IsSame(OGRGeomFieldDefn*)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::SetName(char const*)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::SetType(OGRwkbGeometryType)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::OGRGeomFieldDefn(char const*, OGRwkbGeometryType)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::OGRGeomFieldDefn(OGRGeomFieldDefn*)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::OGRGeomFieldDefn(char const*, OGRwkbGeometryType)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::OGRGeomFieldDefn(OGRGeomFieldDefn*)@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::~OGRGeomFieldDefn()@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::~OGRGeomFieldDefn()@Base" 1.11.0 1
 (c++)"OGRGeomFieldDefn::~OGRGeomFieldDefn()@Base" 1.11.0 1
 (c++)"OGRPointIterator::destroy(OGRPointIterator*)@Base" 2.0.1 1
 (c++)"OGRPointIterator::~OGRPointIterator()@Base" 2.0.1 1
 (c++)"OGRPointIterator::~OGRPointIterator()@Base" 2.0.1 1
 (c++)"OGRPointIterator::~OGRPointIterator()@Base" 2.0.1 1
 (c++)"VRTComplexSource::GetMaximum(int, int, int*)@Base" 1.11.0 1
 (c++)"VRTComplexSource::GetMinimum(int, int, int*)@Base" 1.11.0 1
 (c++)"VRTComplexSource::LookupValue(double)@Base" 1.11.0 1
 (c++)"VRTComplexSource::GetHistogram(int, int, double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"VRTComplexSource::SerializeToXML(char const*)@Base" 1.11.0 1
 (c++)"VRTComplexSource::SetPowerScaling(double, double, double, double, double)@Base" 1.11.0 1
 (c++)"CPLErr VRTComplexSource::RasterIOInternal<double>(int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*, GDALDataType)@Base" 2.1.2 1
 (c++)"CPLErr VRTComplexSource::RasterIOInternal<float>(int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*, GDALDataType)@Base" 2.1.2 1
 (c++)"VRTComplexSource::SetLinearScaling(double, double)@Base" 1.11.0 1
 (c++)"VRTComplexSource::ComputeStatistics(int, int, int, double*, double*, double*, double*, int (*)(double, char const*, void*), void*)@Base" 1.11.0 1
 (c++)"VRTComplexSource::ComputeRasterMinMax(int, int, int, double*)@Base" 1.11.0 1
 (c++)"VRTComplexSource::SetColorTableComponent(int)@Base" 1.11.0 1
 (c++)"VRTComplexSource::GetType()@Base" 1.11.0 1
 (c++)"VRTComplexSource::XMLInit(CPLXMLNode*, char const*)@Base" 1.11.0 1
 (c++)"VRTComplexSource::RasterIO(int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTComplexSource::VRTComplexSource(VRTComplexSource const*, double, double)@Base" 2.1.0 1
 (c++)"VRTComplexSource::VRTComplexSource()@Base" 1.11.0 1
 (c++)"VRTComplexSource::VRTComplexSource(VRTComplexSource const*, double, double)@Base" 2.1.0 1
 (c++)"VRTComplexSource::VRTComplexSource()@Base" 1.11.0 1
 (c++)"VRTComplexSource::~VRTComplexSource()@Base" 1.11.0 1
 (c++)"VRTComplexSource::~VRTComplexSource()@Base" 1.11.0 1
 (c++)"VRTComplexSource::~VRTComplexSource()@Base" 1.11.0 1
 (c++)"VRTRawRasterBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::SetRawLink(char const*, char const*, int, unsigned long long, int, int, char const*)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::GetFileList(char***, int*, int*, _CPLHashSet*)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::IWriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::ClearRawLink()@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTRawRasterBand::VRTRawRasterBand(GDALDataset*, int, GDALDataType)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::VRTRawRasterBand(GDALDataset*, int, GDALDataType)@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::~VRTRawRasterBand()@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::~VRTRawRasterBand()@Base" 1.8.0 1
 (c++)"VRTRawRasterBand::~VRTRawRasterBand()@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::Initialize(void*)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::GetFileList()@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::GetBlockSize(int*, int*)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::ProcessBlock(int, int)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::IBuildOverviews(char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::SetMetadataItem(char const*, char const*, char const*)@Base" 2.0.1 1
 (c++)"VRTWarpedDataset::VerticalShiftGrid::~VerticalShiftGrid()@Base" 2.2.0 1
 (c++)"VRTWarpedDataset::VerticalShiftGrid::~VerticalShiftGrid()@Base" 2.2.0 1
 (c++)"VRTWarpedDataset::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"VRTWarpedDataset::CreateImplicitOverviews()@Base" 2.0.1 1
 (c++)"VRTWarpedDataset::SetApplyVerticalShiftGrid(char const*, int, double, double, char**)@Base" 2.2.0 1
 (c++)"VRTWarpedDataset::AddBand(GDALDataType, char**)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::VRTWarpedDataset(int, int)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::VRTWarpedDataset(int, int)@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::~VRTWarpedDataset()@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::~VRTWarpedDataset()@Base" 1.8.0 1
 (c++)"VRTWarpedDataset::~VRTWarpedDataset()@Base" 1.8.0 1
 (c++)"VSIVirtualHandle::GetRangeStatus(unsigned long long, unsigned long long)@Base" 2.2.0 1
 (c++)"VSIVirtualHandle::ReadMultiRange(int, void**, unsigned long long const*, unsigned int const*)@Base" 1.9.0 1
 (c++)"VSIVirtualHandle::GetNativeFileDescriptor()@Base" 1.11.0 1
 (c++)"VSIVirtualHandle::Flush()@Base" 1.8.0 1
 (c++)"VSIVirtualHandle::Truncate(unsigned long long)@Base" 1.9.0 1
 (c++)"GDALDriverManager::RegisterDriver(GDALDriver*)@Base" 1.8.0 1
 (c++)"GDALDriverManager::AutoLoadDrivers()@Base" 1.8.0 1
 (c++)"GDALDriverManager::AutoSkipDrivers()@Base" 1.8.0 1
 (c++)"GDALDriverManager::GetDriverByName(char const*)@Base" 1.8.0 1
 (c++)"GDALDriverManager::DeregisterDriver(GDALDriver*)@Base" 1.8.0 1
 (c++)"GDALDriverManager::GetDriver(int)@Base" 1.8.0 1
 (c++)"GDALDriverManager::GDALDriverManager()@Base" 1.8.0 1
 (c++)"GDALDriverManager::GDALDriverManager()@Base" 1.8.0 1
 (c++)"GDALDriverManager::~GDALDriverManager()@Base" 1.8.0 1
 (c++)"GDALDriverManager::~GDALDriverManager()@Base" 1.8.0 1
 (c++)"GDALDriverManager::~GDALDriverManager()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetUnitType()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetUnitType(char const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetHistogram(double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"GDALPamRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetDefaultRAT()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::PamInitialize()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetColorTable(GDALColorTable*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetDefaultRAT(GDALRasterAttributeTable const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetNoDataValue(int*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetDescription(char const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetNoDataValue(double)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetCategoryNames(char**)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::DeleteNoDataValue()@Base" 2.1.0 1
 (c++)"GDALPamRasterBand::GetDefaultHistogram(double*, double*, int*, unsigned long long**, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"GDALPamRasterBand::SetDefaultHistogram(double, double, int, unsigned long long*)@Base" 2.0.1 1
 (c++)"GDALPamRasterBand::GetColorInterpretation()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetColorInterpretation(GDALColorInterp)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetScale(int*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::PamClear()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetScale(double)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::CloneInfo(GDALRasterBand*, int)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GetOffset(int*)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::SetOffset(double)@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GDALPamRasterBand(int)@Base" 2.1.0 1
 (c++)"GDALPamRasterBand::GDALPamRasterBand()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::GDALPamRasterBand(int)@Base" 2.1.0 1
 (c++)"GDALPamRasterBand::GDALPamRasterBand()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::~GDALPamRasterBand()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::~GDALPamRasterBand()@Base" 1.8.0 1
 (c++)"GDALPamRasterBand::~GDALPamRasterBand()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::GetOptions()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::Initialize(GDALWarpOptions const*)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::WarpRegion(int, int, int, int, int, int, int, int, double, double)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::WarpRegion(int, int, int, int, int, int, int, int, int, int, double, double)@Base" 2.0.1 1
 (c++)"GDALWarpOperation::WipeOptions()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::ReportTiming(char const*)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::WipeChunkList()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::ValidateOptions()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::CollectChunkList(int, int, int, int)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::CreateKernelMask(GDALWarpKernel*, int, char const*)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::ChunkAndWarpImage(int, int, int, int)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::ChunkAndWarpMulti(int, int, int, int)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::WarpRegionToBuffer(int, int, int, int, void*, GDALDataType, int, int, int, int, double, double)@Base" 1.8.0 1
 (c++)"GDALWarpOperation::WarpRegionToBuffer(int, int, int, int, void*, GDALDataType, int, int, int, int, int, int, double, double)@Base" 2.0.1 1
 (c++)"GDALWarpOperation::ComputeSourceWindow(int, int, int, int, int*, int*, int*, int*, int*, int*, double*)@Base" 2.0.1 1
 (c++)"GDALWarpOperation::GDALWarpOperation()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::GDALWarpOperation()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::~GDALWarpOperation()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::~GDALWarpOperation()@Base" 1.8.0 1
 (c++)"GDALWarpOperation::~GDALWarpOperation()@Base" 1.8.0 1
 (c++)"GNMGenericNetwork::CreateRule(char const*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::DeleteRule(char const*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::FlushCache()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::DeleteLayer(int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::DisconnectAll()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetLayerCount()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::DeleteAllRules()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::FindConnection(long long, long long, long long)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::LoadGraphLayer(GDALDataset*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::LoadNetworkSrs()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::TestCapability(char const*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ConnectFeatures(long long, long long, long long, double, double, int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::FillResultLayer(OGRGNMWrappedResultLayer*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > const&, int, bool, bool)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetNewGlobalFID()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::StoreNetworkSrs()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ChangeBlockState(long long, bool)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::CheckLayerDriver(char const*, char**)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::CreateGraphLayer(GDALDataset*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::FindNearestPoint(OGRPoint const*, std::vector<OGRLayer*, std::allocator<OGRLayer*> > const&, double)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetAlgorithmName(int, bool)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetNewVirtualFID()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::LoadFeaturesLayer(GDALDataset*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::LoadMetadataLayer(GDALDataset*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ReconnectFeatures(long long, long long, long long, double, double, int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::DisconnectFeatures(long long, long long, long long)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::AddFeatureGlobalFID(long long, char const*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ChangeAllBlockState(bool)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ConnectPointsByLine(long long, OGRLineString const*, std::vector<OGRLayer*, std::allocator<OGRLayer*> > const&, double, double, double, int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::CreateFeaturesLayer(GDALDataset*)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::CreateMetadataLayer(GDALDataset*, int, unsigned int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ConnectPointsByLines(char**, double, double, double, int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetFeatureByGlobalFID(long long)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::CloseDependentDatasets()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::ConnectPointsByMultiline(long long, OGRMultiLineString const*, std::vector<OGRLayer*, std::allocator<OGRLayer*> > const&, double, double, double, int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::DisconnectFeaturesWithId(long long)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::Delete()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetPath(long long, long long, GNMGraphAlgorithmType, char**)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetLayer(int)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::CopyLayer(OGRLayer*, char const*, char**)@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::LoadGraph()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::SaveRules()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GNMGenericNetwork()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GNMGenericNetwork()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::~GNMGenericNetwork()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::~GNMGenericNetwork()@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::~GNMGenericNetwork()@Base" 2.2.0 1
 (c++)"OGRCircularString::segmentize(double)@Base" 2.0.1 1
 (c++)"OGRCircularString::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRCircularString::importFromWkt(char**)@Base" 2.0.1 1
 (c++)"OGRCircularString::OGRCircularString(OGRCircularString const&)@Base" 2.1.0 1
 (c++)"OGRCircularString::OGRCircularString()@Base" 2.0.1 1
 (c++)"OGRCircularString::OGRCircularString(OGRCircularString const&)@Base" 2.1.0 1
 (c++)"OGRCircularString::OGRCircularString()@Base" 2.0.1 1
 (c++)"OGRCircularString::~OGRCircularString()@Base" 2.0.1 1
 (c++)"OGRCircularString::~OGRCircularString()@Base" 2.0.1 1
 (c++)"OGRCircularString::~OGRCircularString()@Base" 2.0.1 1
 (c++)"OGRCircularString::operator=(OGRCircularString const&)@Base" 2.1.0 1
 (c++)"OGRLayerAttrIndex::OGRLayerAttrIndex()@Base" 1.8.0 1
 (c++)"OGRLayerAttrIndex::OGRLayerAttrIndex()@Base" 1.8.0 1
 (c++)"OGRLayerAttrIndex::~OGRLayerAttrIndex()@Base" 1.8.0 1
 (c++)"OGRLayerAttrIndex::~OGRLayerAttrIndex()@Base" 1.8.0 1
 (c++)"OGRLayerAttrIndex::~OGRLayerAttrIndex()@Base" 1.8.0 1
 (c++)"OGRLayerDecorator::GetFeature(long long)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SyncToDisk()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::CreateField(OGRFieldDefn*, int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::DeleteField(int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetGeomType()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetMetadata(char const*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::ISetFeature(OGRFeature*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetMetadata(char**, char const*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetFIDColumn()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetLayerDefn()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::ResetReading()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::DeleteFeature(long long)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetSpatialRef()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetStyleTable()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::ReorderFields(int*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetStyleTable(OGRStyleTable*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::AlterFieldDefn(int, OGRFieldDefn*, int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetNextFeature()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::ICreateFeature(OGRFeature*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetNextByIndex(long long)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::TestCapability(char const*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::CreateGeomField(OGRGeomFieldDefn*, int)@Base" 2.1.0 1
 (c++)"OGRLayerDecorator::GetFeatureCount(int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetMetadataItem(char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetMetadataItem(char const*, char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetSpatialFilter()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetIgnoredFields(char const**)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetSpatialFilter(OGRGeometry*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetSpatialFilter(int, OGRGeometry*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::StartTransaction()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::CommitTransaction()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetGeometryColumn()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetAttributeFilter(char const*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::RollbackTransaction()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetSpatialFilterRect(double, double, double, double)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetSpatialFilterRect(int, double, double, double, double)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::SetStyleTableDirectly(OGRStyleTable*)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetName()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetExtent(OGREnvelope*, int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::GetExtent(int, OGREnvelope*, int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::OGRLayerDecorator(OGRLayer*, int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::OGRLayerDecorator(OGRLayer*, int)@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::~OGRLayerDecorator()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::~OGRLayerDecorator()@Base" 2.0.1 1
 (c++)"OGRLayerDecorator::~OGRLayerDecorator()@Base" 2.0.1 1
 (c++)"S57ClassRegistrar::GetAttrInfo(int)@Base" 1.11.0 1
 (c++)"S57ClassRegistrar::FindAttrByAcronym(char const*)@Base" 1.8.0 1
 (c++)"S57ClassRegistrar::FindFile(char const*, char const*, bool, _IO_FILE**)@Base" 2.2.0 1
 (c++)"S57ClassRegistrar::LoadInfo(char const*, char const*, bool)@Base" 2.2.0 1
 (c++)"S57ClassRegistrar::ReadLine(_IO_FILE*)@Base" 1.8.0 1
 (c++)"S57ClassRegistrar::S57ClassRegistrar()@Base" 1.8.0 1
 (c++)"S57ClassRegistrar::S57ClassRegistrar()@Base" 1.8.0 1
 (c++)"S57ClassRegistrar::~S57ClassRegistrar()@Base" 1.8.0 1
 (c++)"S57ClassRegistrar::~S57ClassRegistrar()@Base" 1.8.0 1
 (c++)"GDALNoDataMaskBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALNoDataMaskBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALNoDataMaskBand::GDALNoDataMaskBand(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALNoDataMaskBand::GDALNoDataMaskBand(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALNoDataMaskBand::~GDALNoDataMaskBand()@Base" 1.8.0 1
 (c++)"GDALNoDataMaskBand::~GDALNoDataMaskBand()@Base" 1.8.0 1
 (c++)"GDALNoDataMaskBand::~GDALNoDataMaskBand()@Base" 1.8.0 1
 (c++)"NASAKeywordHandler::GetKeyword(char const*, char const*)@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::GetKeywordList()@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::Ingest(_IO_FILE*, int)@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::ReadPair(CPLString&, CPLString&, json_object*)@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::ReadWord(CPLString&, bool, bool, bool*)@Base" 2.2.2 1
 (c++)"NASAKeywordHandler::ReadGroup(char const*, json_object*)@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::SkipWhite()@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::StealJSon()@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::NASAKeywordHandler()@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::NASAKeywordHandler()@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::~NASAKeywordHandler()@Base" 2.2.0 1
 (c++)"NASAKeywordHandler::~NASAKeywordHandler()@Base" 2.2.0 1
 (c++)"OGRCurveCollection::segmentize(double)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::stealCurve(int)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::flattenTo2D(OGRGeometry*)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::setMeasured(OGRGeometry*, int)@Base" 2.1.0 1
 (c++)"OGRCurveCollection::addCurveDirectly(OGRGeometry*, OGRCurve*, int)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::importBodyFromWkb(OGRGeometry*, unsigned char*, int, int, int, int (*)(OGRGeometry*, OGRCurve*), OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::importPreambuleFromWkb(OGRGeometry*, unsigned char*, int&, int&, OGRwkbByteOrder&, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::setCoordinateDimension(OGRGeometry*, int)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::empty(OGRGeometry*)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::set3D(OGRGeometry*, int)@Base" 2.1.0 1
 (c++)"OGRCurveCollection::swapXY()@Base" 2.0.1 1
 (c++)"OGRCurveCollection::getCurve(int)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::transform(OGRGeometry*, OGRCoordinateTransformation*)@Base" 2.0.1 1
 (c++)"OGRCurveCollection::OGRCurveCollection(OGRCurveCollection const&)@Base" 2.1.0 1
 (c++)"OGRCurveCollection::OGRCurveCollection()@Base" 2.0.1 1
 (c++)"OGRCurveCollection::OGRCurveCollection(OGRCurveCollection const&)@Base" 2.1.0 1
 (c++)"OGRCurveCollection::OGRCurveCollection()@Base" 2.0.1 1
 (c++)"OGRCurveCollection::~OGRCurveCollection()@Base" 2.0.1 1
 (c++)"OGRCurveCollection::~OGRCurveCollection()@Base" 2.0.1 1
 (c++)"OGRCurveCollection::operator=(OGRCurveCollection const&)@Base" 2.1.0 1
 (c++)"OGRGeometryFactory::createFromFgf(unsigned char*, OGRSpatialReference*, OGRGeometry**, int, int*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::createFromGML(char const*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::createFromWkb(unsigned char*, OGRSpatialReference*, OGRGeometry**, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRGeometryFactory::createFromWkt(char**, OGRSpatialReference*, OGRGeometry**)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::createFromGEOS(GEOSContextHandle_HS*, GEOSGeom_t*)@Base" 1.11.0 1
 (c++)"OGRGeometryFactory::createGeometry(OGRwkbGeometryType)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::forceToPolygon(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::destroyGeometry(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::organizePolygons(OGRGeometry**, int, int*, char const**)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::GetCurveParmeters(double, double, double, double, double, double, double&, double&, double&, double&, double&, double&)@Base" 2.0.1 1
 (c++)"OGRGeometryFactory::curveToLineString(double, double, double, double, double, double, double, double, double, int, double, char const* const*)@Base" 2.0.1 1
 (c++)"OGRGeometryFactory::forceToLineString(OGRGeometry*, bool)@Base" 1.10.1 1
 (c++)"OGRGeometryFactory::forceToMultiPoint(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::curveFromLineString(OGRLineString const*, char const* const*)@Base" 2.0.1 1
 (c++)"OGRGeometryFactory::forceToMultiPolygon(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::approximateArcAngles(double, double, double, double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::transformWithOptions(OGRGeometry const*, OGRCoordinateTransformation*, char**)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::createFromFgfInternal(unsigned char*, OGRSpatialReference*, OGRGeometry**, int, int*, int)@Base" 1.9.0 1
 (c++)"OGRGeometryFactory::forceToMultiLineString(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRGeometryFactory::forceTo(OGRGeometry*, OGRwkbGeometryType, char const* const*)@Base" 2.0.1 1
 (c++)"OGRGeometryFactory::haveGEOS()@Base" 1.8.0 1
 (c++)"OGRMultiLineString::CastToMultiCurve(OGRMultiLineString*)@Base" 2.0.1 1
 (c++)"OGRMultiLineString::OGRMultiLineString(OGRMultiLineString const&)@Base" 2.1.0 1
 (c++)"OGRMultiLineString::OGRMultiLineString()@Base" 1.8.0 1
 (c++)"OGRMultiLineString::OGRMultiLineString(OGRMultiLineString const&)@Base" 2.1.0 1
 (c++)"OGRMultiLineString::OGRMultiLineString()@Base" 1.8.0 1
 (c++)"OGRMultiLineString::~OGRMultiLineString()@Base" 1.8.0 1
 (c++)"OGRMultiLineString::~OGRMultiLineString()@Base" 1.8.0 1
 (c++)"OGRMultiLineString::~OGRMultiLineString()@Base" 1.8.0 1
 (c++)"OGRMultiLineString::operator=(OGRMultiLineString const&)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::GetNextJob(CPLWorkerThread*)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::SubmitJobs(void (*)(void*), std::vector<void*, std::allocator<void*> > const&)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::WaitCompletion(int)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::DeclareJobFinished()@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::WorkerThreadFunction(void*)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::Setup(int, void (*)(void*), void**)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::SubmitJob(void (*)(void*), void*)@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::CPLWorkerThreadPool()@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::CPLWorkerThreadPool()@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::~CPLWorkerThreadPool()@Base" 2.1.0 1
 (c++)"CPLWorkerThreadPool::~CPLWorkerThreadPool()@Base" 2.1.0 1
 (c++)"GDALMDReaderManager::GetReader(char const*, char**, unsigned int)@Base" 2.0.1 1
 (c++)"GDALMDReaderManager::GDALMDReaderManager()@Base" 2.0.1 1
 (c++)"GDALMDReaderManager::GDALMDReaderManager()@Base" 2.0.1 1
 (c++)"GDALMDReaderManager::~GDALMDReaderManager()@Base" 2.0.1 1
 (c++)"GDALMDReaderManager::~GDALMDReaderManager()@Base" 2.0.1 1
 (c++)"GDALMDReaderManager::~GDALMDReaderManager()@Base" 2.0.1 1
 (c++)"GDALProxyRasterBand::AdviseRead(int, int, int, int, int, int, GDALDataType, char**)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::FlushCache()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetMaximum(int*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetMinimum(int*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetMaskBand()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetOverview(int)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetUnitType()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::IWriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetUnitType(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetHistogram(double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"GDALProxyRasterBand::GetMaskFlags()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetDefaultRAT()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetStatistics(int, int, double*, double*, double*, double*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetColorTable(GDALColorTable*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetDefaultRAT(GDALRasterAttributeTable const*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetStatistics(double, double, double, double)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::BuildOverviews(char const*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::CreateMaskBand(int)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetNoDataValue(int*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetNoDataValue(double)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetOverviewCount()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetCategoryNames(char**)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::ComputeStatistics(int, double*, double*, double*, double*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::DeleteNoDataValue()@Base" 2.1.0 1
 (c++)"GDALProxyRasterBand::GetVirtualMemAuto(GDALRWFlag, int*, long long*, char**)@Base" 1.11.0 1
 (c++)"GDALProxyRasterBand::ComputeRasterMinMax(int, double*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetDefaultHistogram(double*, double*, int*, unsigned long long**, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"GDALProxyRasterBand::SetDefaultHistogram(double, double, int, unsigned long long*)@Base" 2.0.1 1
 (c++)"GDALProxyRasterBand::GetMetadataDomainList()@Base" 1.11.0 1
 (c++)"GDALProxyRasterBand::HasArbitraryOverviews()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetColorInterpretation()@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetColorInterpretation(GDALColorInterp)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetRasterSampleOverview(unsigned long long)@Base" 2.0.1 1
 (c++)"GDALProxyRasterBand::UnrefUnderlyingRasterBand(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::Fill(double, double)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetScale(int*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::SetScale(double)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::GetOffset(int*)@Base" 1.8.0 1
 (c++)"GDALProxyRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"GDALProxyRasterBand::SetOffset(double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsAliasFor(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetHOM2PNO(double, double, double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetLocalCS(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTOWGS84(double, double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::Dereference()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAttrNode(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetWGS84SRS()@Base" 2.0.1 1
 (c++)"OGRSpatialReference::SetEckertIV(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetEckertVI(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetGnomonic(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetMercator(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetProjParm(char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetRobinson(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToERM(char*, char*, char*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::morphToESRI()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetAuthority(char const*, char const*, int)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetExtension(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetMollweide(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetPolyconic(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTMVariant(char const*, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::StripCTParms(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::ValidateAxis(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::ValidateUnit(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::dumpReadable()@Base" 1.10.1 1
 (c++)"OGRSpatialReference::FixupOrdering()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetEPSGGeogCS()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetCompoundCS(char const*, OGRSpatialReference const*, OGRSpatialReference const*)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetSinusoidal(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetStatePlane(int, int, char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::StripVertical()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromERM(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromOzi(char const* const*)@Base" 1.10.1 1
 (c++)"OGRSpatialReference::importFromPCI(char const*, char const*, double*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromURN(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromUrl(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromWkt(char**)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromXML(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::morphFromESRI()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::CopyGeogCSFrom(OGRSpatialReference const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetLinearUnits(char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetMercator2SP(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromDict(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromEPSG(int)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromESRI(char**)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromUSGS(long, long, double*, long, int)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetAngularUnits(char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetIWMPolyconic(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetNormProjParm(char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetOrthographic(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromEPSGA(int)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromProj4(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::AutoIdentifyEPSG()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetFromUserInput(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetStereographic(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromCRSURL(char const*)@Base" 1.10.1 1
 (c++)"OGRSpatialReference::IsLinearParameter(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::ValidateAuthority(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::ValidateVertDatum(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromURNPart(char const*, char const*, char const*)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::importFromWMSAUTO(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsAngularParameter(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetEquirectangular(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetWellKnownGeogCS(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::ValidateProjection(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::importFromPanorama(long, long, long, double*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::EPSGTreatsAsLatLong()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetEquirectangular2(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsLongitudeParameter(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTargetLinearUnits(char const*, char const*, double)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::importFromMICoordSys(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::DestroySpatialReference(OGRSpatialReference*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::ImportFromESRIWisconsinWKT(char const*, double, double, char const*, char const*)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::SetGaussSchreiberTMercator(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::EPSGTreatsAsNorthingEasting()@Base" 1.10.1 1
 (c++)"OGRSpatialReference::ImportFromESRIStatePlaneWKT(int, char const*, char const*, int, char const*)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::SetLinearUnitsAndUpdateParameters(char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::Clear()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::Fixup()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetAE(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetCS(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetEC(double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetGH(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetGS(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetMC(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetOS(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetPS(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTM(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetCEA(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetHOM(double, double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetIGH()@Base" 1.9.0 1
 (c++)"OGRSpatialReference::SetLCC(double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetQSC(double, double)@Base" 2.0.1 1
 (c++)"OGRSpatialReference::SetSCH(double, double, double, double)@Base" 2.1.0 1
 (c++)"OGRSpatialReference::SetSOC(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTMG(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetUTM(int, int)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetVDG(double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::Release()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetACEA(double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetAxes(char const*, char const*, OGRAxisOrientation, char const*, OGRAxisOrientation)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetGEOS(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetLAEA(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetLCCB(double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetNZMG(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetNode(char const*, char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetNode(char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetRoot(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTMSO(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetTPED(double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetBonne(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetHOMAC(double, double, double, double, double, double, double)@Base" 1.10.1 1
 (c++)"OGRSpatialReference::Validate(OGR_SRSNode*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::Validate()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::Reference()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetEckert(int, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetGeocCS(char const*)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::SetGeogCS(char const*, char const*, char const*, double, double, char const*, double, char const*, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetKrovak(double, double, double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetLCC1SP(double, double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetProjCS(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::SetVertCS(char const*, char const*, int)@Base" 1.9.0 1
 (c++)"OGRSpatialReference::SetWagner(int, double, double, double)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::OGRSpatialReference(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::OGRSpatialReference(OGRSpatialReference const&)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::OGRSpatialReference(char const*)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::OGRSpatialReference(OGRSpatialReference const&)@Base" 1.8.0 1
 (c++)"OGRSpatialReference::~OGRSpatialReference()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::~OGRSpatialReference()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::~OGRSpatialReference()@Base" 1.8.0 1
 (c++)"OGRSpatialReference::operator=(OGRSpatialReference const&)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::GetOverview(int)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::IWriteBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::GetOverviewCount()@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::VRTWarpedRasterBand(GDALDataset*, int, GDALDataType)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::VRTWarpedRasterBand(GDALDataset*, int, GDALDataType)@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::~VRTWarpedRasterBand()@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::~VRTWarpedRasterBand()@Base" 1.8.0 1
 (c++)"VRTWarpedRasterBand::~VRTWarpedRasterBand()@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::GetMaskBand()@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::GetMaskFlags()@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::GDALAllValidMaskBand(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::GDALAllValidMaskBand(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::~GDALAllValidMaskBand()@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::~GDALAllValidMaskBand()@Base" 1.8.0 1
 (c++)"GDALAllValidMaskBand::~GDALAllValidMaskBand()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::Initialize(GDALDataset*, char const*, char**, int)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::GetMaskBand(int)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::GetOverview(int, int)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::GetMaskFlags(int)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::HaveMaskFile(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::OverviewScan()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::IsInitialized()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::BuildOverviews(char const*, char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::CleanOverviews()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::CreateMaskBand(int, int)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::GetOverviewCount(int)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::TransferSiblingFiles(char**)@Base" 2.1.0 1
 (c++)"GDALDefaultOverviews::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"GDALDefaultOverviews::BuildOverviewsSubDataset(char const*, char const*, int, int*, int, int*, int (*)(double, char const*, void*), void*)@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::GDALDefaultOverviews()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::GDALDefaultOverviews()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::~GDALDefaultOverviews()@Base" 1.8.0 1
 (c++)"GDALDefaultOverviews::~GDALDefaultOverviews()@Base" 1.8.0 1
 (c++)"GDALGeorefPamDataset::TryLoadXML(char**)@Base" 2.2.0 1
 (c++)"GDALGeorefPamDataset::GetGCPCount()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::GetMetadata(char const*)@Base" 2.2.0 1
 (c++)"GDALGeorefPamDataset::SetMetadata(char**, char const*)@Base" 2.2.0 1
 (c++)"GDALGeorefPamDataset::GetGeoTransform(double*)@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::GetMetadataItem(char const*, char const*)@Base" 2.2.0 1
 (c++)"GDALGeorefPamDataset::SetMetadataItem(char const*, char const*, char const*)@Base" 2.2.0 1
 (c++)"GDALGeorefPamDataset::GetGCPProjection()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::GetProjectionRef()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::GetPAMGeorefSrcIndex()@Base" 2.2.0 1
 (c++)"GDALGeorefPamDataset::GetGCPs()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::GDALGeorefPamDataset()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::GDALGeorefPamDataset()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::~GDALGeorefPamDataset()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::~GDALGeorefPamDataset()@Base" 1.11.0 1
 (c++)"GDALGeorefPamDataset::~GDALGeorefPamDataset()@Base" 1.11.0 1
 (c++)"GDALProxyPoolDataset::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::SetProjection(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::SetOpenOptions(char**)@Base" 2.0.1 1
 (c++)"GDALProxyPoolDataset::GetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::SetGeoTransform(double*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GetGCPProjection()@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GetProjectionRef()@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GetInternalHandle(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::RefUnderlyingDataset()@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::AddSrcBandDescription(GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::UnrefUnderlyingDataset(GDALDataset*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GetGCPs()@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GDALProxyPoolDataset(char const*, int, int, GDALAccess, int, char const*, double*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::GDALProxyPoolDataset(char const*, int, int, GDALAccess, int, char const*, double*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::~GDALProxyPoolDataset()@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::~GDALProxyPoolDataset()@Base" 1.8.0 1
 (c++)"GDALProxyPoolDataset::~GDALProxyPoolDataset()@Base" 1.8.0 1
 (c++)"OGRMutexedDataSource::ExecuteSQL(char const*, OGRGeometry*, char const*)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::FlushCache()@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::DeleteLayer(int)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::GetMetadata(char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::SetMetadata(char**, char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::ICreateLayer(char const*, OGRSpatialReference*, OGRwkbGeometryType, char**)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::GetLayerCount()@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::GetStyleTable()@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::SetStyleTable(OGRStyleTable*)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::GetLayerByName(char const*)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::TestCapability(char const*)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::GetMetadataItem(char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::SetMetadataItem(char const*, char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::ReleaseResultSet(OGRLayer*)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::StartTransaction(int)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::CommitTransaction()@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::RollbackTransaction()@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::WrapLayerIfNecessary(OGRLayer*)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::SetStyleTableDirectly(OGRStyleTable*)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::GetName()@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::GetLayer(int)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::CopyLayer(OGRLayer*, char const*, char**)@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::OGRMutexedDataSource(OGRDataSource*, int, void*, int)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::OGRMutexedDataSource(OGRDataSource*, int, void*, int)@Base" 2.0.1 1
 (c++)"OGRMutexedDataSource::~OGRMutexedDataSource()@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::~OGRMutexedDataSource()@Base" 1.11.0 1
 (c++)"OGRMutexedDataSource::~OGRMutexedDataSource()@Base" 1.11.0 1
 (c++)"OGRPolyhedralSurface::addGeometry(OGRGeometry const*)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::flattenTo2D()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::setMeasured(int)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::importFromWkt(char**)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getGeometryRef(int)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::removeGeometry(int, int)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::CastToMultiPolygon(OGRPolyhedralSurface*)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::addGeometryDirectly(OGRGeometry*)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::CastToMultiPolygonImpl(OGRPolyhedralSurface*)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::setCoordinateDimension(int)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::empty()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::set3D(int)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::swapXY()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::transform(OGRCoordinateTransformation*)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::OGRPolyhedralSurface(OGRPolyhedralSurface const&)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::OGRPolyhedralSurface()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::OGRPolyhedralSurface(OGRPolyhedralSurface const&)@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::OGRPolyhedralSurface()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::~OGRPolyhedralSurface()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::~OGRPolyhedralSurface()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::~OGRPolyhedralSurface()@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::operator=(OGRPolyhedralSurface const&)@Base" 2.2.0 1
 (c++)"OGRSFDriverRegistrar::GetRegistrar()@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::GetDriverCount()@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::GetOpenDSCount()@Base" 2.0.1 1
 (c++)"OGRSFDriverRegistrar::RegisterDriver(OGRSFDriver*)@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::GetDriverByName(char const*)@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::CreateVectorOnly(GDALDriver*, char const*, char**)@Base" 2.0.1 1
 (c++)"OGRSFDriverRegistrar::DeleteDataSource(GDALDriver*, char const*)@Base" 2.0.1 1
 (c++)"OGRSFDriverRegistrar::OpenWithDriverArg(GDALDriver*, GDALOpenInfo*)@Base" 2.0.1 1
 (c++)"OGRSFDriverRegistrar::GetDriver(int)@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::GetOpenDS(int)@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::OGRSFDriverRegistrar()@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::OGRSFDriverRegistrar()@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::~OGRSFDriverRegistrar()@Base" 1.8.0 1
 (c++)"OGRSFDriverRegistrar::~OGRSFDriverRegistrar()@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::GetMaximum(int*)@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::GetMinimum(int*)@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::GetHistogram(double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::AddPixelFunction(char const*, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int))@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::GetPixelFunction(char const*)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::InitializePython()@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::ComputeStatistics(int, double*, double*, double*, double*, int (*)(double, char const*, void*), void*)@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::ComputeRasterMinMax(int, double*)@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::SetPixelFunctionName(char const*)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::SetSourceTransferType(GDALDataType)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::IGetDataCoverageStatus(int, int, int, int, int, double*)@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::Cleanup()@Base" 2.2.0 1
 (c++)"VRTDerivedRasterBand::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTDerivedRasterBand::VRTDerivedRasterBand(GDALDataset*, int, GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::VRTDerivedRasterBand(GDALDataset*, int)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::VRTDerivedRasterBand(GDALDataset*, int, GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::VRTDerivedRasterBand(GDALDataset*, int)@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::~VRTDerivedRasterBand()@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::~VRTDerivedRasterBand()@Base" 1.8.0 1
 (c++)"VRTDerivedRasterBand::~VRTDerivedRasterBand()@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::GetMaximum(int*)@Base" 1.9.0 1
 (c++)"VRTSourcedRasterBand::GetMinimum(int*)@Base" 1.9.0 1
 (c++)"VRTSourcedRasterBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::CheckSource(VRTSimpleSource*)@Base" 2.2.0 1
 (c++)"VRTSourcedRasterBand::GetFileList(char***, int*, int*, _CPLHashSet*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::GetHistogram(double, double, int, unsigned long long*, int, int, int (*)(double, char const*, void*), void*)@Base" 2.0.1 1
 (c++)"VRTSourcedRasterBand::AddFuncSource(CPLErr (*)(void*, int, int, int, int, void*), void*, double)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::SerializeToXML(char const*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::AddSimpleSource(GDALRasterBand*, double, double, double, double, double, double, double, double, char const*, double)@Base" 2.1.0 1
 (c++)"VRTSourcedRasterBand::ConfigureSource(VRTSimpleSource*, GDALRasterBand*, int, double, double, double, double, double, double, double, double)@Base" 2.1.0 1
 (c++)"VRTSourcedRasterBand::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::AddComplexSource(GDALRasterBand*, double, double, double, double, double, double, double, double, double, double, double, int)@Base" 2.1.0 1
 (c++)"VRTSourcedRasterBand::AddMaskBandSource(GDALRasterBand*, double, double, double, double, double, double, double, double)@Base" 2.1.0 1
 (c++)"VRTSourcedRasterBand::ComputeStatistics(int, double*, double*, double*, double*, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"VRTSourcedRasterBand::ComputeRasterMinMax(int, double*)@Base" 1.10.1 1
 (c++)"VRTSourcedRasterBand::IsSourcedRasterBand()@Base" 1.9.0 1
 (c++)"VRTSourcedRasterBand::GetMetadataDomainList()@Base" 1.11.0 1
 (c++)"VRTSourcedRasterBand::CloseDependentDatasets()@Base" 1.9.0 1
 (c++)"VRTSourcedRasterBand::IGetDataCoverageStatus(int, int, int, int, int, double*)@Base" 2.2.0 1
 (c++)"VRTSourcedRasterBand::CanUseSourcesMinMaxImplementations()@Base" 1.11.1 1
 (c++)"VRTSourcedRasterBand::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::AddSource(VRTSource*)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::IRasterIO(GDALRWFlag, int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*)@Base" 2.0.1 1
 (c++)"VRTSourcedRasterBand::VRTSourcedRasterBand(GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::VRTSourcedRasterBand(GDALDataset*, int, GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::VRTSourcedRasterBand(GDALDataset*, int)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::VRTSourcedRasterBand(GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::VRTSourcedRasterBand(GDALDataset*, int, GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::VRTSourcedRasterBand(GDALDataset*, int)@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::~VRTSourcedRasterBand()@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::~VRTSourcedRasterBand()@Base" 1.8.0 1
 (c++)"VRTSourcedRasterBand::~VRTSourcedRasterBand()@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::IsCaseSensitive(char const*)@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::GetDiskFreeSpace(char const*)@Base" 2.1.0 1
 (c++)"VSIFilesystemHandler::SupportsSparseFiles(char const*)@Base" 2.2.0 1
 (c++)"VSIFilesystemHandler::Open(char const*, char const*)@Base" 2.1.0 1
 (c++)"VSIFilesystemHandler::Mkdir(char const*, long)@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::Rmdir(char const*)@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::Rename(char const*, char const*)@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::Unlink(char const*)@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::ReadDir(char const*)@Base" 1.8.0 1
 (c++)"VSIFilesystemHandler::ReadDirEx(char const*, int)@Base" 2.1.0 1
 (c++)"OGRGenSQLResultsLayer::GetFeature(long long)@Base" 2.0.1 1
 (c++)"OGRGenSQLResultsLayer::ClearFilters()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::GetLayerDefn()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::ResetReading()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::GetNextFeature()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::PrepareSummary()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::SetNextByIndex(long long)@Base" 2.0.1 1
 (c++)"OGRGenSQLResultsLayer::TestCapability(char const*)@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::FreeIndexFields(OGRField*, unsigned int, bool)@Base" 2.2.0 1
 (c++)"OGRGenSQLResultsLayer::GetFeatureCount(int)@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::ReadIndexFields(OGRFeature*, int, OGRField*)@Base" 2.2.0 1
 (c++)"OGRGenSQLResultsLayer::GetSpatialFilter()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::SetSpatialFilter(OGRGeometry*)@Base" 1.10.1 1
 (c++)"OGRGenSQLResultsLayer::SetSpatialFilter(int, OGRGeometry*)@Base" 1.11.0 1
 (c++)"OGRGenSQLResultsLayer::SortIndexSection(OGRField const*, long long*, unsigned int, unsigned int)@Base" 2.2.0 1
 (c++)"OGRGenSQLResultsLayer::TranslateFeature(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::AddFieldDefnToSet(int, int, _CPLHashSet*)@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::CreateOrderByIndex()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::SetAttributeFilter(char const*)@Base" 1.10.1 1
 (c++)"OGRGenSQLResultsLayer::ApplyFiltersToSource()@Base" 1.11.0 1
 (c++)"OGRGenSQLResultsLayer::InvalidateOrderByIndex()@Base" 1.10.1 1
 (c++)"OGRGenSQLResultsLayer::ContainGeomSpecialField(swq_expr_node*)@Base" 1.9.0 1
 (c++)"OGRGenSQLResultsLayer::FindAndSetIgnoredFields()@Base" 1.9.0 1
 (c++)"OGRGenSQLResultsLayer::ExploreExprForIgnoredFields(swq_expr_node*, _CPLHashSet*)@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::MustEvaluateSpatialFilterOnGenSQL()@Base" 1.11.0 1
 (c++)"OGRGenSQLResultsLayer::Compare(OGRField const*, OGRField const*)@Base" 2.2.0 1
 (c++)"OGRGenSQLResultsLayer::GetExtent(OGREnvelope*, int)@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::GetExtent(int, OGREnvelope*, int)@Base" 1.11.0 1
 (c++)"OGRGenSQLResultsLayer::OGRGenSQLResultsLayer(GDALDataset*, void*, OGRGeometry*, char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRGenSQLResultsLayer::OGRGenSQLResultsLayer(GDALDataset*, void*, OGRGeometry*, char const*, char const*)@Base" 2.0.1 1
 (c++)"OGRGenSQLResultsLayer::~OGRGenSQLResultsLayer()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::~OGRGenSQLResultsLayer()@Base" 1.8.0 1
 (c++)"OGRGenSQLResultsLayer::~OGRGenSQLResultsLayer()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::closeRings()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::segmentize(double)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::addGeometry(OGRGeometry const*)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::flattenTo2D()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::setMeasured(int)@Base" 2.1.0 1
 (c++)"OGRGeometryCollection::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::importFromWkt(char**)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::getGeometryRef(int)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::removeGeometry(int, int)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::addGeometryDirectly(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::importFromWkbInternal(unsigned char*, int, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::importFromWktInternal(char**, int)@Base" 1.9.0 1
 (c++)"OGRGeometryCollection::setCoordinateDimension(int)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::CastToGeometryCollection(OGRGeometryCollection*)@Base" 2.2.0 1
 (c++)"OGRGeometryCollection::TransferMembersAndDestroy(OGRGeometryCollection*, OGRGeometryCollection*)@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::empty()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::set3D(int)@Base" 2.1.0 1
 (c++)"OGRGeometryCollection::swapXY()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::transform(OGRCoordinateTransformation*)@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::OGRGeometryCollection(OGRGeometryCollection const&)@Base" 2.1.0 1
 (c++)"OGRGeometryCollection::OGRGeometryCollection()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::OGRGeometryCollection(OGRGeometryCollection const&)@Base" 2.1.0 1
 (c++)"OGRGeometryCollection::OGRGeometryCollection()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::~OGRGeometryCollection()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::~OGRGeometryCollection()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::~OGRGeometryCollection()@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::operator=(OGRGeometryCollection const&)@Base" 2.1.0 1
 (c++)"CPLODBCDriverInstaller::RemoveDriver(char const*, int)@Base" 1.8.0 1
 (c++)"CPLODBCDriverInstaller::InstallDriver(char const*, char const*, unsigned short)@Base" 1.8.0 1
 (c++)"CPLODBCDriverInstaller::CPLODBCDriverInstaller()@Base" 1.8.0 1
 (c++)"CPLODBCDriverInstaller::CPLODBCDriverInstaller()@Base" 1.8.0 1
 (c++)"GDALJP2AbstractDataset::GetFileList()@Base" 2.0.1 1
 (c++)"GDALJP2AbstractDataset::GetLayerCount()@Base" 2.0.1 1
 (c++)"GDALJP2AbstractDataset::LoadJP2Metadata(GDALOpenInfo*, char const*)@Base" 1.11.0 1
 (c++)"GDALJP2AbstractDataset::LoadVectorLayers(int)@Base" 2.0.1 1
 (c++)"GDALJP2AbstractDataset::CloseDependentDatasets()@Base" 2.0.1 1
 (c++)"GDALJP2AbstractDataset::GetLayer(int)@Base" 2.0.1 1
 (c++)"GDALJP2AbstractDataset::GDALJP2AbstractDataset()@Base" 1.11.0 1
 (c++)"GDALJP2AbstractDataset::GDALJP2AbstractDataset()@Base" 1.11.0 1
 (c++)"GDALJP2AbstractDataset::~GDALJP2AbstractDataset()@Base" 1.11.0 1
 (c++)"GDALJP2AbstractDataset::~GDALJP2AbstractDataset()@Base" 1.11.0 1
 (c++)"GDALJP2AbstractDataset::~GDALJP2AbstractDataset()@Base" 1.11.0 1
 (c++)"OGRTriangulatedSurface::addGeometry(OGRGeometry const*)@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::CastToMultiPolygonImpl(OGRPolyhedralSurface*)@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::CastToPolyhedralSurface(OGRTriangulatedSurface*)@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::OGRTriangulatedSurface(OGRTriangulatedSurface const&)@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::OGRTriangulatedSurface()@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::OGRTriangulatedSurface(OGRTriangulatedSurface const&)@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::OGRTriangulatedSurface()@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::~OGRTriangulatedSurface()@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::~OGRTriangulatedSurface()@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::~OGRTriangulatedSurface()@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::operator=(OGRTriangulatedSurface const&)@Base" 2.2.0 1
 (c++)"GDALMultiDomainMetadata::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::SetMetadata(char**, char const*)@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::SetMetadataItem(char const*, char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::Clear()@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::XMLInit(CPLXMLNode*, int)@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::Serialize()@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::GDALMultiDomainMetadata()@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::GDALMultiDomainMetadata()@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::~GDALMultiDomainMetadata()@Base" 1.8.0 1
 (c++)"GDALMultiDomainMetadata::~GDALMultiDomainMetadata()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetMaskBand()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetMetadata(char const*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetOverview(int)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetUnitType()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetColorTable()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetMetadataItem(char const*, char const*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetCategoryNames()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GetRasterSampleOverview(unsigned long long)@Base" 2.0.1 1
 (c++)"GDALProxyPoolRasterBand::RefUnderlyingRasterBand()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::AddSrcMaskBandDescription(GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::UnrefUnderlyingRasterBand(GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::Init()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GDALProxyPoolRasterBand(GDALProxyPoolDataset*, GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GDALProxyPoolRasterBand(GDALProxyPoolDataset*, int, GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GDALProxyPoolRasterBand(GDALProxyPoolDataset*, GDALRasterBand*)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::GDALProxyPoolRasterBand(GDALProxyPoolDataset*, int, GDALDataType, int, int)@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::~GDALProxyPoolRasterBand()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::~GDALProxyPoolRasterBand()@Base" 1.8.0 1
 (c++)"GDALProxyPoolRasterBand::~GDALProxyPoolRasterBand()@Base" 1.8.0 1
 (c++)"GMLGeometryPropertyDefn::GMLGeometryPropertyDefn(char const*, char const*, int, int, bool)@Base" 2.1.0 1
 (c++)"GMLGeometryPropertyDefn::GMLGeometryPropertyDefn(char const*, char const*, int, int, bool)@Base" 2.1.0 1
 (c++)"GMLGeometryPropertyDefn::~GMLGeometryPropertyDefn()@Base" 1.11.0 1
 (c++)"GMLGeometryPropertyDefn::~GMLGeometryPropertyDefn()@Base" 1.11.0 1
 (c++)"GDALNoDataValuesMaskBand::IReadBlock(int, int, void*)@Base" 1.8.0 1
 (c++)"GDALNoDataValuesMaskBand::GDALNoDataValuesMaskBand(GDALDataset*)@Base" 1.8.0 1
 (c++)"GDALNoDataValuesMaskBand::GDALNoDataValuesMaskBand(GDALDataset*)@Base" 1.8.0 1
 (c++)"GDALNoDataValuesMaskBand::~GDALNoDataValuesMaskBand()@Base" 1.8.0 1
 (c++)"GDALNoDataValuesMaskBand::~GDALNoDataValuesMaskBand()@Base" 1.8.0 1
 (c++)"GDALNoDataValuesMaskBand::~GDALNoDataValuesMaskBand()@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::SetRowCount(int)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::CreateColumn(char const*, GDALRATFieldType, GDALRATFieldUsage)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::DumpReadable(_IO_FILE*)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::SetLinearBinning(double, double)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::TranslateToColorTable(int)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::InitializeFromColorTable(GDALColorTable const*)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::XMLInit(CPLXMLNode*, char const*)@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::ValuesIO(GDALRWFlag, int, int, int, char**)@Base" 1.11.0 1
 (c++)"GDALRasterAttributeTable::ValuesIO(GDALRWFlag, int, int, int, double*)@Base" 1.11.0 1
 (c++)"GDALRasterAttributeTable::ValuesIO(GDALRWFlag, int, int, int, int*)@Base" 1.11.0 1
 (c++)"GDALRasterAttributeTable::~GDALRasterAttributeTable()@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::~GDALRasterAttributeTable()@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::~GDALRasterAttributeTable()@Base" 1.8.0 1
 (c++)"IOGRTransactionBehaviour::~IOGRTransactionBehaviour()@Base" 2.0.1 1
 (c++)"IOGRTransactionBehaviour::~IOGRTransactionBehaviour()@Base" 2.0.1 1
 (c++)"IOGRTransactionBehaviour::~IOGRTransactionBehaviour()@Base" 2.0.1 1
 (c++)"GDALAbstractBandBlockCache::CreateBlock(int, int)@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::AddBlockToFreeList(GDALRasterBlock*)@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::FreeDanglingBlocks()@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::UnreferenceBlockBase()@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::WaitKeepAliveCounter()@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::GDALAbstractBandBlockCache(GDALRasterBand*)@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::GDALAbstractBandBlockCache(GDALRasterBand*)@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::~GDALAbstractBandBlockCache()@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::~GDALAbstractBandBlockCache()@Base" 2.1.0 1
 (c++)"GDALAbstractBandBlockCache::~GDALAbstractBandBlockCache()@Base" 2.1.0 1
 (c++)"OGRCoordinateTransformation::GetEmitErrors()@Base" 2.2.0 1
 (c++)"OGRCoordinateTransformation::SetEmitErrors(bool)@Base" 2.2.0 1
 (c++)"OGRCoordinateTransformation::DestroyCT(OGRCoordinateTransformation*)@Base" 1.8.0 1
 (c++)"IOGREditableLayerSynchronizer::~IOGREditableLayerSynchronizer()@Base" 2.1.0 1
 (c++)"IOGREditableLayerSynchronizer::~IOGREditableLayerSynchronizer()@Base" 2.1.0 1
 (c++)"IOGREditableLayerSynchronizer::~IOGREditableLayerSynchronizer()@Base" 2.1.0 1
 (c++)"GDALDefaultRasterAttributeTable::SetRowCount(int)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::CreateColumn(char const*, GDALRATFieldType, GDALRATFieldUsage)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::AnalyseColumns()@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::SetLinearBinning(double, double)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::ChangesAreWrittenToFile()@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::SetValue(int, int, char const*)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::SetValue(int, int, double)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::SetValue(int, int, int)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GDALDefaultRasterAttributeTable(GDALDefaultRasterAttributeTable const&)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GDALDefaultRasterAttributeTable()@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GDALDefaultRasterAttributeTable(GDALDefaultRasterAttributeTable const&)@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GDALDefaultRasterAttributeTable()@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::~GDALDefaultRasterAttributeTable()@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::~GDALDefaultRasterAttributeTable()@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::~GDALDefaultRasterAttributeTable()@Base" 1.11.0 1
 (c++)"OGR::transcode(unsigned short const*, CPLString&, int)@Base" 2.2.0 1
 (c++)"OGR::transcode(unsigned short const*, int)@Base" 2.2.0 1
 (c++)"CADFile::ReadTables(CADFile::OpenOptions)@Base" 2.2.0 1
 (c++)"CADFile::isReadingUnsupportedGeometries()@Base" 2.2.0 1
 (c++)"CADFile::GetLayer(unsigned int)@Base" 2.2.0 1
 (c++)"CADFile::ParseFile(CADFile::OpenOptions, bool)@Base" 2.2.0 1
 (c++)"CADFile::CADFile(CADFileIO*)@Base" 2.2.0 1
 (c++)"CADFile::CADFile(CADFileIO*)@Base" 2.2.0 1
 (c++)"CADFile::~CADFile()@Base" 2.2.0 1
 (c++)"CADFile::~CADFile()@Base" 2.2.0 1
 (c++)"CADFile::~CADFile()@Base" 2.2.0 1
 (c++)"GNMRule::CanConnect(CPLString const&, CPLString const&, CPLString const&)@Base" 2.2.0 1
 (c++)"GNMRule::ParseRuleString()@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule(char const*)@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule(GNMRule const&)@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule()@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule(char const*)@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule(GNMRule const&)@Base" 2.2.0 1
 (c++)"GNMRule::GNMRule()@Base" 2.2.0 1
 (c++)"GNMRule::~GNMRule()@Base" 2.2.0 1
 (c++)"GNMRule::~GNMRule()@Base" 2.2.0 1
 (c++)"GNMRule::~GNMRule()@Base" 2.2.0 1
 (c++)"CADClass::CADClass()@Base" 2.2.0 1
 (c++)"CADClass::CADClass()@Base" 2.2.0 1
 (c++)"CADClass::~CADClass()@Base" 2.2.0 1
 (c++)"CADClass::~CADClass()@Base" 2.2.0 1
 (c++)"CADLayer::getGeometry(unsigned int)@Base" 2.2.0 1
 (c++)"CADLayer::setPlotting(bool)@Base" 2.2.0 1
 (c++)"CADLayer::addAttribute(CADObject const*)@Base" 2.2.0 1
 (c++)"CADLayer::setLineWeight(short)@Base" 2.2.0 1
 (c++)"CADLayer::getGeometryTypes()@Base" 2.2.0 1
 (c++)"CADLayer::getAttributesTags[abi:cxx11]()@Base" 2.2.0 1
 (c++)"CADLayer::setFrozenByDefault(bool)@Base" 2.2.0 1
 (c++)"CADLayer::setId(unsigned int const&)@Base" 2.2.0 1
 (c++)"CADLayer::setOn(bool)@Base" 2.2.0 1
 (c++)"CADLayer::setName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CADLayer::getImage(unsigned int)@Base" 2.2.0 1
 (c++)"CADLayer::setColor(short)@Base" 2.2.0 1
 (c++)"CADLayer::addHandle(long, CADObject::ObjectType, long)@Base" 2.2.0 1
 (c++)"CADLayer::setFrozen(bool)@Base" 2.2.0 1
 (c++)"CADLayer::setHandle(long)@Base" 2.2.0 1
 (c++)"CADLayer::setLocked(bool)@Base" 2.2.0 1
 (c++)"CADLayer::CADLayer(CADFile*)@Base" 2.2.0 1
 (c++)"CADLayer::CADLayer(CADFile*)@Base" 2.2.0 1
 (c++)"CADLayer::~CADLayer()@Base" 2.2.0 1
 (c++)"CADLayer::~CADLayer()@Base" 2.2.0 1
 (c++)"GNMGraph::ChangeEdge(long long, double, double)@Base" 2.2.0 1
 (c++)"GNMGraph::DeleteEdge(long long)@Base" 2.2.0 1
 (c++)"GNMGraph::DeleteVertex(long long)@Base" 2.2.0 1
 (c++)"GNMGraph::TraceTargets(std::queue<long long, std::deque<long long, std::allocator<long long> > >&, std::set<long long, std::less<long long>, std::allocator<long long> >&, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >&)@Base" 2.2.0 1
 (c++)"GNMGraph::KShortestPaths(long long, long long, unsigned int)@Base" 2.2.0 1
 (c++)"GNMGraph::ChangeBlockState(long long, bool)@Base" 2.2.0 1
 (c++)"GNMGraph::ChangeAllBlockState(bool)@Base" 2.2.0 1
 (c++)"GNMGraph::ConnectedComponents(std::vector<long long, std::allocator<long long> > const&)@Base" 2.2.0 1
 (c++)"GNMGraph::DijkstraShortestPath(long long, long long)@Base" 2.2.0 1
 (c++)"GNMGraph::DijkstraShortestPath(long long, long long, std::map<long long, GNMStdEdge, std::less<long long>, std::allocator<std::pair<long long const, GNMStdEdge> > > const&)@Base" 2.2.0 1
 (c++)"GNMGraph::DijkstraShortestPathTree(long long, std::map<long long, GNMStdEdge, std::less<long long>, std::allocator<std::pair<long long const, GNMStdEdge> > > const&, std::map<long long, long long, std::less<long long>, std::allocator<std::pair<long long const, long long> > >&)@Base" 2.2.0 1
 (c++)"GNMGraph::Clear()@Base" 2.2.0 1
 (c++)"GNMGraph::AddEdge(long long, long long, long long, bool, double, double)@Base" 2.2.0 1
 (c++)"GNMGraph::AddVertex(long long)@Base" 2.2.0 1
 (c++)"GNMGraph::GNMGraph()@Base" 2.2.0 1
 (c++)"GNMGraph::GNMGraph()@Base" 2.2.0 1
 (c++)"GNMGraph::~GNMGraph()@Base" 2.2.0 1
 (c++)"GNMGraph::~GNMGraph()@Base" 2.2.0 1
 (c++)"GNMGraph::~GNMGraph()@Base" 2.2.0 1
 (c++)"OGRCurve::CastToLineString(OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurve::CastToLinearRing(OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurve::CastToCompoundCurve(OGRCurve*)@Base" 2.0.1 1
 (c++)"OGRCurve::OGRCurve(OGRCurve const&)@Base" 2.1.0 1
 (c++)"OGRCurve::OGRCurve()@Base" 1.8.0 1
 (c++)"OGRCurve::OGRCurve(OGRCurve const&)@Base" 2.1.0 1
 (c++)"OGRCurve::OGRCurve()@Base" 1.8.0 1
 (c++)"OGRCurve::~OGRCurve()@Base" 1.8.0 1
 (c++)"OGRCurve::~OGRCurve()@Base" 1.8.0 1
 (c++)"OGRCurve::~OGRCurve()@Base" 1.8.0 1
 (c++)"OGRCurve::operator=(OGRCurve const&)@Base" 2.1.0 1
 (c++)"OGRLayer::GetFeature(long long)@Base" 2.0.1 1
 (c++)"OGRLayer::SetFeature(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRLayer::SyncToDisk()@Base" 1.8.0 1
 (c++)"OGRLayer::CreateField(OGRFieldDefn*, int)@Base" 1.8.0 1
 (c++)"OGRLayer::DeleteField(int)@Base" 1.9.0 1
 (c++)"OGRLayer::Dereference()@Base" 1.8.0 1
 (c++)"OGRLayer::GetGeomType()@Base" 1.8.0 1
 (c++)"OGRLayer::ISetFeature(OGRFeature*)@Base" 2.0.1 1
 (c++)"OGRLayer::GetFIDColumn()@Base" 1.8.0 1
 (c++)"OGRLayer::Intersection(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::ReorderField(int, int)@Base" 1.9.0 1
 (c++)"OGRLayer::CreateFeature(OGRFeature*)@Base" 1.8.0 1
 (c++)"OGRLayer::DeleteFeature(long long)@Base" 2.0.1 1
 (c++)"OGRLayer::GetSpatialRef()@Base" 1.8.0 1
 (c++)"OGRLayer::GetStyleTable()@Base" 1.8.0 1
 (c++)"OGRLayer::InstallFilter(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRLayer::ReorderFields(int*)@Base" 1.9.0 1
 (c++)"OGRLayer::SetStyleTable(OGRStyleTable*)@Base" 1.8.0 1
 (c++)"OGRLayer::SymDifference(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::AlterFieldDefn(int, OGRFieldDefn*, int)@Base" 1.9.0 1
 (c++)"OGRLayer::FilterGeometry(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRLayer::FindFieldIndex(char const*, int)@Base" 1.11.0 1
 (c++)"OGRLayer::ICreateFeature(OGRFeature*)@Base" 2.0.1 1
 (c++)"OGRLayer::SetNextByIndex(long long)@Base" 2.0.1 1
 (c++)"OGRLayer::CreateGeomField(OGRGeomFieldDefn*, int)@Base" 1.11.0 1
 (c++)"OGRLayer::GetFeatureCount(int)@Base" 1.8.0 1
 (c++)"OGRLayer::GetFeaturesRead()@Base" 1.8.0 1
 (c++)"OGRLayer::GetSpatialFilter()@Base" 1.8.0 1
 (c++)"OGRLayer::SetIgnoredFields(char const**)@Base" 1.8.0 1
 (c++)"OGRLayer::SetSpatialFilter(OGRGeometry*)@Base" 1.8.0 1
 (c++)"OGRLayer::SetSpatialFilter(int, OGRGeometry*)@Base" 1.11.0 1
 (c++)"OGRLayer::StartTransaction()@Base" 1.8.0 1
 (c++)"OGRLayer::CommitTransaction()@Base" 1.8.0 1
 (c++)"OGRLayer::GetExtentInternal(int, OGREnvelope*, int)@Base" 1.11.0 1
 (c++)"OGRLayer::GetGeometryColumn()@Base" 1.8.0 1
 (c++)"OGRLayer::SetAttributeFilter(char const*)@Base" 1.8.0 1
 (c++)"OGRLayer::RollbackTransaction()@Base" 1.8.0 1
 (c++)"OGRLayer::SetSpatialFilterRect(double, double, double, double)@Base" 1.8.0 1
 (c++)"OGRLayer::SetSpatialFilterRect(int, double, double, double, double)@Base" 1.11.0 1
 (c++)"OGRLayer::SetStyleTableDirectly(OGRStyleTable*)@Base" 1.8.0 1
 (c++)"OGRLayer::InitializeIndexSupport(char const*)@Base" 1.8.0 1
 (c++)"OGRLayer::ConvertGeomsIfNecessary(OGRFeature*)@Base" 2.1.0 1
 (c++)"OGRLayer::AttributeFilterEvaluationNeedsGeometry()@Base" 1.9.0 1
 (c++)"OGRLayer::Clip(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::Erase(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::Union(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::Update(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::GetName()@Base" 1.8.0 1
 (c++)"OGRLayer::Identity(OGRLayer*, OGRLayer*, char**, int (*)(double, char const*, void*), void*)@Base" 1.10.1 1
 (c++)"OGRLayer::GetExtent(OGREnvelope*, int)@Base" 1.8.0 1
 (c++)"OGRLayer::GetExtent(int, OGREnvelope*, int)@Base" 1.11.0 1
 (c++)"OGRLayer::Reference()@Base" 1.8.0 1
 (c++)"OGRLayer::OGRLayer()@Base" 1.8.0 1
 (c++)"OGRLayer::OGRLayer()@Base" 1.8.0 1
 (c++)"OGRLayer::~OGRLayer()@Base" 1.8.0 1
 (c++)"OGRLayer::~OGRLayer()@Base" 1.8.0 1
 (c++)"OGRLayer::~OGRLayer()@Base" 1.8.0 1
 (c++)"OGRPoint::flattenTo2D()@Base" 1.8.0 1
 (c++)"OGRPoint::importFromWkb(unsigned char*, int, OGRwkbVariant)@Base" 2.0.1 1
 (c++)"OGRPoint::importFromWkt(char**)@Base" 1.8.0 1
 (c++)"OGRPoint::setCoordinateDimension(int)@Base" 1.8.0 1
 (c++)"OGRPoint::empty()@Base" 1.8.0 1
 (c++)"OGRPoint::swapXY()@Base" 1.8.0 1
 (c++)"OGRPoint::transform(OGRCoordinateTransformation*)@Base" 1.8.0 1
 (c++)"OGRPoint::OGRPoint(OGRPoint const&)@Base" 2.1.0 1
 (c++)"OGRPoint::OGRPoint(double, double)@Base" 1.8.0 1
 (c++)"OGRPoint::OGRPoint(double, double, double)@Base" 1.8.0 1
 (c++)"OGRPoint::OGRPoint(double, double, double, double)@Base" 2.1.0 1
 (c++)"OGRPoint::OGRPoint()@Base" 1.8.0 1
 (c++)"OGRPoint::OGRPoint(OGRPoint const&)@Base" 2.1.0 1
 (c++)"OGRPoint::OGRPoint(double, double)@Base" 1.8.0 1
 (c++)"OGRPoint::OGRPoint(double, double, double)@Base" 1.8.0 1
 (c++)"OGRPoint::OGRPoint(double, double, double, double)@Base" 2.1.0 1
 (c++)"OGRPoint::OGRPoint()@Base" 1.8.0 1
 (c++)"OGRPoint::~OGRPoint()@Base" 1.8.0 1
 (c++)"OGRPoint::~OGRPoint()@Base" 1.8.0 1
 (c++)"OGRPoint::~OGRPoint()@Base" 1.8.0 1
 (c++)"OGRPoint::operator=(OGRPoint const&)@Base" 2.1.0 1
 (c++)"CADHandle::addOffset(unsigned char)@Base" 2.2.0 1
 (c++)"CADHandle::getAsLong(std::vector<unsigned char, std::allocator<unsigned char> > const&)@Base" 2.2.0 1
 (c++)"CADHandle::CADHandle(CADHandle const&)@Base" 2.2.0 1
 (c++)"CADHandle::CADHandle(unsigned char)@Base" 2.2.0 1
 (c++)"CADHandle::CADHandle(CADHandle const&)@Base" 2.2.0 1
 (c++)"CADHandle::CADHandle(unsigned char)@Base" 2.2.0 1
 (c++)"CADHandle::operator=(CADHandle const&)@Base" 2.2.0 1
 (c++)"CADHeader::getGroupCode(short)@Base" 2.2.0 1
 (c++)"CADHeader::getValueName(short)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, char const*)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, CADVariant const&)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, bool)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, double)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, double, double, double)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, int)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, long, long)@Base" 2.2.0 1
 (c++)"CADHeader::addValue(short, short)@Base" 2.2.0 1
 (c++)"CADHeader::CADHeader()@Base" 2.2.0 1
 (c++)"CADHeader::CADHeader()@Base" 2.2.0 1
 (c++)"CADTables::GetTableHandle(CADTables::TableType)@Base" 2.2.0 1
 (c++)"CADTables::ReadLayersTable(CADFile*, long)@Base" 2.2.0 1
 (c++)"CADTables::AddTable(CADTables::TableType, CADHandle const&)@Base" 2.2.0 1
 (c++)"CADTables::GetLayer(unsigned int)@Base" 2.2.0 1
 (c++)"CADTables::FillLayer(CADEntityObject const*)@Base" 2.2.0 1
 (c++)"CADTables::ReadTable(CADFile*, CADTables::TableType)@Base" 2.2.0 1
 (c++)"CADTables::CADTables()@Base" 2.2.0 1
 (c++)"CADTables::CADTables()@Base" 2.2.0 1
 (c++)"CPLString::replaceAll(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CPLString::replaceAll(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)@Base" 2.2.0 1
 (c++)"CPLString::replaceAll(char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"CPLString::replaceAll(char, char)@Base" 2.2.0 1
 (c++)"CPLString::Trim()@Base" 1.8.0 1
 (c++)"CPLString::Printf(char const*, ...)@Base" 1.8.0 1
 (c++)"CPLString::Recode(char const*, char const*)@Base" 1.8.0 1
 (c++)"CPLString::FormatC(double, char const*)@Base" 1.8.0 1
 (c++)"CPLString::tolower()@Base" 1.9.0 1
 (c++)"CPLString::toupper()@Base" 1.9.0 1
 (c++)"CPLString::vPrintf(char const*, std::__va_list)@Base" 1.8.0 1
 (c++)"CPLString::~CPLString()@Base" 2.1.0 1
 (c++)"CPLString::~CPLString()@Base" 2.1.0 1
 (c++)"S57Reader::FetchPoint(int, int, double*, double*, double*)@Base" 1.8.0 1
 (c++)"S57Reader::ReadVector(int, int)@Base" 1.8.0 1
 (c++)"S57Reader::SetOptions(char**)@Base" 1.8.0 1
 (c++)"S57Reader::ReadFeature(int, OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"S57Reader::ApplyUpdates(DDFModule*)@Base" 1.8.0 1
 (c++)"S57Reader::RecodeByDSSI(char const*, bool)@Base" 1.10.1 1
 (c++)"S57Reader::SetClassBased(S57ClassRegistrar*, S57ClassContentExplorer*)@Base" 1.11.0 1
 (c++)"S57Reader::AddFeatureDefn(OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"S57Reader::GetNextFEIndex(int)@Base" 1.8.0 1
 (c++)"S57Reader::SetNextFEIndex(int, int)@Base" 1.8.0 1
 (c++)"S57Reader::AssembleFeature(DDFRecord*, OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"S57Reader::ReadNextFeature(OGRFeatureDefn*)@Base" 1.8.0 1
 (c++)"S57Reader::CollectClassList(std::vector<int, std::allocator<int> >&)@Base" 1.11.0 1
 (c++)"S57Reader::ApplyRecordUpdate(DDFRecord*, DDFRecord*)@Base" 1.8.0 1
 (c++)"S57Reader::FindAndApplyUpdates(char const*)@Base" 1.8.0 1
 (c++)"S57Reader::GenerateLNAMAndRefs(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::AssembleAreaGeometry(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::AssembleLineGeometry(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::AssemblePointGeometry(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::NextPendingMultiPoint()@Base" 1.8.0 1
 (c++)"S57Reader::ClearPendingMultiPoint()@Base" 1.8.0 1
 (c++)"S57Reader::GenerateFSPTAttributes(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::AssembleSoundingGeometry(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::ApplyObjectClassAttributes(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Reader::Open(int)@Base" 1.8.0 1
 (c++)"S57Reader::Close()@Base" 1.8.0 1
 (c++)"S57Reader::Ingest()@Base" 1.8.0 1
 (c++)"S57Reader::Rewind()@Base" 1.8.0 1
 (c++)"S57Reader::ReadDSID()@Base" 1.8.0 1
 (c++)"S57Reader::FetchLine(DDFRecord*, int, int, OGRLineString*)@Base" 1.8.0 1
 (c++)"S57Reader::FindFDefn(DDFRecord*)@Base" 1.8.0 1
 (c++)"S57Reader::GetExtent(OGREnvelope*, int)@Base" 1.8.0 1
 (c++)"S57Reader::ParseName(DDFField*, int, int*)@Base" 1.8.0 1
 (c++)"S57Reader::S57Reader(char const*)@Base" 1.8.0 1
 (c++)"S57Reader::S57Reader(char const*)@Base" 1.8.0 1
 (c++)"S57Reader::~S57Reader()@Base" 1.8.0 1
 (c++)"S57Reader::~S57Reader()@Base" 1.8.0 1
 (c++)"S57Writer::MakeRecord()@Base" 1.8.0 1
 (c++)"S57Writer::CreateS57File(char const*)@Base" 1.8.0 1
 (c++)"S57Writer::SetClassBased(S57ClassRegistrar*, S57ClassContentExplorer*)@Base" 1.11.0 1
 (c++)"S57Writer::WriteGeometry(DDFRecord*, int, double*, double*, double*)@Base" 1.8.0 1
 (c++)"S57Writer::WritePrimitive(OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Writer::WriteCompleteFeature(OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Writer::Close()@Base" 1.8.0 1
 (c++)"S57Writer::WriteATTF(DDFRecord*, OGRFeature*)@Base" 1.8.0 1
 (c++)"S57Writer::WriteDSID(int, int, char const*, char const*, char const*, char const*, char const*, char const*, int, char const*, int, int, int, int, int, int)@Base" 2.0.1 1
 (c++)"S57Writer::WriteDSPM(int, int, int, int)@Base" 2.0.1 1
 (c++)"S57Writer::S57Writer()@Base" 1.8.0 1
 (c++)"S57Writer::S57Writer()@Base" 1.8.0 1
 (c++)"S57Writer::~S57Writer()@Base" 1.8.0 1
 (c++)"S57Writer::~S57Writer()@Base" 1.8.0 1
 (c++)"VRTSource::GetFileList(char***, int*, int*, _CPLHashSet*)@Base" 1.11.0 1
 (c++)"VRTSource::IsSimpleSource()@Base" 1.11.0 1
 (c++)"VRTSource::~VRTSource()@Base" 1.11.0 1
 (c++)"VRTSource::~VRTSource()@Base" 1.11.0 1
 (c++)"VRTSource::~VRTSource()@Base" 1.11.0 1
 (c++)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)@Base" 2.2.0 1
 (c++)"CADClasses::getClassByNum(short) const@Base" 2.2.0 1
 (c++)"CADClasses::print() const@Base" 2.2.0 1
 (c++)"CADVariant::getDecimal() const@Base" 2.2.0 1
 (c++)"CADVariant::getX() const@Base" 2.2.0 1
 (c++)"CADVariant::getY() const@Base" 2.2.0 1
 (c++)"CADVariant::getZ() const@Base" 2.2.0 1
 (c++)"CADVariant::getReal() const@Base" 2.2.0 1
 (c++)"CADVariant::getType() const@Base" 2.2.0 1
 (c++)"CADVariant::getHandle() const@Base" 2.2.0 1
 (c++)"CADVariant::getString[abi:cxx11]() const@Base" 2.2.0 1
 (c++)"CADXRecord::getRecordData[abi:cxx11]() const@Base" 2.2.0 1
 (c++)"GMLFeature::GetGeometryRef(int) const@Base" 1.11.0 1
 (c++)"GNMNetwork::GetVersion() const@Base" 2.2.0 1
 (c++)"GNMNetwork::GetName() const@Base" 2.2.0 1
 (c++)"IGMLReader::IsSequentialLayers() const@Base" 1.9.0 1
 (c++)"OGRPolygon::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 1.11.0 1
 (c++)"OGRPolygon::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRPolygon::PointOnSurface(OGRPoint*) const@Base" 1.8.0 1
 (c++)"OGRPolygon::CurvePolyToPoly(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRPolygon::getExteriorRing() const@Base" 1.8.0 1
 (c++)"OGRPolygon::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRPolygon::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRPolygon::getInteriorRing(int) const@Base" 1.8.0 1
 (c++)"OGRPolygon::IsPointOnSurface(OGRPoint const*) const@Base" 1.8.0 1
 (c++)"OGRPolygon::getCurveGeometry(char const* const*) const@Base" 2.0.1 1
 (c++)"OGRPolygon::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRPolygon::getLinearGeometry(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRPolygon::GetCasterToPolygon() const@Base" 2.0.1 1
 (c++)"OGRPolygon::GetCasterToCurvePolygon() const@Base" 2.0.1 1
 (c++)"OGRPolygon::WkbSize() const@Base" 1.8.0 1
 (c++)"OGRPolygon::checkRing(OGRCurve*) const@Base" 2.0.1 1
 (c++)"GDALDataset::GetRefCount() const@Base" 2.0.1 1
 (c++)"GDALDataset::GetSummaryRefCount() const@Base" 2.0.1 1
 (c++)"GDALDataset::GetShared() const@Base" 2.2.0 1
 (c++)"OGRGeometry::ConvexHull() const@Base" 1.8.0 1
 (c++)"OGRGeometry::Difference(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Distance3D(OGRGeometry const*) const@Base" 2.2.0 1
 (c++)"OGRGeometry::Intersects(OGRGeometry const*) const@Base" 2.0.1 1
 (c++)"OGRGeometry::Polygonize() const@Base" 1.9.0 1
 (c++)"OGRGeometry::exportToGML(char const* const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::exportToKML() const@Base" 1.8.0 1
 (c++)"OGRGeometry::getBoundary() const@Base" 1.8.0 1
 (c++)"OGRGeometry::Intersection(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::dumpReadable(_IO_FILE*, char const*, char**) const@Base" 1.8.0 1
 (c++)"OGRGeometry::exportToGEOS(GEOSContextHandle_HS*) const@Base" 1.11.0 1
 (c++)"OGRGeometry::exportToJson() const@Base" 1.8.0 1
 (c++)"OGRGeometry::SymDifference(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::UnionCascaded() const@Base" 1.8.0 1
 (c++)"OGRGeometry::getCurveGeometry(char const* const*) const@Base" 2.0.1 1
 (c++)"OGRGeometry::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRGeometry::getLinearGeometry(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRGeometry::IsSFCGALCompatible() const@Base" 2.2.0 1
 (c++)"OGRGeometry::getIsoGeometryType() const@Base" 1.11.0 1
 (c++)"OGRGeometry::CoordinateDimension() const@Base" 2.1.0 1
 (c++)"OGRGeometry::SymmetricDifference(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::DelaunayTriangulation(double, int) const@Base" 2.1.0 1
 (c++)"OGRGeometry::PointOnSurfaceInternal(OGRPoint*) const@Base" 2.1.0 1
 (c++)"OGRGeometry::getCoordinateDimension() const@Base" 1.8.0 1
 (c++)"OGRGeometry::SimplifyPreserveTopology(double) const@Base" 1.9.0 1
 (c++)"OGRGeometry::Equal(OGRGeometry*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Union(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Buffer(double, int) const@Base" 1.8.0 1
 (c++)"OGRGeometry::IsRing() const@Base" 1.8.0 1
 (c++)"OGRGeometry::Within(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Crosses(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::IsValid() const@Base" 1.8.0 1
 (c++)"OGRGeometry::Touches(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Boundary() const@Base" 1.8.0 1
 (c++)"OGRGeometry::Centroid(OGRPoint*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Contains(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Disjoint(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Distance(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::IsSimple() const@Base" 1.8.0 1
 (c++)"OGRGeometry::Overlaps(OGRGeometry const*) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Simplify(double) const@Base" 1.8.0 1
 (c++)"OGRGeometry::Intersect(OGRGeometry*) const@Base" 1.8.0 1
 (c++)"OGRTriangle::getGeometryName() const@Base" 2.2.0 1
 (c++)"OGRTriangle::getGeometryType() const@Base" 2.2.0 1
 (c++)"OGRTriangle::GetCasterToPolygon() const@Base" 2.2.0 1
 (c++)"OGRTriangle::quickValidityCheck() const@Base" 2.2.0 1
 (c++)"OGR_SRSNode::exportToWkt(char**) const@Base" 1.8.0 1
 (c++)"OGR_SRSNode::NeedsQuoting() const@Base" 1.8.0 1
 (c++)"OGR_SRSNode::exportToPrettyWkt(char**, int) const@Base" 1.8.0 1
 (c++)"OGR_SRSNode::Clone() const@Base" 1.8.0 1
 (c++)"OGR_SRSNode::GetNode(char const*) const@Base" 1.8.0 1
 (c++)"OGR_SRSNode::GetChild(int) const@Base" 1.8.0 1
 (c++)"OGR_SRSNode::FindChild(char const*) const@Base" 1.8.0 1
 (c++)"GDALOpenInfo::AreSiblingFilesLoaded() const@Base" 2.1.0 1
 (c++)"OGRFieldDefn::GetDefault() const@Base" 2.0.1 1
 (c++)"OGRFieldDefn::IsDefaultDriverSpecific() const@Base" 2.0.1 1
 (c++)"OGRFieldDefn::IsSame(OGRFieldDefn const*) const@Base" 1.10.1 1
 (c++)"CADDictionary::getRecordByName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 2.2.0 1
 (c++)"CPLStringList::FetchBoolean(char const*, int) const@Base" 1.9.0 1
 (c++)"CPLStringList::FetchNameValue(char const*) const@Base" 1.9.0 1
 (c++)"CPLStringList::FetchNameValueDef(char const*, char const*) const@Base" 1.9.0 1
 (c++)"CPLStringList::Count() const@Base" 1.9.0 1
 (c++)"CPLStringList::FindName(char const*) const@Base" 1.9.0 1
 (c++)"CPLStringList::FetchBool(char const*, bool) const@Base" 2.1.0 1
 (c++)"CPLStringList::operator[](int) const@Base" 1.9.0 1
 (c++)"OGRLineString::CurveToLine(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRLineString::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRLineString::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRLineString::getCurveGeometry(char const* const*) const@Base" 2.0.1 1
 (c++)"OGRLineString::GetCasterToLineString() const@Base" 2.0.1 1
 (c++)"OGRLineString::GetCasterToLinearRing() const@Base" 2.0.1 1
 (c++)"OGRLineString::get_AreaOfCurveSegments() const@Base" 2.0.1 1
 (c++)"OGRLineString::get_Area() const@Base" 2.0.1 1
 (c++)"OGRLinearRing::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 1.11.0 1
 (c++)"OGRLinearRing::isClockwise() const@Base" 1.8.0 1
 (c++)"OGRLinearRing::_exportToWkb(OGRwkbByteOrder, int, unsigned char*) const@Base" 1.8.0 1
 (c++)"OGRLinearRing::isPointInRing(OGRPoint const*, int) const@Base" 1.8.0 1
 (c++)"OGRLinearRing::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRLinearRing::GetCasterToLineString() const@Base" 2.0.1 1
 (c++)"OGRLinearRing::GetCasterToLinearRing() const@Base" 2.0.1 1
 (c++)"OGRLinearRing::isPointOnRingBoundary(OGRPoint const*, int) const@Base" 1.8.0 1
 (c++)"OGRLinearRing::clone() const@Base" 1.8.0 1
 (c++)"OGRLinearRing::WkbSize() const@Base" 1.8.0 1
 (c++)"OGRLinearRing::_WkbSize(int) const@Base" 1.8.0 1
 (c++)"OGRMultiCurve::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRMultiCurve::getDimension() const@Base" 2.0.1 1
 (c++)"OGRMultiCurve::getGeometryName() const@Base" 2.0.1 1
 (c++)"OGRMultiCurve::getGeometryType() const@Base" 2.0.1 1
 (c++)"OGRMultiCurve::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRMultiCurve::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.0.1 1
 (c++)"OGRMultiPoint::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRMultiPoint::getDimension() const@Base" 1.10.1 1
 (c++)"OGRMultiPoint::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRMultiPoint::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRMultiPoint::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRMultiPoint::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.0.1 1
 (c++)"GDALColorTable::GetColorEntry(int) const@Base" 1.8.0 1
 (c++)"GDALColorTable::GetColorEntryAsRGB(int, GDALColorEntry*) const@Base" 1.8.0 1
 (c++)"GDALColorTable::GetColorEntryCount() const@Base" 1.8.0 1
 (c++)"GDALColorTable::GetPaletteInterpretation() const@Base" 1.8.0 1
 (c++)"GDALColorTable::Clone() const@Base" 1.8.0 1
 (c++)"GDALColorTable::IsSame(GDALColorTable const*) const@Base" 2.0.1 1
 (c++)"OGRFeatureDefn::IsStyleIgnored() const@Base" 2.2.0 1
 (c++)"OGRSimpleCurve::StartPoint(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getSubLine(double, double, int) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::get_Length() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getEnvelope(OGREnvelope*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getEnvelope(OGREnvelope3D*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getNumPoints() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::get_LinearArea() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getPointIterator() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getM(int) const@Base" 2.1.0 1
 (c++)"OGRSimpleCurve::getZ(int) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::Value(double, OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::clone() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::Equals(OGRGeometry*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::IsEmpty() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::Project(OGRPoint const*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::WkbSize() const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::EndPoint(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getPoint(int, OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getPoints(OGRRawPoint*, double*) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getPoints(void*, int, void*, int, void*, int) const@Base" 2.0.1 1
 (c++)"OGRSimpleCurve::getPoints(void*, int, void*, int, void*, int, void*, int) const@Base" 2.1.0 1
 (c++)"GDALMajorObject::GetMOFlags() const@Base" 2.2.0 1
 (c++)"GDALMajorObject::GetDescription() const@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetProperty(int) const@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetElementName() const@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetPropertyIndex(char const*) const@Base" 1.8.0 1
 (c++)"GMLFeatureClass::GetElementNameLen() const@Base" 1.9.0 1
 (c++)"GMLFeatureClass::GetGeometryProperty(int) const@Base" 1.11.0 1
 (c++)"GMLFeatureClass::GetPropertyIndexBySrcElement(char const*, int) const@Base" 1.9.0 1
 (c++)"GMLFeatureClass::GetGeometryPropertyIndexBySrcElement(char const*) const@Base" 1.11.0 1
 (c++)"OGRCurvePolygon::Intersects(OGRGeometry const*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getEnvelope(OGREnvelope*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getEnvelope(OGREnvelope3D*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getDimension() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::ContainsPoint(OGRPoint const*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::PointOnSurface(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::CurvePolyToPoly(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getGeometryName() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getGeometryType() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getLinearGeometry(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::GetCasterToPolygon() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getNumInteriorRings() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getExteriorRingCurve() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::getInteriorRingCurve(int) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::GetCasterToCurvePolygon() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::clone() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::Equals(OGRGeometry*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::IsEmpty() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::WkbSize() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::Contains(OGRGeometry const*) const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::get_Area() const@Base" 2.0.1 1
 (c++)"OGRCurvePolygon::checkRing(OGRCurve*) const@Base" 2.0.1 1
 (c++)"OGRMultiPolygon::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRMultiPolygon::PointOnSurface(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRMultiPolygon::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRMultiPolygon::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRMultiPolygon::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::getDimension() const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::PointOnSurface(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::getGeometryName() const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::getGeometryType() const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRMultiSurface::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.0.1 1
 (c++)"VRTSimpleSource::NeedMaxValAdjustment() const@Base" 2.1.0 1
 (c++)"OGRCompoundCurve::StartPoint(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::get_Length() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::CurveToLine(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getEnvelope(OGREnvelope*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getEnvelope(OGREnvelope3D*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getNumCurves() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getNumPoints() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getGeometryName() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getGeometryType() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getPointIterator() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getLinearGeometry(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::CurveToLineInternal(double, char const* const*, int) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::GetCasterToLineString() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::GetCasterToLinearRing() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::get_AreaOfCurveSegments() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::Value(double, OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::clone() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::Equals(OGRGeometry*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::IsEmpty() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::WkbSize() const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::EndPoint(OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::getCurve(int) const@Base" 2.0.1 1
 (c++)"OGRCompoundCurve::get_Area() const@Base" 2.0.1 1
 (c++)"GDALDriverManager::GetDriverCount() const@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetVersion() const@Base" 2.2.0 1
 (c++)"GNMGenericNetwork::GetRules() const@Base" 2.2.0 1
 (c++)"OGRCircularString::get_Length() const@Base" 2.0.1 1
 (c++)"OGRCircularString::CurveToLine(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::IsValidFast() const@Base" 2.0.1 1
 (c++)"OGRCircularString::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCircularString::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCircularString::getEnvelope(OGREnvelope*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::getEnvelope(OGREnvelope3D*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::IsFullCircle(double&, double&, double&) const@Base" 2.0.1 1
 (c++)"OGRCircularString::ContainsPoint(OGRPoint const*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::getGeometryName() const@Base" 2.0.1 1
 (c++)"OGRCircularString::getGeometryType() const@Base" 2.0.1 1
 (c++)"OGRCircularString::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRCircularString::getLinearGeometry(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::GetCasterToLineString() const@Base" 2.0.1 1
 (c++)"OGRCircularString::GetCasterToLinearRing() const@Base" 2.0.1 1
 (c++)"OGRCircularString::get_AreaOfCurveSegments() const@Base" 2.0.1 1
 (c++)"OGRCircularString::ExtendEnvelopeWithCircular(OGREnvelope*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::Value(double, OGRPoint*) const@Base" 2.0.1 1
 (c++)"OGRCircularString::IsValid() const@Base" 2.0.1 1
 (c++)"OGRCircularString::get_Area() const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::exportToWkb(OGRGeometry const*, OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::exportToWkt(OGRGeometry const*, char**) const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::getEnvelope(OGREnvelope*) const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::getEnvelope(OGREnvelope3D*) const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::getNumCurves() const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::Equals(OGRCurveCollection*) const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::IsEmpty() const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::WkbSize() const@Base" 2.0.1 1
 (c++)"OGRCurveCollection::getCurve(int) const@Base" 2.0.1 1
 (c++)"OGRMultiLineString::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRMultiLineString::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRMultiLineString::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRMultiLineString::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRMultiLineString::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.0.1 1
 (c++)"OGRSpatialReference::GetTOWGS84(double*, int) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetUTMZone(int*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsCompound() const@Base" 1.9.0 1
 (c++)"OGRSpatialReference::IsVertical() const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::CloneGeogCS() const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAttrNode(char const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetNormInfo() const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetProjParm(char const*, double, int*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsProjected() const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToPCI(char**, char**, double**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToWkt(char**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToXML(char**, char const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::FindProjParm(char const*, OGR_SRSNode const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAttrValue(char const*, int) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetExtension(char const*, char const*, char const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetSemiMajor(int*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetSemiMinor(int*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsGeocentric() const@Base" 1.9.0 1
 (c++)"OGRSpatialReference::IsGeographic() const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsSameGeogCS(OGRSpatialReference const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsSameVertCS(OGRSpatialReference const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToUSGS(long*, long*, double**, long*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToProj4(char**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetLinearUnits(char**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAngularUnits(char**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetNormProjParm(char const*, double, int*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAuthorityCode(char const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAuthorityName(char const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetInvFlattening(int*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetPrimeMeridian(char**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToPanorama(long*, long*, long*, long*, double*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToPrettyWkt(char**, int) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::exportToMICoordSys(char**) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetTargetLinearUnits(char const*, char**) const@Base" 1.9.0 1
 (c++)"OGRSpatialReference::Clone() const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsSame(OGRSpatialReference const*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::GetAxis(char const*, int, OGRAxisOrientation*) const@Base" 1.8.0 1
 (c++)"OGRSpatialReference::IsLocal() const@Base" 1.8.0 1
 (c++)"OGRPolyhedralSurface::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::exportToWkt(char**, OGRwkbVariant) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getEnvelope(OGREnvelope*) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getEnvelope(OGREnvelope3D*) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getDimension() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::PointOnSurface(OGRPoint*) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getGeometryRef(int) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getGeometryName() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getGeometryType() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getNumGeometries() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::hasCurveGeometry(int) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::GetCasterToPolygon() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getSubGeometryName() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::getSubGeometryType() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::exportToWktInternal(char**, OGRwkbVariant, char const*) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::GetCasterToCurvePolygon() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::GetCasterToMultiPolygon() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::clone() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::Equals(OGRGeometry*) const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::IsEmpty() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::WkbSize() const@Base" 2.2.0 1
 (c++)"OGRPolyhedralSurface::get_Area() const@Base" 2.2.0 1
 (c++)"OGRGeometryCollection::get_Length() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 1.11.0 1
 (c++)"OGRGeometryCollection::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::getEnvelope(OGREnvelope*) const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::getEnvelope(OGREnvelope3D*) const@Base" 1.9.0 1
 (c++)"OGRGeometryCollection::getDimension() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::getGeometryRef(int) const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::getCurveGeometry(char const* const*) const@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::getNumGeometries() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::hasCurveGeometry(int) const@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::getLinearGeometry(double, char const* const*) const@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::exportToWktInternal(char**, OGRwkbVariant, char const*) const@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.0.1 1
 (c++)"OGRGeometryCollection::clone() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::Equals(OGRGeometry*) const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::IsEmpty() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::WkbSize() const@Base" 1.8.0 1
 (c++)"OGRGeometryCollection::get_Area() const@Base" 1.8.0 1
 (c++)"OGRTriangulatedSurface::getGeometryName() const@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::getGeometryType() const@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::getSubGeometryName() const@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::getSubGeometryType() const@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::isCompatibleSubType(OGRwkbGeometryType) const@Base" 2.2.0 1
 (c++)"OGRTriangulatedSurface::GetCasterToMultiPolygon() const@Base" 2.2.0 1
 (c++)"GDALRasterAttributeTable::GetRowOfValue(double) const@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::GetRowOfValue(int) const@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::SerializeJSON() const@Base" 2.0.1 1
 (c++)"GDALRasterAttributeTable::GetLinearBinning(double*, double*) const@Base" 1.8.0 1
 (c++)"GDALRasterAttributeTable::Serialize() const@Base" 1.8.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetRowCount() const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetNameOfCol(int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetTypeOfCol(int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetColOfUsage(GDALRATFieldUsage) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetRowOfValue(double) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetRowOfValue(int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetUsageOfCol(int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetValueAsInt(int, int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetColumnCount() const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetLinearBinning(double*, double*) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetValueAsDouble(int, int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::GetValueAsString(int, int) const@Base" 1.11.0 1
 (c++)"GDALDefaultRasterAttributeTable::Clone() const@Base" 1.11.0 1
 (c++)"CADFile::getClasses() const@Base" 2.2.0 1
 (c++)"CADFile::GetLayersCount() const@Base" 2.2.0 1
 (c++)"CADFile::getHeader() const@Base" 2.2.0 1
 (c++)"CADFile::getTables() const@Base" 2.2.0 1
 (c++)"GNMRule::IsAcceptAny() const@Base" 2.2.0 1
 (c++)"GNMRule::GetSourceLayerName() const@Base" 2.2.0 1
 (c++)"GNMRule::GetTargetLayerName() const@Base" 2.2.0 1
 (c++)"GNMRule::GetConnectorLayerName() const@Base" 2.2.0 1
 (c++)"GNMRule::c_str() const@Base" 2.2.0 1
 (c++)"GNMRule::GetType() const@Base" 2.2.0 1
 (c++)"GNMRule::IsValid() const@Base" 2.2.0 1
 (c++)"GNMRule::operator char const*() const@Base" 2.2.0 1
 (c++)"CADLayer::getPlotting() const@Base" 2.2.0 1
 (c++)"CADLayer::getImageCount() const@Base" 2.2.0 1
 (c++)"CADLayer::getLineWeight() const@Base" 2.2.0 1
 (c++)"CADLayer::getGeometryCount() const@Base" 2.2.0 1
 (c++)"CADLayer::getFrozenByDefault() const@Base" 2.2.0 1
 (c++)"CADLayer::getId() const@Base" 2.2.0 1
 (c++)"CADLayer::getOn() const@Base" 2.2.0 1
 (c++)"CADLayer::getName[abi:cxx11]() const@Base" 2.2.0 1
 (c++)"CADLayer::getColor() const@Base" 2.2.0 1
 (c++)"CADLayer::getFrozen() const@Base" 2.2.0 1
 (c++)"CADLayer::getHandle() const@Base" 2.2.0 1
 (c++)"CADLayer::getLocked() const@Base" 2.2.0 1
 (c++)"GNMGraph::GetOutEdges(long long) const@Base" 2.2.0 1
 (c++)"GNMGraph::GetOppositVertex(long long, long long) const@Base" 2.2.0 1
 (c++)"GNMGraph::CheckVertexBlocked(long long) const@Base" 2.2.0 1
 (c++)"OGRCurve::getDimension() const@Base" 2.0.1 1
 (c++)"OGRCurve::get_IsClosed() const@Base" 1.8.0 1
 (c++)"OGRCurve::ContainsPoint(OGRPoint const*) const@Base" 2.0.1 1
 (c++)"OGRCurve::IsConvex() const@Base" 2.0.1 1
 (c++)"OGRLayer::GetRefCount() const@Base" 1.8.0 1
 (c++)"OGRPoint::Intersects(OGRGeometry const*) const@Base" 2.0.1 1
 (c++)"OGRPoint::exportToWkb(OGRwkbByteOrder, unsigned char*, OGRwkbVariant) const@Base" 1.11.0 1
 (c++)"OGRPoint::exportToWkt(char**, OGRwkbVariant) const@Base" 2.0.1 1
 (c++)"OGRPoint::getEnvelope(OGREnvelope*) const@Base" 1.8.0 1
 (c++)"OGRPoint::getEnvelope(OGREnvelope3D*) const@Base" 1.9.0 1
 (c++)"OGRPoint::getDimension() const@Base" 1.8.0 1
 (c++)"OGRPoint::getGeometryName() const@Base" 1.8.0 1
 (c++)"OGRPoint::getGeometryType() const@Base" 1.8.0 1
 (c++)"OGRPoint::clone() const@Base" 1.8.0 1
 (c++)"OGRPoint::Equals(OGRGeometry*) const@Base" 1.8.0 1
 (c++)"OGRPoint::Within(OGRGeometry const*) const@Base" 2.0.1 1
 (c++)"OGRPoint::IsEmpty() const@Base" 1.8.0 1
 (c++)"OGRPoint::WkbSize() const@Base" 1.8.0 1
 (c++)"CADHandle::isNull() const@Base" 2.2.0 1
 (c++)"CADHandle::getAsLong(CADHandle const&) const@Base" 2.2.0 1
 (c++)"CADHandle::getAsLong() const@Base" 2.2.0 1
 (c++)"CADHeader::print() const@Base" 2.2.0 1
 (c++)"CADHeader::getCode(int) const@Base" 2.2.0 1
 (c++)"CADHeader::getSize() const@Base" 2.2.0 1
 (c++)"CADHeader::getValue(short, CADVariant const&) const@Base" 2.2.0 1
 (c++)"CADTables::GetLayerCount() const@Base" 2.2.0 1
 (c++)"CPLString::ifind(char const*, unsigned int) const@Base" 1.8.0 1
 (c++)"CPLString::ifind(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const@Base" 2.0.1 1
 (c++)"std::ctype<char>::do_widen(char) const@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::find(CPLString const&) const@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::find(CPLString const&) const@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::find(CPLString const&) const@Base" 2.2.0 1
 (c++)"std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear()@Base" 2.2.0 1
 (c++)"void std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_assign<std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> > const&)::{lambda(std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> const*)#1}>(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> > const&, std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_assign(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> > const&)::{lambda(std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> const*)#1} const&)@Base" 2.2.0 1
 (c++)"std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > const&, std::integral_constant<bool, true>)@Base" 2.2.2 1
 (c++)"std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned int, unsigned int const&)@Base" 2.2.0 1
 (c++)"std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()@Base" 2.2.0 1
 (c++)"std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()@Base" 2.2.0 1
 (c++)"std::_Deque_base<OGRFeature*, std::allocator<OGRFeature*> >::~_Deque_base()@Base" 1.8.0 1
 (c++)"std::_Deque_base<OGRFeature*, std::allocator<OGRFeature*> >::~_Deque_base()@Base" 1.8.0 1
 (c++)"std::_Deque_base<long long, std::allocator<long long> >::_M_initialize_map(unsigned int)@Base" 2.2.0 1
 (c++)"std::_Deque_base<long long, std::allocator<long long> >::~_Deque_base()@Base" 2.2.0 1
 (c++)"std::_Deque_base<long long, std::allocator<long long> >::~_Deque_base()@Base" 2.2.0 1
 (c++)"std::_Bvector_base<std::allocator<bool> >::_M_deallocate()@Base" 2.2.0 1
 (c++)"std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 2.2.0 1
 (c++)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 2.2.0 1
 (c++)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()@Base" 2.2.0 1
 (c++)"std::pair<CPLString, CPLString>* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::pair<CPLString, CPLString>*>(__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, __gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::pair<CPLString, CPLString>*)@Base" 2.2.0 1
 (c++)"std::map<CPLString, OGREnvelope, std::less<CPLString>, std::allocator<std::pair<CPLString const, OGREnvelope> > >::operator[](CPLString const&)@Base" 2.1.0 1
 (c++)"std::map<CPLString, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int), std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> > >::~map()@Base" 1.9.0 1
 (c++)"std::map<CPLString, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int), std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> > >::~map()@Base" 1.9.0 1
 (c++)"std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::~map()@Base" 2.2.0 1
 (c++)"std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::~map()@Base" 2.2.0 1
 (c++)"std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::operator[](CPLString&&)@Base" 2.2.0 1
 (c++)"std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::operator[](CPLString const&)@Base" 1.8.0 1
 (c++)"std::map<CPLString, std::vector<CPLString, std::allocator<CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::operator[](CPLString const&)@Base" 1.9.0 1
 (c++)"std::map<CPLString, bool, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::operator[](CPLString const&)@Base" 2.2.0 1
 (c++)"std::map<CPLString, int, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::operator[](CPLString const&)@Base" 2.2.0 1
 (c++)"std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 2.2.2 1
 (c++)"std::map<OGRLayer*, OGRLayer*, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, OGRLayer*> > >::operator[](OGRLayer* const&)@Base" 2.2.2 1
 (c++)"std::map<OGRLayer*, int, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::operator[](OGRLayer*&&)@Base" 2.2.0 1
 (c++)"std::map<std::pair<CPLString, CPLString>, char*, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<std::pair<CPLString, CPLString> const, char*> > >::operator[](std::pair<CPLString, CPLString> const&)@Base" 2.0.1 1
 (c++)"std::map<char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<char>, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::map(std::initializer_list<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char> const&, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)@Base" 2.2.0 1
 (c++)"std::map<char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<char>, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::map(std::initializer_list<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char> const&, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)@Base" 2.2.0 1
 (c++)"std::map<char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<char>, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~map()@Base" 2.2.0 1
 (c++)"std::map<char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<char>, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~map()@Base" 2.2.0 1
 (c++)"std::map<int, CPLString, std::less<int>, std::allocator<std::pair<int const, CPLString> > >::operator[](int const&)@Base" 2.2.2 1
 (c++)"std::map<int, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> >, std::less<int>, std::allocator<std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > > >::operator[](int const&)@Base" 2.1.0 1
 (c++)"std::map<int, int, std::less<int>, std::allocator<std::pair<int const, int> > >::operator[](int const&)@Base" 2.1.0 1
 (c++)"std::pair<CPLString, CPLString>::pair<CPLString&, CPLString&, true>(CPLString&, CPLString&)@Base" 2.1.1 1
 (c++)"std::pair<CPLString, CPLString>::pair<CPLString&, CPLString&, true>(CPLString&, CPLString&)@Base" 2.1.1 1
 (c++)"std::pair<CPLString, CPLString>::~pair()@Base" 1.9.0 1
 (c++)"std::pair<CPLString, CPLString>::~pair()@Base" 1.9.0 1
 (c++)"std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >::~pair()@Base" 2.0.1 1
 (c++)"std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >::~pair()@Base" 2.0.1 1
 (c++)"void std::deque<OGRFeature*, std::allocator<OGRFeature*> >::_M_push_back_aux<OGRFeature* const&>(OGRFeature* const&)@Base" 2.1.1 1
 (c++)"void std::deque<long long, std::allocator<long long> >::_M_push_back_aux<long long const&>(long long const&)@Base" 2.2.0 1
 (c++)"std::vector<OGRFieldType, std::allocator<OGRFieldType> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<GDALColorInterp, std::allocator<GDALColorInterp> >::_M_realloc_insert<GDALColorInterp const&>(__gnu_cxx::__normal_iterator<GDALColorInterp*, std::vector<GDALColorInterp, std::allocator<GDALColorInterp> > >, GDALColorInterp const&)@Base" 2.2.2 1
 (c++)"void std::vector<CADClass, std::allocator<CADClass> >::_M_realloc_insert<CADClass const&>(__gnu_cxx::__normal_iterator<CADClass*, std::vector<CADClass, std::allocator<CADClass> > >, CADClass const&)@Base" 2.2.2 1
 (c++)"void std::vector<CADLayer, std::allocator<CADLayer> >::_M_realloc_insert<CADLayer const&>(__gnu_cxx::__normal_iterator<CADLayer*, std::vector<CADLayer, std::allocator<CADLayer> > >, CADLayer const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRPoint, std::allocator<OGRPoint> >::_M_range_insert<__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > > >(__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > >, __gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > >, __gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > >, std::forward_iterator_tag)@Base" 1.8.0 1
 (c++)"void std::vector<OGRPoint, std::allocator<OGRPoint> >::_M_range_insert<std::reverse_iterator<__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > > > >(__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > >, std::reverse_iterator<__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > > >, std::reverse_iterator<__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > > >, std::forward_iterator_tag)@Base" 1.8.0 1
 (c++)"void std::vector<OGRPoint, std::allocator<OGRPoint> >::_M_realloc_insert<OGRPoint const&>(__gnu_cxx::__normal_iterator<OGRPoint*, std::vector<OGRPoint, std::allocator<OGRPoint> > >, OGRPoint const&)@Base" 2.2.2 1
 (c++)"void std::vector<CADHandle, std::allocator<CADHandle> >::emplace_back<CADHandle>(CADHandle&&)@Base" 2.2.0 1
 (c++)"void std::vector<CADHandle, std::allocator<CADHandle> >::_M_realloc_insert<CADHandle>(__gnu_cxx::__normal_iterator<CADHandle*, std::vector<CADHandle, std::allocator<CADHandle> > >, CADHandle&&)@Base" 2.2.2 1
 (c++)"std::vector<CADHandle, std::allocator<CADHandle> >::~vector()@Base" 2.2.0 1
 (c++)"std::vector<CADHandle, std::allocator<CADHandle> >::~vector()@Base" 2.2.0 1
 (c++)"void std::vector<CPLString, std::allocator<CPLString> >::emplace_back<CPLString>(CPLString&&)@Base" 2.1.1 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CPLString const*, std::vector<CPLString, std::allocator<CPLString> > >, CPLString&&)@Base" 2.2.2 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<CPLString, std::allocator<CPLString> >::_M_realloc_insert<CPLString const&>(__gnu_cxx::__normal_iterator<CPLString*, std::vector<CPLString, std::allocator<CPLString> > >, CPLString const&)@Base" 2.2.2 1
 (c++)"void std::vector<CPLString, std::allocator<CPLString> >::_M_realloc_insert<CPLString>(__gnu_cxx::__normal_iterator<CPLString*, std::vector<CPLString, std::allocator<CPLString> > >, CPLString&&)@Base" 2.2.2 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::reserve(unsigned int)@Base" 2.2.0 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::push_back(CPLString const&)@Base" 2.2.2 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::vector(std::vector<CPLString, std::allocator<CPLString> > const&)@Base" 1.10.1 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::vector(std::vector<CPLString, std::allocator<CPLString> > const&)@Base" 1.10.1 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::~vector()@Base" 1.8.0 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::~vector()@Base" 1.8.0 1
 (c++)"std::vector<CPLString, std::allocator<CPLString> >::operator=(std::vector<CPLString, std::allocator<CPLString> > const&)@Base" 1.8.0 1
 (c++)"void std::vector<VRTWarpedDataset::VerticalShiftGrid, std::allocator<VRTWarpedDataset::VerticalShiftGrid> >::_M_realloc_insert<VRTWarpedDataset::VerticalShiftGrid const&>(__gnu_cxx::__normal_iterator<VRTWarpedDataset::VerticalShiftGrid*, std::vector<VRTWarpedDataset::VerticalShiftGrid, std::allocator<VRTWarpedDataset::VerticalShiftGrid> > >, VRTWarpedDataset::VerticalShiftGrid const&)@Base" 2.2.2 1
 (c++)"void std::vector<PCIDSK::ShapeFieldType, std::allocator<PCIDSK::ShapeFieldType> >::_M_realloc_insert<PCIDSK::ShapeFieldType const&>(__gnu_cxx::__normal_iterator<PCIDSK::ShapeFieldType*, std::vector<PCIDSK::ShapeFieldType, std::allocator<PCIDSK::ShapeFieldType> > >, PCIDSK::ShapeFieldType const&)@Base" 2.2.2 1
 (c++)"void std::vector<PCIDSK::ShapeFieldType, std::allocator<PCIDSK::ShapeFieldType> >::_M_realloc_insert<PCIDSK::ShapeFieldType>(__gnu_cxx::__normal_iterator<PCIDSK::ShapeFieldType*, std::vector<PCIDSK::ShapeFieldType, std::allocator<PCIDSK::ShapeFieldType> > >, PCIDSK::ShapeFieldType&&)@Base" 2.2.2 1
 (c++)"std::vector<PCIDSK::eChanType, std::allocator<PCIDSK::eChanType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<PCIDSK::eChanType*, std::vector<PCIDSK::eChanType, std::allocator<PCIDSK::eChanType> > >, unsigned int, PCIDSK::eChanType const&)@Base" 1.8.0 1
 (c++)"void std::vector<CADObject::ObjectType, std::allocator<CADObject::ObjectType> >::_M_realloc_insert<CADObject::ObjectType const&>(__gnu_cxx::__normal_iterator<CADObject::ObjectType*, std::vector<CADObject::ObjectType, std::allocator<CADObject::ObjectType> > >, CADObject::ObjectType const&)@Base" 2.2.2 1
 (c++)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 2.1.1 1
 (c++)"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.2 1
 (c++)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)@Base" 2.2.2 1
 (c++)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 2.2.2 1
 (c++)"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()@Base" 2.0.1 1
 (c++)"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()@Base" 2.0.1 1
 (c++)"std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)@Base" 2.0.1 1
 (c++)"void std::vector<GDALJP2Box*, std::allocator<GDALJP2Box*> >::emplace_back<GDALJP2Box*>(GDALJP2Box*&&)@Base" 2.1.1 1
 (c++)"void std::vector<GDALJP2Box*, std::allocator<GDALJP2Box*> >::_M_realloc_insert<GDALJP2Box*>(__gnu_cxx::__normal_iterator<GDALJP2Box**, std::vector<GDALJP2Box*, std::allocator<GDALJP2Box*> > >, GDALJP2Box*&&)@Base" 2.2.2 1
 (c++)"std::vector<OGRFeature*, std::allocator<OGRFeature*> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<OGRFeature*, std::allocator<OGRFeature*> >::_M_realloc_insert<OGRFeature* const&>(__gnu_cxx::__normal_iterator<OGRFeature**, std::vector<OGRFeature*, std::allocator<OGRFeature*> > >, OGRFeature* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRFeature*, std::allocator<OGRFeature*> >::_M_realloc_insert<OGRFeature*>(__gnu_cxx::__normal_iterator<OGRFeature**, std::vector<OGRFeature*, std::allocator<OGRFeature*> > >, OGRFeature*&&)@Base" 2.2.2 1
 (c++)"std::vector<OGRFeature*, std::allocator<OGRFeature*> >::operator=(std::vector<OGRFeature*, std::allocator<OGRFeature*> > const&)@Base" 1.8.0 1
 (c++)"void std::vector<GDALDataset*, std::allocator<GDALDataset*> >::emplace_back<GDALDataset*>(GDALDataset*&&)@Base" 2.1.1 1
 (c++)"std::vector<GDALDataset*, std::allocator<GDALDataset*> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<GDALDataset*, std::allocator<GDALDataset*> >::_M_realloc_insert<GDALDataset* const&>(__gnu_cxx::__normal_iterator<GDALDataset**, std::vector<GDALDataset*, std::allocator<GDALDataset*> > >, GDALDataset* const&)@Base" 2.2.2 1
 (c++)"void std::vector<GDALDataset*, std::allocator<GDALDataset*> >::_M_realloc_insert<GDALDataset*>(__gnu_cxx::__normal_iterator<GDALDataset**, std::vector<GDALDataset*, std::allocator<GDALDataset*> > >, GDALDataset*&&)@Base" 2.2.2 1
 (c++)"std::vector<GDALDataset*, std::allocator<GDALDataset*> >::operator=(std::vector<GDALDataset*, std::allocator<GDALDataset*> > const&)@Base" 2.1.0 1
 (c++)"void std::vector<OGRGeometry*, std::allocator<OGRGeometry*> >::_M_realloc_insert<OGRGeometry* const&>(__gnu_cxx::__normal_iterator<OGRGeometry**, std::vector<OGRGeometry*, std::allocator<OGRGeometry*> > >, OGRGeometry* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRGeometry*, std::allocator<OGRGeometry*> >::_M_realloc_insert<OGRGeometry*>(__gnu_cxx::__normal_iterator<OGRGeometry**, std::vector<OGRGeometry*, std::allocator<OGRGeometry*> > >, OGRGeometry*&&)@Base" 2.2.2 1
 (c++)"std::vector<S57AttrInfo*, std::allocator<S57AttrInfo*> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<OGRFieldDefn*, std::allocator<OGRFieldDefn*> >::emplace_back<OGRFieldDefn*>(OGRFieldDefn*&&)@Base" 2.1.2 1
 (c++)"void std::vector<OGRFieldDefn*, std::allocator<OGRFieldDefn*> >::_M_realloc_insert<OGRFieldDefn* const&>(__gnu_cxx::__normal_iterator<OGRFieldDefn**, std::vector<OGRFieldDefn*, std::allocator<OGRFieldDefn*> > >, OGRFieldDefn* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRDataSource*, std::allocator<OGRDataSource*> >::_M_realloc_insert<OGRDataSource* const&>(__gnu_cxx::__normal_iterator<OGRDataSource**, std::vector<OGRDataSource*, std::allocator<OGRDataSource*> > >, OGRDataSource* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRLinearRing*, std::allocator<OGRLinearRing*> >::_M_realloc_insert<OGRLinearRing* const&>(__gnu_cxx::__normal_iterator<OGRLinearRing**, std::vector<OGRLinearRing*, std::allocator<OGRLinearRing*> > >, OGRLinearRing* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRLinearRing*, std::allocator<OGRLinearRing*> >::_M_realloc_insert<OGRLinearRing*>(__gnu_cxx::__normal_iterator<OGRLinearRing**, std::vector<OGRLinearRing*, std::allocator<OGRLinearRing*> > >, OGRLinearRing*&&)@Base" 2.2.2 1
 (c++)"void std::vector<GDALRasterBand*, std::allocator<GDALRasterBand*> >::emplace_back<GDALRasterBand*>(GDALRasterBand*&&)@Base" 2.1.1 1
 (c++)"std::vector<GDALRasterBand*, std::allocator<GDALRasterBand*> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<GDALRasterBand*, std::allocator<GDALRasterBand*> >::_M_realloc_insert<GDALRasterBand* const&>(__gnu_cxx::__normal_iterator<GDALRasterBand**, std::vector<GDALRasterBand*, std::allocator<GDALRasterBand*> > >, GDALRasterBand* const&)@Base" 2.2.2 1
 (c++)"void std::vector<GDALRasterBand*, std::allocator<GDALRasterBand*> >::_M_realloc_insert<GDALRasterBand*>(__gnu_cxx::__normal_iterator<GDALRasterBand**, std::vector<GDALRasterBand*, std::allocator<GDALRasterBand*> > >, GDALRasterBand*&&)@Base" 2.2.2 1
 (c++)"void std::vector<GDALRasterBlock*, std::allocator<GDALRasterBlock*> >::_M_realloc_insert<GDALRasterBlock* const&>(__gnu_cxx::__normal_iterator<GDALRasterBlock**, std::vector<GDALRasterBlock*, std::allocator<GDALRasterBlock*> > >, GDALRasterBlock* const&)@Base" 2.2.2 1
 (c++)"void std::vector<GMLFeatureClass*, std::allocator<GMLFeatureClass*> >::_M_realloc_insert<GMLFeatureClass* const&>(__gnu_cxx::__normal_iterator<GMLFeatureClass**, std::vector<GMLFeatureClass*, std::allocator<GMLFeatureClass*> > >, GMLFeatureClass* const&)@Base" 2.2.2 1
 (c++)"std::vector<GMLFeatureClass*, std::allocator<GMLFeatureClass*> >::resize(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> >::_M_realloc_insert<GMLPropertyDefn* const&>(__gnu_cxx::__normal_iterator<GMLPropertyDefn**, std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> > >, GMLPropertyDefn* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRSpatialReference*, std::allocator<OGRSpatialReference*> >::_M_realloc_insert<OGRSpatialReference*>(__gnu_cxx::__normal_iterator<OGRSpatialReference**, std::vector<OGRSpatialReference*, std::allocator<OGRSpatialReference*> > >, OGRSpatialReference*&&)@Base" 2.2.2 1
 (c++)"void std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> >::_M_realloc_insert<GMLGeometryPropertyDefn* const&>(__gnu_cxx::__normal_iterator<GMLGeometryPropertyDefn**, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >, GMLGeometryPropertyDefn* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRCoordinateTransformation*, std::allocator<OGRCoordinateTransformation*> >::_M_realloc_insert<OGRCoordinateTransformation* const&>(__gnu_cxx::__normal_iterator<OGRCoordinateTransformation**, std::vector<OGRCoordinateTransformation*, std::allocator<OGRCoordinateTransformation*> > >, OGRCoordinateTransformation* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRCurve*, std::allocator<OGRCurve*> >::_M_realloc_insert<OGRCurve* const&>(__gnu_cxx::__normal_iterator<OGRCurve**, std::vector<OGRCurve*, std::allocator<OGRCurve*> > >, OGRCurve* const&)@Base" 2.2.2 1
 (c++)"std::vector<OGRCurve*, std::allocator<OGRCurve*> >::_M_erase(__gnu_cxx::__normal_iterator<OGRCurve**, std::vector<OGRCurve*, std::allocator<OGRCurve*> > >)@Base" 2.1.3 1
 (c++)"void std::vector<OGRLayer*, std::allocator<OGRLayer*> >::emplace_back<OGRLayer*>(OGRLayer*&&)@Base" 2.1.1 1
 (c++)"void std::vector<OGRLayer*, std::allocator<OGRLayer*> >::_M_realloc_insert<OGRLayer* const&>(__gnu_cxx::__normal_iterator<OGRLayer**, std::vector<OGRLayer*, std::allocator<OGRLayer*> > >, OGRLayer* const&)@Base" 2.2.2 1
 (c++)"void std::vector<OGRLayer*, std::allocator<OGRLayer*> >::_M_realloc_insert<OGRLayer*>(__gnu_cxx::__normal_iterator<OGRLayer**, std::vector<OGRLayer*, std::allocator<OGRLayer*> > >, OGRLayer*&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const*, std::allocator<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const*> >::_M_realloc_insert<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const*>(__gnu_cxx::__normal_iterator<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const**, std::vector<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const*, std::allocator<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const*> > >, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const*&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::vector<OGRPoint, std::allocator<OGRPoint> >*, std::allocator<std::vector<OGRPoint, std::allocator<OGRPoint> >*> >::_M_realloc_insert<std::vector<OGRPoint, std::allocator<OGRPoint> >*>(__gnu_cxx::__normal_iterator<std::vector<OGRPoint, std::allocator<OGRPoint> >**, std::vector<std::vector<OGRPoint, std::allocator<OGRPoint> >*, std::allocator<std::vector<OGRPoint, std::allocator<OGRPoint> >*> > >, std::vector<OGRPoint, std::allocator<OGRPoint> >*&&)@Base" 2.2.2 1
 (c++)"void std::vector<char*, std::allocator<char*> >::emplace_back<char*>(char*&&)@Base" 2.1.1 1
 (c++)"void std::vector<char*, std::allocator<char*> >::_M_realloc_insert<char* const&>(__gnu_cxx::__normal_iterator<char**, std::vector<char*, std::allocator<char*> > >, char* const&)@Base" 2.2.2 1
 (c++)"void std::vector<char*, std::allocator<char*> >::_M_realloc_insert<char*>(__gnu_cxx::__normal_iterator<char**, std::vector<char*, std::allocator<char*> > >, char*&&)@Base" 2.2.2 1
 (c++)"void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)@Base" 2.1.1 1
 (c++)"void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char*&&)@Base" 2.2.2 1
 (c++)"std::vector<void*, std::allocator<void*> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void* const&>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void* const&)@Base" 2.2.2 1
 (c++)"void std::vector<void*, std::allocator<void*> >::_M_realloc_insert<void*>(__gnu_cxx::__normal_iterator<void**, std::vector<void*, std::allocator<void*> > >, void*&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::vector<CPLString, std::allocator<CPLString> >, std::allocator<std::vector<CPLString, std::allocator<CPLString> > > >::_M_realloc_insert<std::vector<CPLString, std::allocator<CPLString> > const&>(__gnu_cxx::__normal_iterator<std::vector<CPLString, std::allocator<CPLString> >*, std::vector<std::vector<CPLString, std::allocator<CPLString> >, std::allocator<std::vector<CPLString, std::allocator<CPLString> > > > >, std::vector<CPLString, std::allocator<CPLString> > const&)@Base" 2.2.2 1
 (c++)"std::vector<std::vector<CPLString, std::allocator<CPLString> >, std::allocator<std::vector<CPLString, std::allocator<CPLString> > > >::~vector()@Base" 2.1.0 1
 (c++)"std::vector<std::vector<CPLString, std::allocator<CPLString> >, std::allocator<std::vector<CPLString, std::allocator<CPLString> > > >::~vector()@Base" 2.1.0 1
 (c++)"std::vector<std::vector<CPLString, std::allocator<CPLString> >, std::allocator<std::vector<CPLString, std::allocator<CPLString> > > >::operator=(std::vector<std::vector<CPLString, std::allocator<CPLString> >, std::allocator<std::vector<CPLString, std::allocator<CPLString> > > > const&)@Base" 2.2.0 1
 (c++)"std::vector<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> >, std::allocator<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> > > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> >, std::allocator<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> > > >::_M_realloc_insert<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> > >(__gnu_cxx::__normal_iterator<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> >*, std::vector<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> >, std::allocator<std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> > > > >, std::vector<GMLPropertyDefn*, std::allocator<GMLPropertyDefn*> >&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >, std::allocator<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > >::_M_realloc_insert<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const&>(__gnu_cxx::__normal_iterator<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >*, std::vector<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >, std::allocator<std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > > >, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const&)@Base" 2.2.2 1
 (c++)"void std::vector<std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >, std::allocator<std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > >::_M_realloc_insert<std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > const&>(__gnu_cxx::__normal_iterator<std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >*, std::vector<std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >, std::allocator<std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > > >, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > const&)@Base" 2.2.2 1
 (c++)"std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_realloc_insert<std::vector<int, std::allocator<int> > const&>(__gnu_cxx::__normal_iterator<std::vector<int, std::allocator<int> >*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > >, std::vector<int, std::allocator<int> > const&)@Base" 2.2.2 1
 (c++)"std::vector<std::vector<unsigned long long, std::allocator<unsigned long long> >, std::allocator<std::vector<unsigned long long, std::allocator<unsigned long long> > > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::emplace_back<std::pair<CPLString, CPLString> >(std::pair<CPLString, CPLString>&&)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > >(__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString>*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, __gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, __gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::forward_iterator_tag)@Base" 2.2.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::_M_realloc_insert<std::pair<CPLString, CPLString> >(__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString>*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::pair<CPLString, CPLString>&&)@Base" 2.2.2 1
 (c++)"__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString>*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::insert<__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, void>(__gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, __gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, __gnu_cxx::__normal_iterator<std::pair<CPLString, CPLString> const*, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >)@Base" 2.2.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::resize(unsigned int)@Base" 2.2.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::vector(std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > const&)@Base" 2.2.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::vector(std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > const&)@Base" 2.2.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::~vector()@Base" 1.9.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::~vector()@Base" 1.9.0 1
 (c++)"std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > >::operator=(std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > const&)@Base" 1.9.0 1
 (c++)"void std::vector<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >, std::allocator<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > > > >::emplace_back<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > > >(std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >&&)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >, std::allocator<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > > > >::_M_realloc_insert<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > > >(__gnu_cxx::__normal_iterator<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >*, std::vector<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >, std::allocator<std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > > > > >, std::pair<CPLString, std::vector<GMLGeometryPropertyDefn*, std::allocator<GMLGeometryPropertyDefn*> > >&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > >, std::allocator<std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > > > >::_M_realloc_insert<std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > > >(__gnu_cxx::__normal_iterator<std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > >*, std::vector<std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > >, std::allocator<std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > > > > >, std::pair<CPLString, std::vector<CPLString, std::allocator<CPLString> > >&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::pair<CPLString, int>, std::allocator<std::pair<CPLString, int> > >::emplace_back<std::pair<CPLString, int> >(std::pair<CPLString, int>&&)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<CPLString, int>, std::allocator<std::pair<CPLString, int> > >::_M_realloc_insert<std::pair<CPLString, int> >(__gnu_cxx::__normal_iterator<std::pair<CPLString, int>*, std::vector<std::pair<CPLString, int>, std::allocator<std::pair<CPLString, int> > > >, std::pair<CPLString, int>&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> > >::emplace_back<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>&&)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> > >::_M_realloc_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double>&&)@Base" 2.2.2 1
 (c++)"void std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > >::_M_realloc_insert<std::pair<std::pair<int, int>, bool> >(__gnu_cxx::__normal_iterator<std::pair<std::pair<int, int>, bool>*, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > >, std::pair<std::pair<int, int>, bool>&&)@Base" 2.2.2 1
 (c++)"std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >::_M_realloc_insert<std::pair<double, double> const&>(__gnu_cxx::__normal_iterator<std::pair<double, double>*, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > >, std::pair<double, double> const&)@Base" 2.2.2 1
 (c++)"void std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >::_M_realloc_insert<std::pair<double, double> >(__gnu_cxx::__normal_iterator<std::pair<double, double>*, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > >, std::pair<double, double>&&)@Base" 2.2.2 1
 (c++)"std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >::reserve(unsigned int)@Base" 2.2.0 1
 (c++)"std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > >::operator=(std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > const&)@Base" 1.9.0 1
 (c++)"void std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_M_realloc_insert<std::pair<int, int> >(__gnu_cxx::__normal_iterator<std::pair<int, int>*, std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > >, std::pair<int, int>&&)@Base" 2.2.2 1
 (c++)"std::vector<std::pair<long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > > >, std::allocator<std::pair<long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > > > > >::~vector()@Base" 2.2.0 1
 (c++)"std::vector<std::pair<long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > > >, std::allocator<std::pair<long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > > > > >::~vector()@Base" 2.2.0 1
 (c++)"void std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::emplace_back<std::pair<long, long> >(std::pair<long, long>&&)@Base" 2.2.0 1
 (c++)"void std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > >::_M_realloc_insert<std::pair<long, long> >(__gnu_cxx::__normal_iterator<std::pair<long, long>*, std::vector<std::pair<long, long>, std::allocator<std::pair<long, long> > > >, std::pair<long, long>&&)@Base" 2.2.2 1
 (c++)"std::vector<std::pair<short, unsigned int>, std::allocator<std::pair<short, unsigned int> > >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"std::vector<std::pair<short, unsigned int>, std::allocator<std::pair<short, unsigned int> > >::resize(unsigned int)@Base" 2.1.1 1
 (c++)"std::vector<std::pair<short, unsigned int>, std::allocator<std::pair<short, unsigned int> > >::operator=(std::vector<std::pair<short, unsigned int>, std::allocator<std::pair<short, unsigned int> > > const&)@Base" 2.1.0 1
 (c++)"std::vector<std::pair<short, short>, std::allocator<std::pair<short, short> > >::_M_fill_assign(unsigned int, std::pair<short, short> const&)@Base" 2.1.0 1
 (c++)"void std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::emplace_back<std::pair<long long, long long> >(std::pair<long long, long long>&&)@Base" 2.2.0 1
 (c++)"void std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_M_assign_aux<__gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > >(__gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, __gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, std::forward_iterator_tag)@Base" 2.2.0 1
 (c++)"void std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > >(__gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, __gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, __gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, std::forward_iterator_tag)@Base" 2.2.0 1
 (c++)"void std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_M_realloc_insert<std::pair<long long, long long> >(__gnu_cxx::__normal_iterator<std::pair<long long, long long>*, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, std::pair<long long, long long>&&)@Base" 2.2.2 1
 (c++)"std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool)@Base" 2.1.0 1
 (c++)"std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned int, bool)@Base" 1.9.0 1
 (c++)"void std::vector<char, std::allocator<char> >::emplace_back<char>(char&&)@Base" 2.2.0 1
 (c++)"std::vector<char, std::allocator<char> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"std::vector<char, std::allocator<char> >::vector(std::initializer_list<char>, std::allocator<char> const&)@Base" 2.2.0 1
 (c++)"std::vector<char, std::allocator<char> >::vector(std::initializer_list<char>, std::allocator<char> const&)@Base" 2.2.0 1
 (c++)"std::vector<char, std::allocator<char> >::~vector()@Base" 2.2.0 1
 (c++)"std::vector<char, std::allocator<char> >::~vector()@Base" 2.2.0 1
 (c++)"void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)@Base" 2.1.1 1
 (c++)"std::vector<double, std::allocator<double> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<double, std::allocator<double> >::_M_realloc_insert<double const&>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const&)@Base" 2.2.2 1
 (c++)"void std::vector<double, std::allocator<double> >::_M_realloc_insert<double>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double&&)@Base" 2.2.2 1
 (c++)"std::vector<double, std::allocator<double> >::reserve(unsigned int)@Base" 1.8.0 1
 (c++)"std::vector<double, std::allocator<double> >::push_back(double const&)@Base" 2.2.2 1
 (c++)"std::vector<double, std::allocator<double> >::operator=(std::vector<double, std::allocator<double> > const&)@Base" 1.8.0 1
 (c++)"void std::vector<unsigned char, std::allocator<unsigned char> >::emplace_back<unsigned char>(unsigned char&&)@Base" 2.2.0 1
 (c++)"std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<unsigned char, std::allocator<unsigned char> >::_M_realloc_insert<unsigned char const&>(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char const&)@Base" 2.2.2 1
 (c++)"void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)@Base" 2.1.1 1
 (c++)"std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned int, int const&)@Base" 1.8.0 1
 (c++)"std::vector<int, std::allocator<int> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<int, std::allocator<int> >::_M_realloc_insert<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)@Base" 2.2.2 1
 (c++)"void std::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int&&)@Base" 2.2.2 1
 (c++)"std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)@Base" 1.8.0 1
 (c++)"void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&)@Base" 2.1.1 1
 (c++)"std::vector<unsigned int, std::allocator<unsigned int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int, unsigned int const&)@Base" 1.8.0 1
 (c++)"std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned int)@Base" 2.1.1 1
 (c++)"void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)@Base" 2.2.2 1
 (c++)"void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&)@Base" 2.2.2 1
 (c++)"std::vector<unsigned int, std::allocator<unsigned int> >::insert(__gnu_cxx::__normal_iterator<unsigned int const*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)@Base" 2.1.1 1
 (c++)"std::vector<unsigned int, std::allocator<unsigned int> >::operator=(std::vector<unsigned int, std::allocator<unsigned int> > const&)@Base" 1.9.0 1
 (c++)"void std::vector<long, std::allocator<long> >::_M_realloc_insert<long const&>(__gnu_cxx::__normal_iterator<long*, std::vector<long, std::allocator<long> > >, long const&)@Base" 2.2.2 1
 (c++)"std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)@Base" 1.8.0 1
 (c++)"void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&)@Base" 2.2.2 1
 (c++)"void std::vector<long long, std::allocator<long long> >::emplace_back<long long>(long long&&)@Base" 2.1.1 1
 (c++)"void std::vector<long long, std::allocator<long long> >::_M_realloc_insert<long long const&>(__gnu_cxx::__normal_iterator<long long*, std::vector<long long, std::allocator<long long> > >, long long const&)@Base" 2.2.2 1
 (c++)"void std::vector<long long, std::allocator<long long> >::_M_realloc_insert<long long>(__gnu_cxx::__normal_iterator<long long*, std::vector<long long, std::allocator<long long> > >, long long&&)@Base" 2.2.2 1
 (c++)"std::vector<long long, std::allocator<long long> >::operator=(std::vector<long long, std::allocator<long long> > const&)@Base" 2.2.0 1
 (c++)"void std::vector<unsigned long long, std::allocator<unsigned long long> >::emplace_back<unsigned long long>(unsigned long long&&)@Base" 2.1.1 1
 (c++)"void std::vector<unsigned long long, std::allocator<unsigned long long> >::_M_realloc_insert<unsigned long long const&>(__gnu_cxx::__normal_iterator<unsigned long long*, std::vector<unsigned long long, std::allocator<unsigned long long> > >, unsigned long long const&)@Base" 2.2.2 1
 (c++)"void std::vector<unsigned long long, std::allocator<unsigned long long> >::_M_realloc_insert<unsigned long long>(__gnu_cxx::__normal_iterator<unsigned long long*, std::vector<unsigned long long, std::allocator<unsigned long long> > >, unsigned long long&&)@Base" 2.2.2 1
 (c++)"std::__cxx11::_List_base<CPLString, std::allocator<CPLString> >::_M_clear()@Base" 2.1.1 1
 (c++)"std::__cxx11::_List_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_clear()@Base" 2.0.1 1
 (c++)"std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()@Base" 2.0.1 1
 (c++)"std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()@Base" 2.0.1 1
 (c++)"std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()@Base" 2.0.1 1
 (c++)"std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::sort()@Base" 2.0.1 1
 (c++)"std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::merge(std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&)@Base" 2.1.1 1
 (c++)"std::__cxx11::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::unique()@Base" 2.0.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<CPLString>, bool> std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_M_insert_unique<CPLString const&>(CPLString const&)@Base" 2.1.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<CPLString>, bool> std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_M_insert_unique<CPLString>(CPLString&&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::find(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::erase(CPLString const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree_node<CPLString>* std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_M_copy<std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_Alloc_node>(std::_Rb_tree_node<CPLString> const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_Alloc_node&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree_node<CPLString>* std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_M_copy<std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_Reuse_or_alloc_node>(std::_Rb_tree_node<CPLString> const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_Reuse_or_alloc_node&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::_M_erase(std::_Rb_tree_node<CPLString>*)@Base" 1.8.0 1
 (c++)"std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> >::operator=(std::_Rb_tree<CPLString, CPLString, std::_Identity<CPLString>, std::less<CPLString>, std::allocator<CPLString> > const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, OGREnvelope>, std::_Select1st<std::pair<CPLString const, OGREnvelope> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, OGREnvelope> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, OGREnvelope>, std::_Select1st<std::pair<CPLString const, OGREnvelope> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, OGREnvelope> > >::find(CPLString const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, OGREnvelope>, std::_Select1st<std::pair<CPLString const, OGREnvelope> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, OGREnvelope> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, OGREnvelope> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDriver*>, std::_Select1st<std::pair<CPLString const, GDALDriver*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDriver*> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDriver*>, std::_Select1st<std::pair<CPLString const, GDALDriver*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDriver*> > >::erase(CPLString const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDriver*>, std::_Select1st<std::pair<CPLString const, GDALDriver*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDriver*> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, GDALDriver*> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDataset*>, std::_Select1st<std::pair<CPLString const, GDALDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDataset*> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<CPLString const, GDALDataset*> >*)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDataset*>, std::_Select1st<std::pair<CPLString const, GDALDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDataset*> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDataset*>, std::_Select1st<std::pair<CPLString const, GDALDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDataset*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CPLString const, GDALDataset*> >, CPLString const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDataset*>, std::_Select1st<std::pair<CPLString const, GDALDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDataset*> > >::find(CPLString const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALDataset*>, std::_Select1st<std::pair<CPLString const, GDALDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALDataset*> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, GDALDataset*> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALProxyPoolDataset*>, std::_Select1st<std::pair<CPLString const, GDALProxyPoolDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALProxyPoolDataset*> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, GDALProxyPoolDataset*>, std::_Select1st<std::pair<CPLString const, GDALProxyPoolDataset*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, GDALProxyPoolDataset*> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, GDALProxyPoolDataset*> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, OGRLayer*>, std::_Select1st<std::pair<CPLString const, OGRLayer*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, OGRLayer*> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, OGRLayer*>, std::_Select1st<std::pair<CPLString const, OGRLayer*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, OGRLayer*> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, OGRLayer*> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)>, std::_Select1st<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)>, std::_Select1st<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, CPLErr (*)(void**, int, void*, int, int, GDALDataType, GDALDataType, int, int)> >*)@Base" 1.9.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, char**>, std::_Select1st<std::pair<CPLString const, char**> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, char**> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, char**>, std::_Select1st<std::pair<CPLString const, char**> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, char**> > >::find(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, char**>, std::_Select1st<std::pair<CPLString const, char**> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, char**> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, char**> >*)@Base" 1.9.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, void*>, std::_Select1st<std::pair<CPLString const, void*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, void*> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, void*>, std::_Select1st<std::pair<CPLString const, void*> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, void*> >*)@Base" 1.8.0 1
 (c++)"std::_Rb_tree_iterator<std::pair<CPLString const, CPLString> > std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_insert_<std::pair<char const*, CPLString>, std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<char const*, CPLString>&&, std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<CPLString const, CPLString> >*)@Base" 2.1.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::pair<CPLString const, CPLString> >, bool> std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_insert_unique<std::pair<char const*, CPLString> >(std::pair<char const*, CPLString>&&)@Base" 2.2.0 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::pair<CPLString const, CPLString> >, bool> std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_insert_unique<std::pair<CPLString, CPLString> >(std::pair<CPLString, CPLString>&&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CPLString const, CPLString> >, CPLString const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::find(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::erase(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<CPLString const, CPLString> >* std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_copy<std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<CPLString const, CPLString> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<CPLString const, CPLString> >* std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_copy<std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<CPLString const, CPLString> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_Reuse_or_alloc_node&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, CPLString> >*)@Base" 1.8.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > >::operator=(std::_Rb_tree<CPLString, std::pair<CPLString const, CPLString>, std::_Select1st<std::pair<CPLString const, CPLString> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::pair<double, double> >, std::_Select1st<std::pair<CPLString const, std::pair<double, double> > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::pair<double, double> > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::pair<double, double> >, std::_Select1st<std::pair<CPLString const, std::pair<double, double> > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::pair<double, double> > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::pair<double, double> > >*)@Base" 1.9.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::pair<int, int> >, std::_Select1st<std::pair<CPLString const, std::pair<int, int> > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::pair<int, int> > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::pair<int, int> >, std::_Select1st<std::pair<CPLString const, std::pair<int, int> > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::pair<int, int> > >*)@Base" 1.9.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >*)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >, CPLString const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::map<CPLString, CPLString, std::less<CPLString>, std::allocator<std::pair<CPLString const, CPLString> > > > >*)@Base" 1.8.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > >, std::_Select1st<std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > >, std::_Select1st<std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::set<int, std::less<int>, std::allocator<int> > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::find(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree_node<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >* std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::_M_copy<std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::vector<CPLString, std::allocator<CPLString> > > >*)@Base" 1.9.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > > >::find(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > >, std::_Select1st<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::vector<std::pair<CPLString, CPLString>, std::allocator<std::pair<CPLString, CPLString> > > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > >, std::_Select1st<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > >, std::_Select1st<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > > >::find(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > >, std::_Select1st<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::vector<std::pair<double, double>, std::allocator<std::pair<double, double> > > > >*)@Base" 1.9.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<CPLString const, std::vector<int, std::allocator<int> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<int, std::allocator<int> > > > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<CPLString const, std::vector<int, std::allocator<int> > > >, std::less<CPLString>, std::allocator<std::pair<CPLString const, std::vector<int, std::allocator<int> > > > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, std::vector<int, std::allocator<int> > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<CPLString const, bool> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CPLString const, bool> >, CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<CPLString const, bool> >* std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_M_copy<std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<CPLString const, bool> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_Reuse_or_alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, bool> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > >::operator=(std::_Rb_tree<CPLString, std::pair<CPLString const, bool>, std::_Select1st<std::pair<CPLString const, bool> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, bool> > > const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<CPLString const, int> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CPLString const, int> >, CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::find(CPLString const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree_node<std::pair<CPLString const, int> >* std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_M_copy<std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<CPLString const, int> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<CPLString const, int> >* std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_M_copy<std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<CPLString const, int> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_Reuse_or_alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, int> >*)@Base" 1.8.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > >::operator=(std::_Rb_tree<CPLString, std::pair<CPLString const, int>, std::_Select1st<std::pair<CPLString const, int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, int> > > const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, unsigned int>, std::_Select1st<std::pair<CPLString const, unsigned int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, unsigned int> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<CPLString const, unsigned int> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, unsigned int>, std::_Select1st<std::pair<CPLString const, unsigned int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, unsigned int> > >::_M_get_insert_unique_pos(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, unsigned int>, std::_Select1st<std::pair<CPLString const, unsigned int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, unsigned int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CPLString const, unsigned int> >, CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, unsigned int>, std::_Select1st<std::pair<CPLString const, unsigned int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, unsigned int> > >::find(CPLString const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CPLString, std::pair<CPLString const, unsigned int>, std::_Select1st<std::pair<CPLString const, unsigned int> >, std::less<CPLString>, std::allocator<std::pair<CPLString const, unsigned int> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString const, unsigned int> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CADTables::TableType, std::pair<CADTables::TableType const, CADHandle>, std::_Select1st<std::pair<CADTables::TableType const, CADHandle> >, std::less<CADTables::TableType>, std::allocator<std::pair<CADTables::TableType const, CADHandle> > >::_M_get_insert_unique_pos(CADTables::TableType const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<CADTables::TableType, std::pair<CADTables::TableType const, CADHandle>, std::_Select1st<std::pair<CADTables::TableType const, CADHandle> >, std::less<CADTables::TableType>, std::allocator<std::pair<CADTables::TableType const, CADHandle> > >::_M_erase(std::_Rb_tree_node<std::pair<CADTables::TableType const, CADHandle> >*)@Base" 2.2.0 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.1.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 2.2.2 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, VSIFilesystemHandler*> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >*)@Base" 2.0.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long>&&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > >::_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRFeature*, std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > >, std::_Select1st<std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > > >, std::less<OGRFeature*>, std::allocator<std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > > > >::_M_get_insert_unique_pos(OGRFeature* const&)@Base" 2.1.3 1
 (c++)"std::_Rb_tree<OGRFeature*, std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > >, std::_Select1st<std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > > >, std::less<OGRFeature*>, std::allocator<std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > > > >::_M_erase(std::_Rb_tree_node<std::pair<OGRFeature* const, std::vector<OGRCurve*, std::allocator<OGRCurve*> > > >*)@Base" 2.1.3 1
 (c++)"std::_Rb_tree<GDALDataset*, std::pair<GDALDataset* const, long long>, std::_Select1st<std::pair<GDALDataset* const, long long> >, std::less<GDALDataset*>, std::allocator<std::pair<GDALDataset* const, long long> > >::_M_get_insert_unique_pos(GDALDataset* const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<GDALDataset*, std::pair<GDALDataset* const, long long>, std::_Select1st<std::pair<GDALDataset* const, long long> >, std::less<GDALDataset*>, std::allocator<std::pair<GDALDataset* const, long long> > >::_M_erase(std::_Rb_tree_node<std::pair<GDALDataset* const, long long> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRMutexedLayer*, std::pair<OGRMutexedLayer* const, OGRLayer*>, std::_Select1st<std::pair<OGRMutexedLayer* const, OGRLayer*> >, std::less<OGRMutexedLayer*>, std::allocator<std::pair<OGRMutexedLayer* const, OGRLayer*> > >::_M_get_insert_unique_pos(OGRMutexedLayer* const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRMutexedLayer*, std::pair<OGRMutexedLayer* const, OGRLayer*>, std::_Select1st<std::pair<OGRMutexedLayer* const, OGRLayer*> >, std::less<OGRMutexedLayer*>, std::allocator<std::pair<OGRMutexedLayer* const, OGRLayer*> > >::erase(OGRMutexedLayer* const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRMutexedLayer*, std::pair<OGRMutexedLayer* const, OGRLayer*>, std::_Select1st<std::pair<OGRMutexedLayer* const, OGRLayer*> >, std::less<OGRMutexedLayer*>, std::allocator<std::pair<OGRMutexedLayer* const, OGRLayer*> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRMutexedLayer* const, OGRLayer*> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRGeomFieldDefn*, OGRGeomFieldDefn*, std::_Identity<OGRGeomFieldDefn*>, std::less<OGRGeomFieldDefn*>, std::allocator<OGRGeomFieldDefn*> >::erase(OGRGeomFieldDefn* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRGeomFieldDefn*, OGRGeomFieldDefn*, std::_Identity<OGRGeomFieldDefn*>, std::less<OGRGeomFieldDefn*>, std::allocator<OGRGeomFieldDefn*> >::_M_erase(std::_Rb_tree_node<OGRGeomFieldDefn*>*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > >::_M_get_insert_unique_pos(OGRGeomFieldDefn* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<OGRGeomFieldDefn* const, CPLString> >* std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > >::_M_copy<std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<OGRGeomFieldDefn* const, CPLString> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > >::_Reuse_or_alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRGeomFieldDefn* const, CPLString> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > >::operator=(std::_Rb_tree<OGRGeomFieldDefn*, std::pair<OGRGeomFieldDefn* const, CPLString>, std::_Select1st<std::pair<OGRGeomFieldDefn* const, CPLString> >, std::less<OGRGeomFieldDefn*>, std::allocator<std::pair<OGRGeomFieldDefn* const, CPLString> > > const&)@Base" 2.2.0 1
 (c++)"std::pair<std::_Rb_tree_iterator<OGRLayer*>, bool> std::_Rb_tree<OGRLayer*, OGRLayer*, std::_Identity<OGRLayer*>, std::less<OGRLayer*>, std::allocator<OGRLayer*> >::_M_insert_unique<OGRLayer* const&>(OGRLayer* const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<OGRLayer*, OGRLayer*, std::_Identity<OGRLayer*>, std::less<OGRLayer*>, std::allocator<OGRLayer*> >::erase(OGRLayer* const&)@Base" 2.2.2 1
 (c++)"std::_Rb_tree<OGRLayer*, OGRLayer*, std::_Identity<OGRLayer*>, std::less<OGRLayer*>, std::allocator<OGRLayer*> >::_M_erase(std::_Rb_tree_node<OGRLayer*>*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, GDALDataset*>, std::_Select1st<std::pair<OGRLayer* const, GDALDataset*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, GDALDataset*> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<OGRLayer* const, GDALDataset*> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, GDALDataset*>, std::_Select1st<std::pair<OGRLayer* const, GDALDataset*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, GDALDataset*> > >::_M_get_insert_unique_pos(OGRLayer* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, GDALDataset*>, std::_Select1st<std::pair<OGRLayer* const, GDALDataset*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, GDALDataset*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<OGRLayer* const, GDALDataset*> >, OGRLayer* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, GDALDataset*>, std::_Select1st<std::pair<OGRLayer* const, GDALDataset*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, GDALDataset*> > >::erase(OGRLayer* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, GDALDataset*>, std::_Select1st<std::pair<OGRLayer* const, GDALDataset*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, GDALDataset*> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRLayer* const, GDALDataset*> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, OGRMutexedLayer*>, std::_Select1st<std::pair<OGRLayer* const, OGRMutexedLayer*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, OGRMutexedLayer*> > >::_M_get_insert_unique_pos(OGRLayer* const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, OGRMutexedLayer*>, std::_Select1st<std::pair<OGRLayer* const, OGRMutexedLayer*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, OGRMutexedLayer*> > >::erase(OGRLayer* const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, OGRMutexedLayer*>, std::_Select1st<std::pair<OGRLayer* const, OGRMutexedLayer*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, OGRMutexedLayer*> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRLayer* const, OGRMutexedLayer*> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, OGRLayer*>, std::_Select1st<std::pair<OGRLayer* const, OGRLayer*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, OGRLayer*> > >::_M_get_insert_unique_pos(OGRLayer* const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, OGRLayer*>, std::_Select1st<std::pair<OGRLayer* const, OGRLayer*> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, OGRLayer*> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRLayer* const, OGRLayer*> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_M_get_insert_unique_pos(OGRLayer* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<OGRLayer* const, int> >* std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_M_copy<std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<OGRLayer* const, int> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<OGRLayer* const, int> >* std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_M_copy<std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<OGRLayer* const, int> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_Reuse_or_alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRLayer* const, int> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > >::operator=(std::_Rb_tree<OGRLayer*, std::pair<OGRLayer* const, int>, std::_Select1st<std::pair<OGRLayer* const, int> >, std::less<OGRLayer*>, std::allocator<std::pair<OGRLayer* const, int> > > const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRSpatialReference const*, std::pair<OGRSpatialReference const* const, bool>, std::_Select1st<std::pair<OGRSpatialReference const* const, bool> >, std::less<OGRSpatialReference const*>, std::allocator<std::pair<OGRSpatialReference const* const, bool> > >::_M_get_insert_unique_pos(OGRSpatialReference const* const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<OGRSpatialReference const*, std::pair<OGRSpatialReference const* const, bool>, std::_Select1st<std::pair<OGRSpatialReference const* const, bool> >, std::less<OGRSpatialReference const*>, std::allocator<std::pair<OGRSpatialReference const* const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<OGRSpatialReference const* const, bool> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<CPLString, CPLString>, std::pair<std::pair<CPLString, CPLString> const, char*>, std::_Select1st<std::pair<std::pair<CPLString, CPLString> const, char*> >, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<std::pair<CPLString, CPLString> const, char*> > >::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<std::pair<CPLString, CPLString> const, char*> >)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<std::pair<CPLString, CPLString>, std::pair<std::pair<CPLString, CPLString> const, char*>, std::_Select1st<std::pair<std::pair<CPLString, CPLString> const, char*> >, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<std::pair<CPLString, CPLString> const, char*> > >::_M_get_insert_unique_pos(std::pair<CPLString, CPLString> const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<std::pair<CPLString, CPLString>, std::pair<std::pair<CPLString, CPLString> const, char*>, std::_Select1st<std::pair<std::pair<CPLString, CPLString> const, char*> >, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<std::pair<CPLString, CPLString> const, char*> > >::find(std::pair<CPLString, CPLString> const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<std::pair<CPLString, CPLString>, std::pair<std::pair<CPLString, CPLString> const, char*>, std::_Select1st<std::pair<std::pair<CPLString, CPLString> const, char*> >, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<std::pair<CPLString, CPLString> const, char*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<CPLString, CPLString> const, char*> >*)@Base" 1.10.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::pair<CPLString, CPLString> >, bool> std::_Rb_tree<std::pair<CPLString, CPLString>, std::pair<CPLString, CPLString>, std::_Identity<std::pair<CPLString, CPLString> >, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<CPLString, CPLString> > >::_M_insert_unique<std::pair<CPLString, CPLString> >(std::pair<CPLString, CPLString>&&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<std::pair<CPLString, CPLString>, std::pair<CPLString, CPLString>, std::_Identity<std::pair<CPLString, CPLString> >, std::less<std::pair<CPLString, CPLString> >, std::allocator<std::pair<CPLString, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<CPLString, CPLString> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > > >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > > > >::_M_get_insert_unique_pos(std::pair<double, double> const&)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > > >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<double, double> const, std::vector<int, std::allocator<int> > > >*)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, int>, std::_Select1st<std::pair<std::pair<double, double> const, int> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, int> > >::_M_get_insert_unique_pos(std::pair<double, double> const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, int>, std::_Select1st<std::pair<std::pair<double, double> const, int> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, int> > >::find(std::pair<double, double> const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<std::pair<double, double>, std::pair<std::pair<double, double> const, int>, std::_Select1st<std::pair<std::pair<double, double> const, int> >, std::less<std::pair<double, double> >, std::allocator<std::pair<std::pair<double, double> const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<double, double> const, int> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, CPLString>, std::_Select1st<std::pair<std::pair<int, int> const, CPLString> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, CPLString> > >::_M_get_insert_unique_pos(std::pair<int, int> const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, CPLString>, std::_Select1st<std::pair<std::pair<int, int> const, CPLString> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<int, int> const, CPLString> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, GDALDataset*>, std::_Select1st<std::pair<std::pair<int, int> const, GDALDataset*> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, GDALDataset*> > >::_M_get_insert_unique_pos(std::pair<int, int> const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, GDALDataset*>, std::_Select1st<std::pair<std::pair<int, int> const, GDALDataset*> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, GDALDataset*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<int, int> const, GDALDataset*> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, OGRCoordinateTransformation*>, std::_Select1st<std::pair<std::pair<int, int> const, OGRCoordinateTransformation*> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, OGRCoordinateTransformation*> > >::_M_get_insert_unique_pos(std::pair<int, int> const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, OGRCoordinateTransformation*>, std::_Select1st<std::pair<std::pair<int, int> const, OGRCoordinateTransformation*> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, OGRCoordinateTransformation*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<int, int> const, OGRCoordinateTransformation*> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > >, std::_Select1st<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > > >::_M_get_insert_unique_pos(std::pair<int, int> const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_node<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >* std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > >, std::_Select1st<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > > >::_M_copy<std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > >, std::_Select1st<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > > const*, std::_Rb_tree_node_base*, std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > >, std::_Select1st<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > > >::_Reuse_or_alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > >, std::_Select1st<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<int, int> const, std::vector<std::pair<std::pair<int, int>, bool>, std::allocator<std::pair<std::pair<int, int>, bool> > > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, int>, std::_Select1st<std::pair<std::pair<int, int> const, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, int> > >::_M_get_insert_unique_pos(std::pair<int, int> const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, int>, std::_Select1st<std::pair<std::pair<int, int> const, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<int, int> const, int> >*)@Base" 2.0.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool> std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_insert_unique<std::pair<int, int> >(std::pair<int, int>&&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int, int> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<std::vector<double, std::allocator<double> >, std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> >, std::_Select1st<std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> > >, std::less<std::vector<double, std::allocator<double> > >, std::allocator<std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> > > >::_M_get_insert_unique_pos(std::vector<double, std::allocator<double> > const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<std::vector<double, std::allocator<double> >, std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> >, std::_Select1st<std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> > >, std::less<std::vector<double, std::allocator<double> > >, std::allocator<std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::vector<double, std::allocator<double> > const, std::pair<int, int> > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<char, std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char>, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(char const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<char, std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char>, std::allocator<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<char const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<double, std::pair<double const, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<double const, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > >, std::less<double>, std::allocator<std::pair<double const, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > > >::_M_erase(std::_Rb_tree_node<std::pair<double const, std::vector<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree_iterator<std::pair<double const, double> > std::_Rb_tree<double, std::pair<double const, double>, std::_Select1st<std::pair<double const, double> >, std::less<double>, std::allocator<std::pair<double const, double> > >::_M_insert_equal<std::pair<double, double> >(std::pair<double, double>&&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<double, std::pair<double const, double>, std::_Select1st<std::pair<double const, double> >, std::less<double>, std::allocator<std::pair<double const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<double const, double> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree_iterator<std::pair<double const, long long> > std::_Rb_tree<double, std::pair<double const, long long>, std::_Select1st<std::pair<double const, long long> >, std::less<double>, std::allocator<std::pair<double const, long long> > >::_M_insert_equal<std::pair<double, long long> >(std::pair<double, long long>&&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<double, std::pair<double const, long long>, std::_Select1st<std::pair<double const, long long> >, std::less<double>, std::allocator<std::pair<double const, long long> > >::_M_erase(std::_Rb_tree_node<std::pair<double const, long long> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, GNMRule>, std::_Select1st<std::pair<int const, GNMRule> >, std::less<int>, std::allocator<std::pair<int const, GNMRule> > >::_M_get_insert_unique_pos(int const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, GNMRule>, std::_Select1st<std::pair<int const, GNMRule> >, std::less<int>, std::allocator<std::pair<int const, GNMRule> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, GNMRule> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, CPLString>, std::_Select1st<std::pair<int const, CPLString> >, std::less<int>, std::allocator<std::pair<int const, CPLString> > >::_M_get_insert_unique_pos(int const&)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, CPLString>, std::_Select1st<std::pair<int const, CPLString> >, std::less<int>, std::allocator<std::pair<int const, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, CPLString> >*)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, OGRGeometry*>, std::_Select1st<std::pair<int const, OGRGeometry*> >, std::less<int>, std::allocator<std::pair<int const, OGRGeometry*> > >::_M_get_insert_unique_pos(int const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, OGRGeometry*>, std::_Select1st<std::pair<int const, OGRGeometry*> >, std::less<int>, std::allocator<std::pair<int const, OGRGeometry*> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, OGRGeometry*> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, GDALRasterBand*>, std::_Select1st<std::pair<int const, GDALRasterBand*> >, std::less<int>, std::allocator<std::pair<int const, GDALRasterBand*> > >::_M_get_insert_unique_pos(int const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, GDALRasterBand*>, std::_Select1st<std::pair<int const, GDALRasterBand*> >, std::less<int>, std::allocator<std::pair<int const, GDALRasterBand*> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, GDALRasterBand*> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > >, std::_Select1st<std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > >, std::less<int>, std::allocator<std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > > >::_M_get_insert_unique_pos(int const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > >, std::_Select1st<std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > >, std::less<int>, std::allocator<std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::set<CPLString, std::less<CPLString>, std::allocator<CPLString> > > >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<int const, int> >*)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_get_insert_unique_pos(int const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, int> >, int const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::erase(int const&)@Base" 1.8.0 1
 (c++)"std::_Rb_tree_node<std::pair<int const, int> >* std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_copy<std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<int const, int> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_Reuse_or_alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*)@Base" 1.8.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::operator=(std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > > const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<int, std::pair<int const, unsigned int>, std::_Select1st<std::pair<int const, unsigned int> >, std::less<int>, std::allocator<std::pair<int const, unsigned int> > >::_M_get_insert_unique_pos(int const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<int, std::pair<int const, unsigned int>, std::_Select1st<std::pair<int const, unsigned int> >, std::less<int>, std::allocator<std::pair<int const, unsigned int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, unsigned int> >*)@Base" 1.8.0 1
 (c++)"std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int const&>(int const&)@Base" 2.1.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int>(int&&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::erase(int const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, CPLString>, std::_Select1st<std::pair<unsigned int const, CPLString> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, CPLString> > >::_M_get_insert_unique_pos(unsigned int const&)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, CPLString>, std::_Select1st<std::pair<unsigned int const, CPLString> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, CPLString> >*)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > > >::_M_get_insert_unique_pos(unsigned int const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > > >::erase(unsigned int const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > >, std::_Select1st<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, std::vector<CPLString, std::allocator<CPLString> > > >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, int> > >::_M_get_insert_unique_pos(unsigned int const&)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<unsigned int, std::pair<unsigned int const, int>, std::_Select1st<std::pair<unsigned int const, int> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, int> >*)@Base" 2.0.1 1
 (c++)"std::_Rb_tree<long, std::pair<long const, long>, std::_Select1st<std::pair<long const, long> >, std::less<long>, std::allocator<std::pair<long const, long> > >::_M_get_insert_unique_pos(long const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long, std::pair<long const, long>, std::_Select1st<std::pair<long const, long> >, std::less<long>, std::allocator<std::pair<long const, long> > >::_M_erase(std::_Rb_tree_node<std::pair<long const, long> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long, std::pair<long const, unsigned long long>, std::_Select1st<std::pair<long const, unsigned long long> >, std::less<long>, std::allocator<std::pair<long const, unsigned long long> > >::_M_get_insert_unique_pos(long const&)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<long, std::pair<long const, unsigned long long>, std::_Select1st<std::pair<long const, unsigned long long> >, std::less<long>, std::allocator<std::pair<long const, unsigned long long> > >::_M_erase(std::_Rb_tree_node<std::pair<long const, unsigned long long> >*)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<short, std::pair<short const, CADVariant>, std::_Select1st<std::pair<short const, CADVariant> >, std::less<short>, std::allocator<std::pair<short const, CADVariant> > >::_M_get_insert_unique_pos(short const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<short, std::pair<short const, CADVariant>, std::_Select1st<std::pair<short const, CADVariant> >, std::less<short>, std::allocator<std::pair<short const, CADVariant> > >::_M_erase(std::_Rb_tree_node<std::pair<short const, CADVariant> >*)@Base" 2.2.0 1
 (c++)"std::pair<std::_Rb_tree_iterator<unsigned short>, bool> std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_insert_unique<unsigned short const&>(unsigned short const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_erase(std::_Rb_tree_node<unsigned short>*)@Base" 1.11.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, CPLString>, std::_Select1st<std::pair<long long const, CPLString> >, std::less<long long>, std::allocator<std::pair<long long const, CPLString> > >::_M_get_insert_unique_pos(long long const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, CPLString>, std::_Select1st<std::pair<long long const, CPLString> >, std::less<long long>, std::allocator<std::pair<long long const, CPLString> > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, CPLString> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRFeature*>, std::_Select1st<std::pair<long long const, OGRFeature*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRFeature*> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<long long const, OGRFeature*> >*)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRFeature*>, std::_Select1st<std::pair<long long const, OGRFeature*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRFeature*> > >::_M_get_insert_unique_pos(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRFeature*>, std::_Select1st<std::pair<long long const, OGRFeature*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRFeature*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<long long const, OGRFeature*> >, long long const&)@Base" 2.1.1 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRFeature*>, std::_Select1st<std::pair<long long const, OGRFeature*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRFeature*> > >::find(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRFeature*>, std::_Select1st<std::pair<long long const, OGRFeature*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRFeature*> > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, OGRFeature*> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRLineString*>, std::_Select1st<std::pair<long long const, OGRLineString*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRLineString*> > >::_M_get_insert_unique_pos(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRLineString*>, std::_Select1st<std::pair<long long const, OGRLineString*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRLineString*> > >::find(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, OGRLineString*>, std::_Select1st<std::pair<long long const, OGRLineString*> >, std::less<long long>, std::allocator<std::pair<long long const, OGRLineString*> > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, OGRLineString*> >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, std::pair<double, double> >, std::_Select1st<std::pair<long long const, std::pair<double, double> > >, std::less<long long>, std::allocator<std::pair<long long const, std::pair<double, double> > > >::_M_get_insert_unique_pos(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, std::pair<double, double> >, std::_Select1st<std::pair<long long const, std::pair<double, double> > >, std::less<long long>, std::allocator<std::pair<long long const, std::pair<double, double> > > >::find(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, std::pair<double, double> >, std::_Select1st<std::pair<long long const, std::pair<double, double> > >, std::less<long long>, std::allocator<std::pair<long long const, std::pair<double, double> > > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, std::pair<double, double> > >*)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, std::pair<int, void*> >, std::_Select1st<std::pair<long long const, std::pair<int, void*> > >, std::less<long long>, std::allocator<std::pair<long long const, std::pair<int, void*> > > >::_M_get_insert_unique_pos(long long const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, std::pair<int, void*> >, std::_Select1st<std::pair<long long const, std::pair<int, void*> > >, std::less<long long>, std::allocator<std::pair<long long const, std::pair<int, void*> > > >::find(long long const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, std::pair<int, void*> >, std::_Select1st<std::pair<long long const, std::pair<int, void*> > >, std::less<long long>, std::allocator<std::pair<long long const, std::pair<int, void*> > > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, std::pair<int, void*> > >*)@Base" 1.10.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<std::pair<long long const, double> >, bool> std::_Rb_tree<long long, std::pair<long long const, double>, std::_Select1st<std::pair<long long const, double> >, std::less<long long>, std::allocator<std::pair<long long const, double> > >::_M_insert_unique<std::pair<long long, double> >(std::pair<long long, double>&&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, double>, std::_Select1st<std::pair<long long const, double> >, std::less<long long>, std::allocator<std::pair<long long const, double> > >::_M_get_insert_unique_pos(long long const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, double>, std::_Select1st<std::pair<long long const, double> >, std::less<long long>, std::allocator<std::pair<long long const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, double> >*)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, int>, std::_Select1st<std::pair<long long const, int> >, std::less<long long>, std::allocator<std::pair<long long const, int> > >::_M_get_insert_unique_pos(long long const&)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, int>, std::_Select1st<std::pair<long long const, int> >, std::less<long long>, std::allocator<std::pair<long long const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, int> >*)@Base" 1.10.1 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, long long>, std::_Select1st<std::pair<long long const, long long> >, std::less<long long>, std::allocator<std::pair<long long const, long long> > >::_M_get_insert_unique_pos(long long const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, long long>, std::_Select1st<std::pair<long long const, long long> >, std::less<long long>, std::allocator<std::pair<long long const, long long> > >::find(long long const&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, std::pair<long long const, long long>, std::_Select1st<std::pair<long long const, long long> >, std::less<long long>, std::allocator<std::pair<long long const, long long> > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, long long> >*)@Base" 2.2.0 1
 (c++)"std::pair<std::_Rb_tree_iterator<long long>, bool> std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_M_insert_unique<long long const&>(long long const&)@Base" 2.1.1 1
 (c++)"std::pair<std::_Rb_tree_iterator<long long>, bool> std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_M_insert_unique<long long>(long long&&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::find(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::erase(long long const&)@Base" 2.1.0 1
 (c++)"std::_Rb_tree_node<long long>* std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_M_copy<std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node>(std::_Rb_tree_node<long long> const*, std::_Rb_tree_node_base*, std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node&)@Base" 2.2.0 1
 (c++)"std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_M_erase(std::_Rb_tree_node<long long>*)@Base" 2.1.0 1
 (c++)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)@Base" 2.1.1 1
 (c++)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)@Base" 2.0.1 1
 (c++)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.1 1
 (c++)"typeinfo for AIGDataset@Base" 1.8.0 1
 (c++)"typeinfo for CADXRecord@Base" 2.2.0 1
 (c++)"typeinfo for GDALDriver@Base" 1.8.0 1
 (c++)"typeinfo for GNMNetwork@Base" 2.2.0 1
 (c++)"typeinfo for IGMLReader@Base" 1.8.0 1
 (c++)"typeinfo for MAPDataset@Base" 1.10.1 1
 (c++)"typeinfo for MEMDataset@Base" 1.8.0 1
 (c++)"typeinfo for OGRFeature@Base" 1.8.0 1
 (c++)"typeinfo for OGRPolygon@Base" 1.8.0 1
 (c++)"typeinfo for OGRSurface@Base" 1.8.0 1
 (c++)"typeinfo for RawDataset@Base" 1.8.0 1
 (c++)"typeinfo for TILDataset@Base" 1.8.0 1
 (c++)"typeinfo for VRTDataset@Base" 1.8.0 1
 (c++)"typeinfo for WCSDataset@Base" 1.8.0 1
 (c++)"typeinfo for AAIGDataset@Base" 1.8.0 1
 (c++)"typeinfo for GDALDataset@Base" 1.8.0 1
 (c++)"typeinfo for IILI1Reader@Base" 1.8.0 1
 (c++)"typeinfo for IILI2Reader@Base" 1.8.0 1
 (c++)"typeinfo for OGDIDataset@Base" 1.8.0 1
 (c++)"typeinfo for OGRGeometry@Base" 1.8.0 1
 (c++)"typeinfo for OGRSFDriver@Base" 1.8.0 1
 (c++)"typeinfo for OGRStylePen@Base" 1.8.0 1
 (c++)"typeinfo for OGRTriangle@Base" 2.2.0 1
 (c++)"typeinfo for OGRAttrIndex@Base" 1.8.0 1
 (c++)"typeinfo for OGRStyleTool@Base" 1.8.0 1
 (c++)"typeinfo for CADDictionary@Base" 2.2.0 1
 (c++)"typeinfo for MEMRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for OGRDataSource@Base" 1.8.0 1
 (c++)"typeinfo for OGRLineString@Base" 1.8.0 1
 (c++)"typeinfo for OGRLinearRing@Base" 1.8.0 1
 (c++)"typeinfo for OGRMultiCurve@Base" 2.0.1 1
 (c++)"typeinfo for OGRMultiPoint@Base" 1.8.0 1
 (c++)"typeinfo for OGRStyleBrush@Base" 1.8.0 1
 (c++)"typeinfo for OGRStyleLabel@Base" 1.8.0 1
 (c++)"typeinfo for RawRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for VRTRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALPamDataset@Base" 1.8.0 1
 (c++)"typeinfo for GDALRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALWarpKernel@Base" 1.8.0 1
 (c++)"typeinfo for OGRFeatureDefn@Base" 1.8.0 1
 (c++)"typeinfo for OGRSimpleCurve@Base" 2.0.1 1
 (c++)"typeinfo for OGRStyleSymbol@Base" 1.8.0 1
 (c++)"typeinfo for GDALAsyncReader@Base" 1.8.0 1
 (c++)"typeinfo for GDALMajorObject@Base" 1.8.0 1
 (c++)"typeinfo for GDALRasterBlock@Base" 1.8.0 1
 (c++)"typeinfo for OGRCurvePolygon@Base" 2.0.1 1
 (c++)"typeinfo for OGRMultiPolygon@Base" 1.8.0 1
 (c++)"typeinfo for OGRMultiSurface@Base" 2.0.1 1
 (c++)"typeinfo for OGRMutexedLayer@Base" 1.11.0 1
 (c++)"typeinfo for VRTSimpleSource@Base" 1.11.0 1
 (c++)"typeinfo for GDALProxyDataset@Base" 1.8.0 1
 (c++)"typeinfo for OGRCompoundCurve@Base" 2.0.1 1
 (c++)"typeinfo for OGREditableLayer@Base" 2.1.0 1
 (c++)"typeinfo for OGRGeomFieldDefn@Base" 1.11.0 1
 (c++)"typeinfo for OGRPointIterator@Base" 2.0.1 1
 (c++)"typeinfo for VRTComplexSource@Base" 1.11.0 1
 (c++)"typeinfo for VRTRawRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for VRTWarpedDataset@Base" 1.8.0 1
 (c++)"typeinfo for VSIVirtualHandle@Base" 1.8.0 1
 (c++)"typeinfo for GDALDriverManager@Base" 1.8.0 1
 (c++)"typeinfo for GDALPamRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALWarpOperation@Base" 1.8.0 1
 (c++)"typeinfo for GNMGenericNetwork@Base" 2.2.0 1
 (c++)"typeinfo for OGRCircularString@Base" 2.0.1 1
 (c++)"typeinfo for OGRLayerAttrIndex@Base" 1.8.0 1
 (c++)"typeinfo for OGRLayerDecorator@Base" 2.0.1 1
 (c++)"typeinfo for GDALNoDataMaskBand@Base" 1.8.0 1
 (c++)"typeinfo for OGRMultiLineString@Base" 1.8.0 1
 (c++)"typeinfo for GDALMDReaderManager@Base" 2.0.1 1
 (c++)"typeinfo for GDALProxyRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for OGRSpatialReference@Base" 1.8.0 1
 (c++)"typeinfo for VRTWarpedRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALAllValidMaskBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALGeorefPamDataset@Base" 1.11.0 1
 (c++)"typeinfo for GDALProxyPoolDataset@Base" 1.8.0 1
 (c++)"typeinfo for OGRMutexedDataSource@Base" 1.11.0 1
 (c++)"typeinfo for OGRPolyhedralSurface@Base" 2.2.0 1
 (c++)"typeinfo for VRTDerivedRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for VRTSourcedRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for VSIFilesystemHandler@Base" 1.8.0 1
 (c++)"typeinfo for OGRGenSQLResultsLayer@Base" 1.8.0 1
 (c++)"typeinfo for OGRGeometryCollection@Base" 1.8.0 1
 (c++)"typeinfo for GDALJP2AbstractDataset@Base" 1.11.0 1
 (c++)"typeinfo for OGRTriangulatedSurface@Base" 2.2.0 1
 (c++)"typeinfo for GDALProxyPoolRasterBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALNoDataValuesMaskBand@Base" 1.8.0 1
 (c++)"typeinfo for GDALRasterAttributeTable@Base" 1.11.0 1
 (c++)"typeinfo for IOGRTransactionBehaviour@Base" 2.0.1 1
 (c++)"typeinfo for GDALAbstractBandBlockCache@Base" 2.1.0 1
 (c++)"typeinfo for OGRCoordinateTransformation@Base" 1.8.0 1
 (c++)"typeinfo for IOGREditableLayerSynchronizer@Base" 2.1.0 1
 (c++)"typeinfo for GDALDefaultRasterAttributeTable@Base" 1.11.0 1
 (c++)"typeinfo for CPLErr@Base" 2.1.0 1
 (c++)"typeinfo for CADFile@Base" 2.2.0 1
 (c++)"typeinfo for GNMRule@Base" 2.2.0 1
 (c++)"typeinfo for GNMGraph@Base" 2.2.0 1
 (c++)"typeinfo for OGRCurve@Base" 1.8.0 1
 (c++)"typeinfo for OGRLayer@Base" 1.8.0 1
 (c++)"typeinfo for OGRPoint@Base" 1.8.0 1
 (c++)"typeinfo for CPLString@Base" 2.1.0 1
 (c++)"typeinfo for VRTSource@Base" 1.11.0 1
 (c++)"typeinfo for std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >@Base" 2.1.0 1
 (c++)"typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>@Base" 2.2.0 1
 (c++)"typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>@Base" 2.2.0 1
 (c++)"typeinfo name for AIGDataset@Base" 1.8.0 1
 (c++)"typeinfo name for CADXRecord@Base" 2.2.0 1
 (c++)"typeinfo name for GDALDriver@Base" 1.8.0 1
 (c++)"typeinfo name for GNMNetwork@Base" 2.2.0 1
 (c++)"typeinfo name for IGMLReader@Base" 1.8.0 1
 (c++)"typeinfo name for MAPDataset@Base" 1.10.1 1
 (c++)"typeinfo name for MEMDataset@Base" 1.8.0 1
 (c++)"typeinfo name for OGRFeature@Base" 1.8.0 1
 (c++)"typeinfo name for OGRPolygon@Base" 1.8.0 1
 (c++)"typeinfo name for OGRSurface@Base" 1.8.0 1
 (c++)"typeinfo name for RawDataset@Base" 1.8.0 1
 (c++)"typeinfo name for TILDataset@Base" 1.8.0 1
 (c++)"typeinfo name for VRTDataset@Base" 1.8.0 1
 (c++)"typeinfo name for WCSDataset@Base" 1.8.0 1
 (c++)"typeinfo name for AAIGDataset@Base" 1.8.0 1
 (c++)"typeinfo name for GDALDataset@Base" 1.8.0 1
 (c++)"typeinfo name for IILI1Reader@Base" 1.8.0 1
 (c++)"typeinfo name for IILI2Reader@Base" 1.8.0 1
 (c++)"typeinfo name for OGDIDataset@Base" 1.8.0 1
 (c++)"typeinfo name for OGRGeometry@Base" 1.8.0 1
 (c++)"typeinfo name for OGRSFDriver@Base" 1.8.0 1
 (c++)"typeinfo name for OGRStylePen@Base" 1.8.0 1
 (c++)"typeinfo name for OGRTriangle@Base" 2.2.0 1
 (c++)"typeinfo name for OGRAttrIndex@Base" 1.8.0 1
 (c++)"typeinfo name for OGRStyleTool@Base" 1.8.0 1
 (c++)"typeinfo name for CADDictionary@Base" 2.2.0 1
 (c++)"typeinfo name for MEMRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for OGRDataSource@Base" 1.8.0 1
 (c++)"typeinfo name for OGRLineString@Base" 1.8.0 1
 (c++)"typeinfo name for OGRLinearRing@Base" 1.8.0 1
 (c++)"typeinfo name for OGRMultiCurve@Base" 2.0.1 1
 (c++)"typeinfo name for OGRMultiPoint@Base" 1.8.0 1
 (c++)"typeinfo name for OGRStyleBrush@Base" 1.8.0 1
 (c++)"typeinfo name for OGRStyleLabel@Base" 1.8.0 1
 (c++)"typeinfo name for RawRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for VRTRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALPamDataset@Base" 1.8.0 1
 (c++)"typeinfo name for GDALRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALWarpKernel@Base" 1.8.0 1
 (c++)"typeinfo name for OGRFeatureDefn@Base" 1.8.0 1
 (c++)"typeinfo name for OGRSimpleCurve@Base" 2.0.1 1
 (c++)"typeinfo name for OGRStyleSymbol@Base" 1.8.0 1
 (c++)"typeinfo name for GDALAsyncReader@Base" 1.8.0 1
 (c++)"typeinfo name for GDALMajorObject@Base" 1.8.0 1
 (c++)"typeinfo name for GDALRasterBlock@Base" 1.8.0 1
 (c++)"typeinfo name for OGRCurvePolygon@Base" 2.0.1 1
 (c++)"typeinfo name for OGRMultiPolygon@Base" 1.8.0 1
 (c++)"typeinfo name for OGRMultiSurface@Base" 2.0.1 1
 (c++)"typeinfo name for OGRMutexedLayer@Base" 1.11.0 1
 (c++)"typeinfo name for VRTSimpleSource@Base" 1.11.0 1
 (c++)"typeinfo name for GDALProxyDataset@Base" 1.8.0 1
 (c++)"typeinfo name for OGRCompoundCurve@Base" 2.0.1 1
 (c++)"typeinfo name for OGREditableLayer@Base" 2.1.0 1
 (c++)"typeinfo name for OGRGeomFieldDefn@Base" 1.11.0 1
 (c++)"typeinfo name for OGRPointIterator@Base" 2.0.1 1
 (c++)"typeinfo name for VRTComplexSource@Base" 1.11.0 1
 (c++)"typeinfo name for VRTRawRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for VRTWarpedDataset@Base" 1.8.0 1
 (c++)"typeinfo name for VSIVirtualHandle@Base" 1.8.0 1
 (c++)"typeinfo name for GDALDriverManager@Base" 1.8.0 1
 (c++)"typeinfo name for GDALPamRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALWarpOperation@Base" 1.8.0 1
 (c++)"typeinfo name for GNMGenericNetwork@Base" 2.2.0 1
 (c++)"typeinfo name for OGRCircularString@Base" 2.0.1 1
 (c++)"typeinfo name for OGRLayerAttrIndex@Base" 1.8.0 1
 (c++)"typeinfo name for OGRLayerDecorator@Base" 2.0.1 1
 (c++)"typeinfo name for GDALNoDataMaskBand@Base" 1.8.0 1
 (c++)"typeinfo name for OGRMultiLineString@Base" 1.8.0 1
 (c++)"typeinfo name for GDALMDReaderManager@Base" 2.0.1 1
 (c++)"typeinfo name for GDALProxyRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for OGRSpatialReference@Base" 1.8.0 1
 (c++)"typeinfo name for VRTWarpedRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALAllValidMaskBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALGeorefPamDataset@Base" 1.11.0 1
 (c++)"typeinfo name for GDALProxyPoolDataset@Base" 1.8.0 1
 (c++)"typeinfo name for OGRMutexedDataSource@Base" 1.11.0 1
 (c++)"typeinfo name for OGRPolyhedralSurface@Base" 2.2.0 1
 (c++)"typeinfo name for VRTDerivedRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for VRTSourcedRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for VSIFilesystemHandler@Base" 1.8.0 1
 (c++)"typeinfo name for OGRGenSQLResultsLayer@Base" 1.8.0 1
 (c++)"typeinfo name for OGRGeometryCollection@Base" 1.8.0 1
 (c++)"typeinfo name for GDALJP2AbstractDataset@Base" 1.11.0 1
 (c++)"typeinfo name for OGRTriangulatedSurface@Base" 2.2.0 1
 (c++)"typeinfo name for GDALProxyPoolRasterBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALNoDataValuesMaskBand@Base" 1.8.0 1
 (c++)"typeinfo name for GDALRasterAttributeTable@Base" 1.11.0 1
 (c++)"typeinfo name for IOGRTransactionBehaviour@Base" 2.0.1 1
 (c++)"typeinfo name for GDALAbstractBandBlockCache@Base" 2.1.0 1
 (c++)"typeinfo name for OGRCoordinateTransformation@Base" 1.8.0 1
 (c++)"typeinfo name for IOGREditableLayerSynchronizer@Base" 2.1.0 1
 (c++)"typeinfo name for GDALDefaultRasterAttributeTable@Base" 1.11.0 1
 (c++)"typeinfo name for CPLErr@Base" 2.1.0 1
 (c++)"typeinfo name for CADFile@Base" 2.2.0 1
 (c++)"typeinfo name for GNMRule@Base" 2.2.0 1
 (c++)"typeinfo name for GNMGraph@Base" 2.2.0 1
 (c++)"typeinfo name for OGRCurve@Base" 1.8.0 1
 (c++)"typeinfo name for OGRLayer@Base" 1.8.0 1
 (c++)"typeinfo name for OGRPoint@Base" 1.8.0 1
 (c++)"typeinfo name for CPLString@Base" 2.1.0 1
 (c++)"typeinfo name for VRTSource@Base" 1.11.0 1
 (c++)"typeinfo name for std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >@Base" 2.1.0 1
 (c++)"typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>@Base" 2.2.0 1
 (c++)"typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>@Base" 2.2.0 1
 (c++)"vtable for AIGDataset@Base" 1.8.0 1
 (c++)"vtable for CADXRecord@Base" 2.2.0 1
 (c++)"vtable for GDALDriver@Base" 1.8.0 1
 (c++)"vtable for GNMNetwork@Base" 2.2.0 1
 (c++)"vtable for IGMLReader@Base" 1.8.0 1
 (c++)"vtable for MAPDataset@Base" 1.10.1 1
 (c++)"vtable for MEMDataset@Base" 1.8.0 1
 (c++)"vtable for OGRFeature@Base" 1.8.0 1
 (c++)"vtable for OGRPolygon@Base" 1.8.0 1
 (c++)"vtable for OGRSurface@Base" 1.8.0 1
 (c++)"vtable for RawDataset@Base" 1.8.0 1
 (c++)"vtable for TILDataset@Base" 1.8.0 1
 (c++)"vtable for VRTDataset@Base" 1.8.0 1
 (c++)"vtable for WCSDataset@Base" 1.8.0 1
 (c++)"vtable for AAIGDataset@Base" 1.8.0 1
 (c++)"vtable for GDALDataset@Base" 1.8.0 1
 (c++)"vtable for IILI1Reader@Base" 1.8.0 1
 (c++)"vtable for IILI2Reader@Base" 1.8.0 1
 (c++)"vtable for OGDIDataset@Base" 1.8.0 1
 (c++)"vtable for OGRGeometry@Base" 1.8.0 1
 (c++)"vtable for OGRSFDriver@Base" 1.8.0 1
 (c++)"vtable for OGRStylePen@Base" 1.8.0 1
 (c++)"vtable for OGRTriangle@Base" 2.2.0 1
 (c++)"vtable for OGRAttrIndex@Base" 1.8.0 1
 (c++)"vtable for OGRStyleTool@Base" 1.8.0 1
 (c++)"vtable for CADDictionary@Base" 2.2.0 1
 (c++)"vtable for MEMRasterBand@Base" 1.8.0 1
 (c++)"vtable for OGRDataSource@Base" 1.8.0 1
 (c++)"vtable for OGRLineString@Base" 1.8.0 1
 (c++)"vtable for OGRLinearRing@Base" 1.8.0 1
 (c++)"vtable for OGRMultiCurve@Base" 2.0.1 1
 (c++)"vtable for OGRMultiPoint@Base" 1.8.0 1
 (c++)"vtable for OGRStyleBrush@Base" 1.8.0 1
 (c++)"vtable for OGRStyleLabel@Base" 1.8.0 1
 (c++)"vtable for RawRasterBand@Base" 1.8.0 1
 (c++)"vtable for VRTRasterBand@Base" 1.8.0 1
 (c++)"vtable for GDALPamDataset@Base" 1.8.0 1
 (c++)"vtable for GDALRasterBand@Base" 1.8.0 1
 (c++)"vtable for GDALWarpKernel@Base" 1.8.0 1
 (c++)"vtable for OGRFeatureDefn@Base" 1.8.0 1
 (c++)"vtable for OGRSimpleCurve@Base" 2.0.1 1
 (c++)"vtable for OGRStyleSymbol@Base" 1.8.0 1
 (c++)"vtable for GDALAsyncReader@Base" 1.8.0 1
 (c++)"vtable for GDALMajorObject@Base" 1.8.0 1
 (c++)"vtable for GDALRasterBlock@Base" 1.8.0 1
 (c++)"vtable for OGRCurvePolygon@Base" 2.0.1 1
 (c++)"vtable for OGRMultiPolygon@Base" 1.8.0 1
 (c++)"vtable for OGRMultiSurface@Base" 2.0.1 1
 (c++)"vtable for OGRMutexedLayer@Base" 1.11.0 1
 (c++)"vtable for VRTSimpleSource@Base" 1.11.0 1
 (c++)"vtable for GDALProxyDataset@Base" 1.8.0 1
 (c++)"vtable for OGRCompoundCurve@Base" 2.0.1 1
 (c++)"vtable for OGREditableLayer@Base" 2.1.0 1
 (c++)"vtable for OGRGeomFieldDefn@Base" 1.11.0 1
 (c++)"vtable for OGRPointIterator@Base" 2.0.1 1
 (c++)"vtable for VRTComplexSource@Base" 1.11.0 1
 (c++)"vtable for VRTRawRasterBand@Base" 1.8.0 1
 (c++)"vtable for VRTWarpedDataset@Base" 1.8.0 1
 (c++)"vtable for VSIVirtualHandle@Base" 1.8.0 1
 (c++)"vtable for GDALDriverManager@Base" 1.8.0 1
 (c++)"vtable for GDALPamRasterBand@Base" 1.8.0 1
 (c++)"vtable for GDALWarpOperation@Base" 1.8.0 1
 (c++)"vtable for GNMGenericNetwork@Base" 2.2.0 1
 (c++)"vtable for OGRCircularString@Base" 2.0.1 1
 (c++)"vtable for OGRLayerAttrIndex@Base" 1.8.0 1
 (c++)"vtable for OGRLayerDecorator@Base" 2.0.1 1
 (c++)"vtable for GDALNoDataMaskBand@Base" 1.8.0 1
 (c++)"vtable for OGRMultiLineString@Base" 1.8.0 1
 (c++)"vtable for GDALMDReaderManager@Base" 2.0.1 1
 (c++)"vtable for GDALProxyRasterBand@Base" 1.8.0 1
 (c++)"vtable for OGRSpatialReference@Base" 1.8.0 1
 (c++)"vtable for VRTWarpedRasterBand@Base" 1.8.0 1
 (c++)"vtable for GDALAllValidMaskBand@Base" 1.8.0 1
 (c++)"vtable for GDALGeorefPamDataset@Base" 1.11.0 1
 (c++)"vtable for GDALProxyPoolDataset@Base" 1.8.0 1
 (c++)"vtable for OGRMutexedDataSource@Base" 1.11.0 1
 (c++)"vtable for OGRPolyhedralSurface@Base" 2.2.0 1
 (c++)"vtable for VRTDerivedRasterBand@Base" 1.8.0 1
 (c++)"vtable for VRTSourcedRasterBand@Base" 1.8.0 1
 (c++)"vtable for OGRGenSQLResultsLayer@Base" 1.8.0 1
 (c++)"vtable for OGRGeometryCollection@Base" 1.8.0 1
 (c++)"vtable for GDALJP2AbstractDataset@Base" 1.11.0 1
 (c++)"vtable for OGRTriangulatedSurface@Base" 2.2.0 1
 (c++)"vtable for GDALProxyPoolRasterBand@Base" 1.8.0 1
 (c++)"vtable for GDALNoDataValuesMaskBand@Base" 1.8.0 1
 (c++)"vtable for GDALRasterAttributeTable@Base" 1.11.0 1
 (c++)"vtable for IOGRTransactionBehaviour@Base" 2.0.1 1
 (c++)"vtable for GDALAbstractBandBlockCache@Base" 2.1.0 1
 (c++)"vtable for IOGREditableLayerSynchronizer@Base" 2.1.0 1
 (c++)"vtable for GDALDefaultRasterAttributeTable@Base" 1.11.0 1
 (c++)"vtable for CADFile@Base" 2.2.0 1
 (c++)"vtable for GNMRule@Base" 2.2.0 1
 (c++)"vtable for GNMGraph@Base" 2.2.0 1
 (c++)"vtable for OGRCurve@Base" 1.8.0 1
 (c++)"vtable for OGRLayer@Base" 1.8.0 1
 (c++)"vtable for OGRPoint@Base" 1.8.0 1
 (c++)"vtable for VRTSource@Base" 1.11.0 1
 (c++)"CPLErr VRTComplexSource::RasterIOInternal<double>(int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*, GDALDataType)::bHasWarned@Base" 2.1.2 1
 (c++)"CPLErr VRTComplexSource::RasterIOInternal<float>(int, int, int, int, void*, int, int, GDALDataType, long long, long long, GDALRasterIOExtraArg*, GDALDataType)::bHasWarned@Base" 2.1.2 1
