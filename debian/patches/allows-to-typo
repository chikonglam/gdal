Description: Fix 'allows to' typo, replace with 'allows <verb>ing'.
Author: Bas Couwenberg <sebastic@xs4all.nl>
Forwarded: http://trac.osgeo.org/gdal/ticket/5995

--- a/NEWS
+++ b/NEWS
@@ -2006,7 +2006,7 @@ NetCDF driver:
  * Fix SetNoDataValue() - do not update when already set to new value (#4484)
  * Convert longitude values in [180,360] interval to [-180,180] (#4512) - override with config option GDAL_NETCDF_CENTERLONG_180=0
  * Support 2D GEOLOCATION arrays when a projected variable has coordinates attribute and supporting lon/at arrays (#4513)
- * Ignore coordinate and bounds variables (CF sections 5.2, 5.6 and 7.1) as raster bands, but expose them as subdatasets - this allows to open files with projected SRS (or dimension bounds) directly, without specifying the variable as a subdataset
+ * Ignore coordinate and bounds variables (CF sections 5.2, 5.6 and 7.1) as raster bands, but expose them as subdatasets - this allows opening files with projected SRS (or dimension bounds) directly, without specifying the variable as a subdataset
  * Better support for Gaussian grids - store original latitude values in special Y_VALUES geolocation metadata item and use it for netcdf export (#4514)
  * Write multi-dimensional variables to a single variable (not one for each unrolled band) in CreateCopy() (#2581)
  * Fix handling of km units in netcdf driver and importFromProj4() (#4769)
--- a/configure.in
+++ b/configure.in
@@ -1671,7 +1671,7 @@ dnl Not found... again, with -lsz.
     fi
 
     dnl HDF4 library newer than 4.2.5 has a SDreset_maxopenfiles/SDget_maxopenfiles interface
-    dnl which allows to open many HDF files simultaneously (the max number of files was previously
+    dnl which allows opening many HDF files simultaneously (the max number of files was previously
     dnl hardcoded and too low, smth. like 32). Search for it and use if available.
     AC_CHECK_LIB(mfhdfalt,SDget_maxopenfiles,HDF4_HAS_MAXOPENFILES=yes,HDF4_HAS_MAXOPENFILES=no,$HDF_LIB_NAME)
     if test "$HDF4_HAS_MAXOPENFILES" = "no" ; then
--- a/frmts/e00grid/e00read.c
+++ b/frmts/e00grid/e00read.c
@@ -243,7 +243,7 @@ void    E00ReadClose(E00ReadPtr psInfo)
 /**********************************************************************
  *                          E00ReadRewind()
  *
- * Rewind the E00ReadPtr.  Allows to start another read pass on the 
+ * Rewind the E00ReadPtr.  Allows starting another read pass on the 
  * input file.
  **********************************************************************/
 void    E00ReadRewind(E00ReadPtr psInfo)
--- a/frmts/mbtiles/frmt_mbtiles.html
+++ b/frmts/mbtiles/frmt_mbtiles.html
@@ -9,7 +9,7 @@
 
 <h1>MBTiles</h1>
 
-<p>Starting with GDAL 1.10, the MBTiles driver allows to read rasters in the MBTiles format,
+<p>Starting with GDAL 1.10, the MBTiles driver allows reading rasters in the MBTiles format,
 which is a specification for storing tiled map data in SQLite databases.</p>
 
 <p>GDAL/OGR must be compiled with OGR SQLite driver support, and JPEG and PNG drivers.</p>
--- a/frmts/rasdaman/frmt_rasdaman.html
+++ b/frmts/rasdaman/frmt_rasdaman.html
@@ -15,7 +15,7 @@ consideration for OSGeo incubation.</p>
 
 <p>In our driver implementation, GDAL connects to rasdaman by defining a
 query template which is instantiated with the concrete subsetting box
-upon every access. This allows to deliver 2-D cutouts from n-D data sets
+upon every access. This allows delivering 2-D cutouts from n-D data sets
 (such as hyperspectral satellite time series, multi-variable climate
 simulation data, ocean model data, etc.). In particular, virtual imagery
 can be offered which is derived on demand from ground truth data. Some
--- a/nmake.opt
+++ b/nmake.opt
@@ -352,7 +352,7 @@ JPEG12_SUPPORTED = 1
 #HDF4_DIR =	D:\warmerda\HDF41r5
 #HDF4_LIB =	/LIBPATH:$(HDF4_DIR)\lib Ws2_32.lib
 # HDF4 library newer than 4.2.5 has a SDreset_maxopenfiles/SDget_maxopenfiles
-# interface which allows to open many HDF files simultaneously (the max
+# interface which allows opening many HDF files simultaneously (the max
 # number of files was previously hardcoded and too low, smth. like 32).
 # Uncomment following if your library is newer than 4.2.5.
 #HDF4_HAS_MAXOPENFILES = YES
--- a/ogr/ogrsf_frmts/selafin/drv_selafin.html
+++ b/ogr/ogrsf_frmts/selafin/drv_selafin.html
@@ -195,7 +195,7 @@ Numbers can also be negative. In this ca
 	<dt>TITLE</dt>
 	<dd>Title of the datasource, stored in the Selafin file. The title must not hold more than 72 characters. If it is longer, it will be truncated to fit in the file.</dd>
 	<dt>DATE</dt>
-	<dd>Starting date of the simulation. Each layer in a Selafin file is characterized by a date, counted in seconds since a reference date. This option allows to provide the reference date. The format of this field must be YYYY-MM-DD_hh:mm:ss. The format does not mention the time zone.</dd>
+	<dd>Starting date of the simulation. Each layer in a Selafin file is characterized by a date, counted in seconds since a reference date. This option allows providing the reference date. The format of this field must be YYYY-MM-DD_hh:mm:ss. The format does not mention the time zone.</dd>
 </dl>
 
 <p>An example of datasource creation option is: <tt>-dsco TITLE="My simulation" -dsco DATE=2014-05-01_10:00:00</tt>.
--- a/ogr/ogrsf_frmts/selafin/ogrselafindriver.cpp
+++ b/ogr/ogrsf_frmts/selafin/ogrselafindriver.cpp
@@ -182,7 +182,7 @@ void RegisterOGRSelafin() {
         poDriver->SetMetadataItem( GDAL_DMD_CREATIONOPTIONLIST,
 "<CreationOptionList>"
 "  <Option name='TITLE' type='string' description='Title of the datasource, stored in the Selafin file. The title must not hold more than 72 characters.'/>"
-"  <Option name='DATE' type='string' description='Starting date of the simulation. Each layer in a Selafin file is characterized by a date, counted in seconds since a reference date. This option allows to provide the reference date. The format of this field must be YYYY-MM-DD_hh:mm:ss'/>"
+"  <Option name='DATE' type='string' description='Starting date of the simulation. Each layer in a Selafin file is characterized by a date, counted in seconds since a reference date. This option allows providing the reference date. The format of this field must be YYYY-MM-DD_hh:mm:ss'/>"
 "</CreationOptionList>");
         poDriver->SetMetadataItem( GDAL_DS_LAYER_CREATIONOPTIONLIST,
 "<LayerCreationOptionList>"
--- a/ogr/ogrsf_frmts/sqlite/drv_sqlite.html
+++ b/ogr/ogrsf_frmts/sqlite/drv_sqlite.html
@@ -309,7 +309,7 @@ appropriately in order to get optimal pe
 The default OGR behavior is to COMMIT a transaction every 200 inserted rows. This
 value is surely too low for SQLite; and closing too much frequently the current
 transaction causes severe performance degradation.
-The <b>-gt</b> argument allows to explicitly set the number of rows for each transaction.
+The <b>-gt</b> argument allows explicitly setting the number of rows for each transaction.
 Explicitly defining <b>-gt 1024</b> usually ensures a noticeable performance boost;
 defining an even bigger <b>-gt 65536</b> ensures optimal performance while
 populating some table containing many hundredth thousand or million rows.<p>
--- a/swig/php/gdal_wrap.cpp
+++ b/swig/php/gdal_wrap.cpp
@@ -259,7 +259,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/php/gdalconst_wrap.c
+++ b/swig/php/gdalconst_wrap.c
@@ -235,7 +235,7 @@
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/php/ogr_wrap.cpp
+++ b/swig/php/ogr_wrap.cpp
@@ -259,7 +259,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/php/osr_wrap.cpp
+++ b/swig/php/osr_wrap.cpp
@@ -259,7 +259,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/python/extensions/gdal_array_wrap.cpp
+++ b/swig/python/extensions/gdal_array_wrap.cpp
@@ -264,7 +264,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/python/extensions/gdal_wrap.cpp
+++ b/swig/python/extensions/gdal_wrap.cpp
@@ -264,7 +264,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/python/extensions/gdalconst_wrap.c
+++ b/swig/python/extensions/gdalconst_wrap.c
@@ -240,7 +240,7 @@
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/python/extensions/ogr_wrap.cpp
+++ b/swig/python/extensions/ogr_wrap.cpp
@@ -264,7 +264,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
--- a/swig/python/extensions/osr_wrap.cpp
+++ b/swig/python/extensions/osr_wrap.cpp
@@ -264,7 +264,7 @@ template <typename T> T SwigValueInit()
    SWIG errors code.
 
    Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
-   allows to return the 'cast rank', for example, if you have this
+   allows returning the 'cast rank', for example, if you have this
 
        int food(double)
        int fooi(int);
