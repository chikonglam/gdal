Description: Fix 'supress' typo, replace with 'suppress'.
Author: Bas Couwenberg <sebastic@xs4all.nl>
Forwarded: http://trac.osgeo.org/gdal/ticket/5995
Applied-Upstream: https://trac.osgeo.org/gdal/changeset/29330

--- a/ogr/ogrsf_frmts/arcobjects/aolayer.cpp
+++ b/ogr/ogrsf_frmts/arcobjects/aolayer.cpp
@@ -37,7 +37,7 @@
 /************************************************************************/
 AOLayer::AOLayer():
 OGRLayer(),m_pFeatureDefn(NULL),m_pSRS(NULL), m_ipQF(CLSID_QueryFilter),
-m_pBuffer(NULL), m_bufferSize(0), m_supressColumnMappingError(false),m_forceMulti(false)
+m_pBuffer(NULL), m_bufferSize(0), m_suppressColumnMappingError(false),m_forceMulti(false)
 {
 }
 
@@ -419,7 +419,7 @@ bool AOLayer::OGRFeatureFromAORow(IRow*
       */
     default:
       {
-        if (!m_supressColumnMappingError)
+        if (!m_suppressColumnMappingError)
         {
           foundBadColumn = true;
           CPLError( CE_Warning, CPLE_AppDefined, "Row id: %d col:%d has unhandled col type (%d). Setting to NULL.", oid, i, m_pFeatureDefn->GetFieldDefn(i)->GetType());
@@ -429,7 +429,7 @@ bool AOLayer::OGRFeatureFromAORow(IRow*
   }
   
   if (foundBadColumn)
-    m_supressColumnMappingError = true;
+    m_suppressColumnMappingError = true;
   
 
   *ppFeature = pOutFeature;
--- a/ogr/ogrsf_frmts/arcobjects/ogr_ao.h
+++ b/ogr/ogrsf_frmts/arcobjects/ogr_ao.h
@@ -115,7 +115,7 @@ protected:
     //buffers are used for avoiding constant reallocation of temp memory
     unsigned char* m_pBuffer;
     long  m_bufferSize; //in bytes
-    bool  m_supressColumnMappingError;
+    bool  m_suppressColumnMappingError;
     bool  m_forceMulti;
 };
 
--- a/ogr/ogrsf_frmts/filegdb/FGdbLayer.cpp
+++ b/ogr/ogrsf_frmts/filegdb/FGdbLayer.cpp
@@ -47,7 +47,7 @@ using std::wstring;
 /************************************************************************/
 FGdbBaseLayer::FGdbBaseLayer() :
     m_pFeatureDefn(NULL), m_pSRS(NULL), m_pEnumRows(NULL),
-    m_supressColumnMappingError(false), m_forceMulti(false)
+    m_suppressColumnMappingError(false), m_forceMulti(false)
 {
 }
 
@@ -2537,7 +2537,7 @@ bool FGdbBaseLayer::OGRFeatureFromGdbRow
 
             default:
             {
-                if (!m_supressColumnMappingError)
+                if (!m_suppressColumnMappingError)
                 {
                     foundBadColumn = true;
                     CPLError( CE_Warning, CPLE_AppDefined,
@@ -2549,7 +2549,7 @@ bool FGdbBaseLayer::OGRFeatureFromGdbRow
     }
 
     if (foundBadColumn)
-        m_supressColumnMappingError = true;
+        m_suppressColumnMappingError = true;
 
 
     *ppFeature = pOutFeature;
--- a/ogr/ogrsf_frmts/filegdb/FGdbResultLayer.cpp
+++ b/ogr/ogrsf_frmts/filegdb/FGdbResultLayer.cpp
@@ -48,7 +48,7 @@ FGdbResultLayer::FGdbResultLayer(FGdbDat
     m_pDS = pParentDataSource;
     osSQL = pszSQL;
 
-    m_supressColumnMappingError = false;
+    m_suppressColumnMappingError = false;
 
     FieldInfo fieldInfo;
     m_pEnumRows->GetFieldInformation(fieldInfo);
--- a/ogr/ogrsf_frmts/filegdb/ogr_fgdb.h
+++ b/ogr/ogrsf_frmts/filegdb/ogr_fgdb.h
@@ -82,7 +82,7 @@ protected:
   std::vector<std::wstring> m_vOGRFieldToESRIField; //OGR Field Index to ESRI Field Name Mapping
   std::vector<std::string> m_vOGRFieldToESRIFieldType; //OGR Field Index to ESRI Field Type Mapping
 
-  bool  m_supressColumnMappingError;
+  bool  m_suppressColumnMappingError;
   bool  m_forceMulti;
 
   bool OGRFeatureFromGdbRow(Row* pRow, OGRFeature** ppFeature);
--- a/NEWS
+++ b/NEWS
@@ -204,7 +204,7 @@ Utilities:
  * pct2rgb.py: make it work with color tables with less than 256 entries (#5555)
  * gdal_fillnodata.py: FillNodata: copy no data value to destination band when creating a dataset (if available) (#4625)
  * gdal_proximity.py: add a -use_input_nodata flag
- * gdalcompare.py: add options to supress selected comparisons
+ * gdalcompare.py: add options to suppress selected comparisons
  * gdalcompare.py: takes into account differences in overview bands
  * gdalcompare.py: compute difference on float to avoid integer underflow
  * epsg_tr.py: change to make it possible to export GEOCCS and COMPD_CS to proj.4 epsg and PostGIS spatial_ref_sys.sql files
