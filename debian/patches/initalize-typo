Description: Fix 'initialized' typo, replace with 'initialized'.
Author: Bas Couwenberg <sebastic@xs4all.nl>
Last-Update: 2013-10-11
--- a/apps/gdal_utilities.dox
+++ b/apps/gdal_utilities.dox
@@ -1359,7 +1359,7 @@ Create an image with the pixels in all b
 \endverbatim
 
 Create an RGB image that shows blue in pixels with no data. The first two bands
-will be initialized to 0 and the third band will be initalized to 255.
+will be initialized to 0 and the third band will be initialized to 255.
 
 \verbatim
 % gdal_merge.py -init "0 0 255" -o out.tif in1.tif in2.tif
--- a/man/man1/gdal_merge.1
+++ b/man/man1/gdal_merge.1
@@ -67,7 +67,7 @@ Create an image with the pixels in all b
 .fi
 .PP
 .PP
-Create an RGB image that shows blue in pixels with no data. The first two bands will be initialized to 0 and the third band will be initalized to 255.
+Create an RGB image that shows blue in pixels with no data. The first two bands will be initialized to 0 and the third band will be initialized to 255.
 .PP
 .PP
 .nf
--- a/ogr/ogrsf_frmts/ili/ili2reader.cpp
+++ b/ogr/ogrsf_frmts/ili/ili2reader.cpp
@@ -614,7 +614,7 @@ int ILI2Reader::SetupParser() {
         {
             char* msg = XMLString::transcode(toCatch.getMessage());
             CPLError( CE_Failure, CPLE_AppDefined,
-                      "Unable to initalize Xerces C++ based ILI2 reader. "
+                      "Unable to initialize Xerces C++ based ILI2 reader. "
                       "Error message:\n%s\n", msg );
             XMLString::release(&msg);
 
--- a/ogr/ogrsf_frmts/tiger/ogr_tiger.h
+++ b/ogr/ogrsf_frmts/tiger/ogr_tiger.h
@@ -82,7 +82,7 @@ const char * TigerVersionString( TigerVe
 /*****************************************************************************/
 /* The TigerFieldInfo and TigerRecordInfo structures hold information about  */
 /* the schema of a TIGER record type.  In each layer implementation file     */
-/* there are statically initalized variables of these types that describe    */
+/* there are statically initialized variables of these types that describe    */
 /* the record types associated with that layer.  In the case where different */
 /* TIGER versions have different schemas, there is a                         */
 /* TigerFieldInfo/TigerRecordInfo for each version, and the constructor      */
